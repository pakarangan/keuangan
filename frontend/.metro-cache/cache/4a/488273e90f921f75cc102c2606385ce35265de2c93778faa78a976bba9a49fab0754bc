{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./infoLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":32}}],"key":"PiNqERstAurHS3euL+PQR03s66E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _global$nativeQPLTime;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createPerformanceLogger;\n    }\n  });\n  Object.defineProperty(exports, \"getCurrentTimestamp\", {\n    enumerable: true,\n    get: function () {\n      return getCurrentTimestamp;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _infoLog = require(_dependencyMap[2], \"./infoLog\");\n  var infoLog = _interopDefault(_infoLog);\n  var PRINT_TO_CONSOLE = false;\n  var getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : function () {\n    return global.performance.now();\n  };\n  var PerformanceLogger = /*#__PURE__*/function () {\n    function PerformanceLogger() {\n      (0, _classCallCheck.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n    }\n    return (0, _createClass.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = Object.assign({}, performanceLogger.getTimespans(), this._timespans);\n        this._extras = Object.assign({}, performanceLogger.getExtras(), this._extras);\n        this._points = Object.assign({}, performanceLogger.getPoints(), this._points);\n        this._pointExtras = Object.assign({}, performanceLogger.getPointExtras(), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, infoLog.default)('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, infoLog.default)('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              (0, infoLog.default)(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n          (0, infoLog.default)(this._extras);\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              (0, infoLog.default)(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n          return;\n        }\n        this._points[key] = timestamp;\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n          return;\n        }\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        if (PRINT_TO_CONSOLE) {\n          (0, infoLog.default)('PerformanceLogger.js', 'start: ' + key);\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        var timespan = this._timespans[key];\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n          return;\n        }\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, infoLog.default)('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n          return;\n        }\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n        if (PRINT_TO_CONSOLE) {\n          (0, infoLog.default)('PerformanceLogger.js', 'end: ' + key);\n        }\n      }\n    }]);\n  }();\n  function createPerformanceLogger() {\n    return new PerformanceLogger();\n  }\n});","lineCount":269,"map":[[13,2,288,15,"Object"],[13,8,288,15],[13,9,288,15,"defineProperty"],[13,23,288,15],[13,24,288,15,"exports"],[13,31,288,15],[14,4,288,15,"enumerable"],[14,14,288,15],[15,4,288,15,"get"],[15,7,288,15],[15,18,288,15,"get"],[15,19,288,15],[16,6,288,15],[16,13,288,15,"createPerformanceLogger"],[16,36,288,15],[17,4,288,15],[18,2,288,15],[19,2,22,0,"Object"],[19,8,22,0],[19,9,22,0,"defineProperty"],[19,23,22,0],[19,24,22,0,"exports"],[19,31,22,0],[20,4,22,0,"enumerable"],[20,14,22,0],[21,4,22,0,"get"],[21,7,22,0],[21,18,22,0,"get"],[21,19,22,0],[22,6,22,0],[22,13,22,0,"getCurrentTimestamp"],[22,32,22,0],[23,4,22,0],[24,2,22,0],[25,2,23,64],[25,6,23,64,"_babelRuntimeHelpersClassCallCheck"],[25,40,23,64],[25,43,23,64,"require"],[25,50,23,64],[25,51,23,64,"_dependencyMap"],[25,65,23,64],[26,2,23,64],[26,6,23,64,"_classCallCheck"],[26,21,23,64],[26,24,23,64,"_interopDefault"],[26,39,23,64],[26,40,23,64,"_babelRuntimeHelpersClassCallCheck"],[26,74,23,64],[27,2,23,64],[27,6,23,64,"_babelRuntimeHelpersCreateClass"],[27,37,23,64],[27,40,23,64,"require"],[27,47,23,64],[27,48,23,64,"_dependencyMap"],[27,62,23,64],[28,2,23,64],[28,6,23,64,"_createClass"],[28,18,23,64],[28,21,23,64,"_interopDefault"],[28,36,23,64],[28,37,23,64,"_babelRuntimeHelpersCreateClass"],[28,68,23,64],[29,2,18,0],[29,6,18,0,"_infoLog"],[29,14,18,0],[29,17,18,0,"require"],[29,24,18,0],[29,25,18,0,"_dependencyMap"],[29,39,18,0],[30,2,18,0],[30,6,18,0,"infoLog"],[30,13,18,0],[30,16,18,0,"_interopDefault"],[30,31,18,0],[30,32,18,0,"_infoLog"],[30,40,18,0],[31,2,20,0],[31,6,20,6,"PRINT_TO_CONSOLE"],[31,22,20,29],[31,25,20,32],[31,30,20,37],[32,2,22,7],[32,6,22,13,"getCurrentTimestamp"],[32,25,22,46],[32,29,22,46,"_global$nativeQPLTime"],[32,50,22,46],[32,53,23,2,"global"],[32,59,23,8],[32,60,23,9,"nativeQPLTimestamp"],[32,78,23,27],[32,90,23,27,"_global$nativeQPLTime"],[32,111,23,27],[32,114,23,32],[33,4,23,32],[33,11,23,38,"global"],[33,17,23,44],[33,18,23,45,"performance"],[33,29,23,56],[33,30,23,57,"now"],[33,33,23,60],[33,34,23,61],[33,35,23,62],[34,2,23,62],[34,3,23,63],[35,2,23,64],[35,6,25,6,"PerformanceLogger"],[35,23,25,23],[36,4,25,23],[36,13,25,23,"PerformanceLogger"],[36,31,25,23],[37,6,25,23],[37,10,25,23,"_classCallCheck"],[37,25,25,23],[37,26,25,23,"default"],[37,33,25,23],[37,41,25,23,"PerformanceLogger"],[37,58,25,23],[38,6,25,23],[38,11,26,2,"_timespans"],[38,21,26,12],[38,24,26,43],[38,25,26,44],[38,26,26,45],[39,6,26,45],[39,11,27,2,"_extras"],[39,18,27,9],[39,21,27,42],[39,22,27,43],[39,23,27,44],[40,6,27,44],[40,11,28,2,"_points"],[40,18,28,9],[40,21,28,38],[40,22,28,39],[40,23,28,40],[41,6,28,40],[41,11,29,2,"_pointExtras"],[41,23,29,14],[41,26,29,48],[41,27,29,49],[41,28,29,50],[42,6,29,50],[42,11,30,2,"_closed"],[42,18,30,9],[42,21,30,21],[42,26,30,26],[43,4,30,26],[44,4,30,26],[44,15,30,26,"_createClass"],[44,27,30,26],[44,28,30,26,"default"],[44,35,30,26],[44,37,30,26,"PerformanceLogger"],[44,54,30,26],[45,6,30,26,"key"],[45,9,30,26],[46,6,30,26,"value"],[46,11,30,26],[46,13,32,2],[46,22,32,2,"addTimespan"],[46,33,32,13,"addTimespan"],[46,34,33,4,"key"],[46,37,33,15],[46,39,34,4,"startTime"],[46,48,34,21],[46,50,35,4,"endTime"],[46,57,35,19],[46,59,36,4,"startExtras"],[46,70,36,24],[46,72,37,4,"endExtras"],[46,81,37,22],[46,83,38,4],[47,8,39,4],[47,12,39,8],[47,16,39,12],[47,17,39,13,"_closed"],[47,24,39,20],[47,26,39,22],[48,10,40,6],[48,14,40,10,"PRINT_TO_CONSOLE"],[48,30,40,26],[48,34,40,30,"__DEV__"],[48,41,40,37],[48,43,40,39],[49,12,41,8],[49,16,41,8,"infoLog"],[49,23,41,15],[49,24,41,15,"default"],[49,31,41,15],[49,33,41,16],[49,89,41,72],[49,91,41,74,"key"],[49,94,41,77],[49,95,41,78],[50,10,42,6],[51,10,43,6],[52,8,44,4],[53,8,45,4],[53,12,45,8],[53,16,45,12],[53,17,45,13,"_timespans"],[53,27,45,23],[53,28,45,24,"key"],[53,31,45,27],[53,32,45,28],[53,34,45,30],[54,10,46,6],[54,14,46,10,"PRINT_TO_CONSOLE"],[54,30,46,26],[54,34,46,30,"__DEV__"],[54,41,46,37],[54,43,46,39],[55,12,47,8],[55,16,47,8,"infoLog"],[55,23,47,15],[55,24,47,15,"default"],[55,31,47,15],[55,33,48,10],[55,103,48,80],[55,105,49,10,"key"],[55,108,50,8],[55,109,50,9],[56,10,51,6],[57,10,52,6],[58,8,53,4],[59,8,55,4],[59,12,55,8],[59,13,55,9,"_timespans"],[59,23,55,19],[59,24,55,20,"key"],[59,27,55,23],[59,28,55,24],[59,31,55,27],[60,10,56,6,"startTime"],[60,19,56,15],[60,21,56,6,"startTime"],[60,30,56,15],[61,10,57,6,"endTime"],[61,17,57,13],[61,19,57,6,"endTime"],[61,26,57,13],[62,10,58,6,"totalTime"],[62,19,58,15],[62,21,58,17,"endTime"],[62,28,58,24],[62,32,58,28,"startTime"],[62,41,58,37],[62,45,58,41],[62,46,58,42],[62,47,58,43],[63,10,59,6,"startExtras"],[63,21,59,17],[63,23,59,6,"startExtras"],[63,34,59,17],[64,10,60,6,"endExtras"],[64,19,60,15],[64,21,60,6,"endExtras"],[65,8,61,4],[65,9,61,5],[66,6,62,2],[67,4,62,3],[68,6,62,3,"key"],[68,9,62,3],[69,6,62,3,"value"],[69,11,62,3],[69,13,64,2],[69,22,64,2,"append"],[69,28,64,8,"append"],[69,29,64,9,"performanceLogger"],[69,46,64,46],[69,48,64,48],[70,8,65,4],[70,12,65,8],[70,13,65,9,"_timespans"],[70,23,65,19],[70,26,65,19,"Object"],[70,32,65,19],[70,33,65,19,"assign"],[70,39,65,19],[70,44,66,9,"performanceLogger"],[70,61,66,26],[70,62,66,27,"getTimespans"],[70,74,66,39],[70,75,66,40],[70,76,66,41],[70,78,67,9],[70,82,67,13],[70,83,67,14,"_timespans"],[70,93,67,24],[70,94,68,5],[71,8,69,4],[71,12,69,8],[71,13,69,9,"_extras"],[71,20,69,16],[71,23,69,16,"Object"],[71,29,69,16],[71,30,69,16,"assign"],[71,36,69,16],[71,41,69,23,"performanceLogger"],[71,58,69,40],[71,59,69,41,"getExtras"],[71,68,69,50],[71,69,69,51],[71,70,69,52],[71,72,69,57],[71,76,69,61],[71,77,69,62,"_extras"],[71,84,69,69],[71,85,69,70],[72,8,70,4],[72,12,70,8],[72,13,70,9,"_points"],[72,20,70,16],[72,23,70,16,"Object"],[72,29,70,16],[72,30,70,16,"assign"],[72,36,70,16],[72,41,70,23,"performanceLogger"],[72,58,70,40],[72,59,70,41,"getPoints"],[72,68,70,50],[72,69,70,51],[72,70,70,52],[72,72,70,57],[72,76,70,61],[72,77,70,62,"_points"],[72,84,70,69],[72,85,70,70],[73,8,71,4],[73,12,71,8],[73,13,71,9,"_pointExtras"],[73,25,71,21],[73,28,71,21,"Object"],[73,34,71,21],[73,35,71,21,"assign"],[73,41,71,21],[73,46,72,9,"performanceLogger"],[73,63,72,26],[73,64,72,27,"getPointExtras"],[73,78,72,41],[73,79,72,42],[73,80,72,43],[73,82,73,9],[73,86,73,13],[73,87,73,14,"_pointExtras"],[73,99,73,26],[73,100,74,5],[74,6,75,2],[75,4,75,3],[76,6,75,3,"key"],[76,9,75,3],[77,6,75,3,"value"],[77,11,75,3],[77,13,77,2],[77,22,77,2,"clear"],[77,27,77,7,"clear"],[77,28,77,7],[77,30,77,10],[78,8,78,4],[78,12,78,8],[78,13,78,9,"_timespans"],[78,23,78,19],[78,26,78,22],[78,27,78,23],[78,28,78,24],[79,8,79,4],[79,12,79,8],[79,13,79,9,"_extras"],[79,20,79,16],[79,23,79,19],[79,24,79,20],[79,25,79,21],[80,8,80,4],[80,12,80,8],[80,13,80,9,"_points"],[80,20,80,16],[80,23,80,19],[80,24,80,20],[80,25,80,21],[81,8,81,4],[81,12,81,8,"PRINT_TO_CONSOLE"],[81,28,81,24],[81,30,81,26],[82,10,82,6],[82,14,82,6,"infoLog"],[82,21,82,13],[82,22,82,13,"default"],[82,29,82,13],[82,31,82,14],[82,53,82,36],[82,55,82,38],[82,62,82,45],[82,63,82,46],[83,8,83,4],[84,6,84,2],[85,4,84,3],[86,6,84,3,"key"],[86,9,84,3],[87,6,84,3,"value"],[87,11,84,3],[87,13,86,2],[87,22,86,2,"clearCompleted"],[87,36,86,16,"clearCompleted"],[87,37,86,16],[87,39,86,19],[88,8,87,4],[88,13,87,9],[88,17,87,15,"key"],[88,21,87,18],[88,25,87,22],[88,29,87,26],[88,30,87,27,"_timespans"],[88,40,87,37],[88,42,87,39],[89,10,87,39],[89,14,87,39,"_this$_timespans$_key"],[89,35,87,39],[90,10,88,6],[90,14,88,10],[90,16,88,10,"_this$_timespans$_key"],[90,37,88,10],[90,44,88,14],[90,45,88,15,"_timespans"],[90,55,88,25],[90,56,88,26,"key"],[90,60,88,29],[90,61,88,30],[90,82,88,10,"_this$_timespans$_key"],[90,103,88,10],[90,104,88,32,"totalTime"],[90,113,88,41],[90,118,88,45],[90,122,88,49],[90,124,88,51],[91,12,89,8],[91,19,89,15],[91,23,89,19],[91,24,89,20,"_timespans"],[91,34,89,30],[91,35,89,31,"key"],[91,39,89,34],[91,40,89,35],[92,10,90,6],[93,8,91,4],[94,8,92,4],[94,12,92,8],[94,13,92,9,"_extras"],[94,20,92,16],[94,23,92,19],[94,24,92,20],[94,25,92,21],[95,8,93,4],[95,12,93,8],[95,13,93,9,"_points"],[95,20,93,16],[95,23,93,19],[95,24,93,20],[95,25,93,21],[96,8,94,4],[96,12,94,8,"PRINT_TO_CONSOLE"],[96,28,94,24],[96,30,94,26],[97,10,95,6],[97,14,95,6,"infoLog"],[97,21,95,13],[97,22,95,13,"default"],[97,29,95,13],[97,31,95,14],[97,53,95,36],[97,55,95,38],[97,71,95,54],[97,72,95,55],[98,8,96,4],[99,6,97,2],[100,4,97,3],[101,6,97,3,"key"],[101,9,97,3],[102,6,97,3,"value"],[102,11,97,3],[102,13,99,2],[102,22,99,2,"close"],[102,27,99,7,"close"],[102,28,99,7],[102,30,99,10],[103,8,100,4],[103,12,100,8],[103,13,100,9,"_closed"],[103,20,100,16],[103,23,100,19],[103,27,100,23],[104,6,101,2],[105,4,101,3],[106,6,101,3,"key"],[106,9,101,3],[107,6,101,3,"value"],[107,11,101,3],[107,13,103,2],[107,22,103,2,"currentTimestamp"],[107,38,103,18,"currentTimestamp"],[107,39,103,18],[107,41,103,29],[108,8,104,4],[108,15,104,11,"getCurrentTimestamp"],[108,34,104,30],[108,35,104,31],[108,36,104,32],[109,6,105,2],[110,4,105,3],[111,6,105,3,"key"],[111,9,105,3],[112,6,105,3,"value"],[112,11,105,3],[112,13,107,2],[112,22,107,2,"getExtras"],[112,31,107,11,"getExtras"],[112,32,107,11],[112,34,107,44],[113,8,108,4],[113,15,108,11],[113,19,108,15],[113,20,108,16,"_extras"],[113,27,108,23],[114,6,109,2],[115,4,109,3],[116,6,109,3,"key"],[116,9,109,3],[117,6,109,3,"value"],[117,11,109,3],[117,13,111,2],[117,22,111,2,"getPoints"],[117,31,111,11,"getPoints"],[117,32,111,11],[117,34,111,40],[118,8,112,4],[118,15,112,11],[118,19,112,15],[118,20,112,16,"_points"],[118,27,112,23],[119,6,113,2],[120,4,113,3],[121,6,113,3,"key"],[121,9,113,3],[122,6,113,3,"value"],[122,11,113,3],[122,13,115,2],[122,22,115,2,"getPointExtras"],[122,36,115,16,"getPointExtras"],[122,37,115,16],[122,39,115,45],[123,8,116,4],[123,15,116,11],[123,19,116,15],[123,20,116,16,"_pointExtras"],[123,32,116,28],[124,6,117,2],[125,4,117,3],[126,6,117,3,"key"],[126,9,117,3],[127,6,117,3,"value"],[127,11,117,3],[127,13,119,2],[127,22,119,2,"getTimespans"],[127,34,119,14,"getTimespans"],[127,35,119,14],[127,37,119,45],[128,8,120,4],[128,15,120,11],[128,19,120,15],[128,20,120,16,"_timespans"],[128,30,120,26],[129,6,121,2],[130,4,121,3],[131,6,121,3,"key"],[131,9,121,3],[132,6,121,3,"value"],[132,11,121,3],[132,13,123,2],[132,22,123,2,"hasTimespan"],[132,33,123,13,"hasTimespan"],[132,34,123,14,"key"],[132,37,123,25],[132,39,123,36],[133,8,124,4],[133,15,124,11],[133,16,124,12],[133,17,124,13],[133,21,124,17],[133,22,124,18,"_timespans"],[133,32,124,28],[133,33,124,29,"key"],[133,36,124,32],[133,37,124,33],[134,6,125,2],[135,4,125,3],[136,6,125,3,"key"],[136,9,125,3],[137,6,125,3,"value"],[137,11,125,3],[137,13,127,2],[137,22,127,2,"isClosed"],[137,30,127,10,"isClosed"],[137,31,127,10],[137,33,127,22],[138,8,128,4],[138,15,128,11],[138,19,128,15],[138,20,128,16,"_closed"],[138,27,128,23],[139,6,129,2],[140,4,129,3],[141,6,129,3,"key"],[141,9,129,3],[142,6,129,3,"value"],[142,11,129,3],[142,13,131,2],[142,22,131,2,"logEverything"],[142,35,131,15,"logEverything"],[142,36,131,15],[142,38,131,18],[143,8,132,4],[143,12,132,8,"PRINT_TO_CONSOLE"],[143,28,132,24],[143,30,132,26],[144,10,134,6],[144,15,134,11],[144,19,134,17,"key"],[144,24,134,20],[144,28,134,24],[144,32,134,28],[144,33,134,29,"_timespans"],[144,43,134,39],[144,45,134,41],[145,12,134,41],[145,16,134,41,"_this$_timespans$_key2"],[145,38,134,41],[146,12,135,8],[146,16,135,12],[146,18,135,12,"_this$_timespans$_key2"],[146,40,135,12],[146,47,135,16],[146,48,135,17,"_timespans"],[146,58,135,27],[146,59,135,28,"key"],[146,64,135,31],[146,65,135,32],[146,86,135,12,"_this$_timespans$_key2"],[146,108,135,12],[146,109,135,34,"totalTime"],[146,118,135,43],[146,123,135,47],[146,127,135,51],[146,129,135,53],[147,14,136,10],[147,18,136,10,"infoLog"],[147,25,136,17],[147,26,136,17,"default"],[147,33,136,17],[147,35,136,18,"key"],[147,40,136,21],[147,43,136,24],[147,47,136,28],[147,50,136,31],[147,54,136,35],[147,55,136,36,"_timespans"],[147,65,136,46],[147,66,136,47,"key"],[147,71,136,50],[147,72,136,51],[147,73,136,52,"totalTime"],[147,82,136,61],[147,85,136,64],[147,89,136,68],[147,90,136,69],[148,12,137,8],[149,10,138,6],[150,10,141,6],[150,14,141,6,"infoLog"],[150,21,141,13],[150,22,141,13,"default"],[150,29,141,13],[150,31,141,14],[150,35,141,18],[150,36,141,19,"_extras"],[150,43,141,26],[150,44,141,27],[151,10,144,6],[151,15,144,11],[151,19,144,17,"key"],[151,24,144,20],[151,28,144,24],[151,32,144,28],[151,33,144,29,"_points"],[151,40,144,36],[151,42,144,38],[152,12,145,8],[152,16,145,12],[152,20,145,16],[152,21,145,17,"_points"],[152,28,145,24],[152,29,145,25,"key"],[152,34,145,28],[152,35,145,29],[152,39,145,33],[152,43,145,37],[152,45,145,39],[153,14,146,10],[153,18,146,10,"infoLog"],[153,25,146,17],[153,26,146,17,"default"],[153,33,146,17],[153,35,146,18,"key"],[153,40,146,21],[153,43,146,24],[153,47,146,28],[153,50,146,31],[153,54,146,35],[153,55,146,36,"_points"],[153,62,146,43],[153,63,146,44,"key"],[153,68,146,47],[153,69,146,48],[153,72,146,51],[153,76,146,55],[153,77,146,56],[154,12,147,8],[155,10,148,6],[156,8,149,4],[157,6,150,2],[158,4,150,3],[159,6,150,3,"key"],[159,9,150,3],[160,6,150,3,"value"],[160,11,150,3],[160,13,152,2],[160,22,152,2,"markPoint"],[160,31,152,11,"markPoint"],[160,32,153,4,"key"],[160,35,153,15],[160,37,156,4],[161,8,156,4],[161,12,154,4,"timestamp"],[161,21,154,22],[161,24,154,22,"arguments"],[161,33,154,22],[161,34,154,22,"length"],[161,40,154,22],[161,48,154,22,"arguments"],[161,57,154,22],[161,65,154,22,"undefined"],[161,74,154,22],[161,77,154,22,"arguments"],[161,86,154,22],[161,92,154,25,"getCurrentTimestamp"],[161,111,154,44],[161,112,154,45],[161,113,154,46],[162,8,154,46],[162,12,155,4,"extras"],[162,18,155,19],[162,21,155,19,"arguments"],[162,30,155,19],[162,31,155,19,"length"],[162,37,155,19],[162,44,155,19,"arguments"],[162,53,155,19],[162,59,155,19,"undefined"],[162,68,155,19],[163,8,157,4],[163,12,157,8],[163,16,157,12],[163,17,157,13,"_closed"],[163,24,157,20],[163,26,157,22],[164,10,158,6],[164,14,158,10,"PRINT_TO_CONSOLE"],[164,30,158,26],[164,34,158,30,"__DEV__"],[164,41,158,37],[164,43,158,39],[165,12,159,8],[165,16,159,8,"infoLog"],[165,23,159,15],[165,24,159,15,"default"],[165,31,159,15],[165,33,159,16],[165,87,159,70],[165,89,159,72,"key"],[165,92,159,75],[165,93,159,76],[166,10,160,6],[167,10,161,6],[168,8,162,4],[169,8,163,4],[169,12,163,8],[169,16,163,12],[169,17,163,13,"_points"],[169,24,163,20],[169,25,163,21,"key"],[169,28,163,24],[169,29,163,25],[169,33,163,29],[169,37,163,33],[169,39,163,35],[170,10,164,6],[170,14,164,10,"PRINT_TO_CONSOLE"],[170,30,164,26],[170,34,164,30,"__DEV__"],[170,41,164,37],[170,43,164,39],[171,12,165,8],[171,16,165,8,"infoLog"],[171,23,165,15],[171,24,165,15,"default"],[171,31,165,15],[171,33,166,10],[171,110,166,87],[171,112,167,10,"key"],[171,115,168,8],[171,116,168,9],[172,10,169,6],[173,10,170,6],[174,8,171,4],[175,8,172,4],[175,12,172,8],[175,13,172,9,"_points"],[175,20,172,16],[175,21,172,17,"key"],[175,24,172,20],[175,25,172,21],[175,28,172,24,"timestamp"],[175,37,172,33],[176,8,173,4],[176,12,173,8,"extras"],[176,18,173,14],[176,20,173,16],[177,10,174,6],[177,14,174,10],[177,15,174,11,"_pointExtras"],[177,27,174,23],[177,28,174,24,"key"],[177,31,174,27],[177,32,174,28],[177,35,174,31,"extras"],[177,41,174,37],[178,8,175,4],[179,6,176,2],[180,4,176,3],[181,6,176,3,"key"],[181,9,176,3],[182,6,176,3,"value"],[182,11,176,3],[182,13,178,2],[182,22,178,2,"removeExtra"],[182,33,178,13,"removeExtra"],[182,34,178,14,"key"],[182,37,178,25],[182,39,178,40],[183,8,179,4],[183,12,179,10,"value"],[183,17,179,15],[183,20,179,18],[183,24,179,22],[183,25,179,23,"_extras"],[183,32,179,30],[183,33,179,31,"key"],[183,36,179,34],[183,37,179,35],[184,8,180,4],[184,15,180,11],[184,19,180,15],[184,20,180,16,"_extras"],[184,27,180,23],[184,28,180,24,"key"],[184,31,180,27],[184,32,180,28],[185,8,181,4],[185,15,181,11,"value"],[185,20,181,16],[186,6,182,2],[187,4,182,3],[188,6,182,3,"key"],[188,9,182,3],[189,6,182,3,"value"],[189,11,182,3],[189,13,184,2],[189,22,184,2,"setExtra"],[189,30,184,10,"setExtra"],[189,31,184,11,"key"],[189,34,184,22],[189,36,184,24,"value"],[189,41,184,41],[189,43,184,43],[190,8,185,4],[190,12,185,8],[190,16,185,12],[190,17,185,13,"_closed"],[190,24,185,20],[190,26,185,22],[191,10,186,6],[191,14,186,10,"PRINT_TO_CONSOLE"],[191,30,186,26],[191,34,186,30,"__DEV__"],[191,41,186,37],[191,43,186,39],[192,12,187,8],[192,16,187,8,"infoLog"],[192,23,187,15],[192,24,187,15,"default"],[192,31,187,15],[192,33,187,16],[192,86,187,69],[192,88,187,71,"key"],[192,91,187,74],[192,92,187,75],[193,10,188,6],[194,10,189,6],[195,8,190,4],[196,8,192,4],[196,12,192,8],[196,16,192,12],[196,17,192,13,"_extras"],[196,24,192,20],[196,25,192,21,"hasOwnProperty"],[196,39,192,35],[196,40,192,36,"key"],[196,43,192,39],[196,44,192,40],[196,46,192,42],[197,10,193,6],[197,14,193,10,"PRINT_TO_CONSOLE"],[197,30,193,26],[197,34,193,30,"__DEV__"],[197,41,193,37],[197,43,193,39],[198,12,194,8],[198,16,194,8,"infoLog"],[198,23,194,15],[198,24,194,15,"default"],[198,31,194,15],[198,33,195,10],[198,101,195,78],[198,103,196,10],[199,14,196,11,"key"],[199,17,196,14],[199,19,196,11,"key"],[199,22,196,14],[200,14,196,16,"currentValue"],[200,26,196,28],[200,28,196,30],[200,32,196,34],[200,33,196,35,"_extras"],[200,40,196,42],[200,41,196,43,"key"],[200,44,196,46],[200,45,196,47],[201,14,196,49,"attemptedValue"],[201,28,196,63],[201,30,196,65,"value"],[202,12,196,70],[202,13,197,8],[202,14,197,9],[203,10,198,6],[204,10,199,6],[205,8,200,4],[206,8,201,4],[206,12,201,8],[206,13,201,9,"_extras"],[206,20,201,16],[206,21,201,17,"key"],[206,24,201,20],[206,25,201,21],[206,28,201,24,"value"],[206,33,201,29],[207,6,202,2],[208,4,202,3],[209,6,202,3,"key"],[209,9,202,3],[210,6,202,3,"value"],[210,11,202,3],[210,13,204,2],[210,22,204,2,"startTimespan"],[210,35,204,15,"startTimespan"],[210,36,205,4,"key"],[210,39,205,15],[210,41,208,4],[211,8,208,4],[211,12,206,4,"timestamp"],[211,21,206,22],[211,24,206,22,"arguments"],[211,33,206,22],[211,34,206,22,"length"],[211,40,206,22],[211,48,206,22,"arguments"],[211,57,206,22],[211,65,206,22,"undefined"],[211,74,206,22],[211,77,206,22,"arguments"],[211,86,206,22],[211,92,206,25,"getCurrentTimestamp"],[211,111,206,44],[211,112,206,45],[211,113,206,46],[212,8,206,46],[212,12,207,4,"extras"],[212,18,207,19],[212,21,207,19,"arguments"],[212,30,207,19],[212,31,207,19,"length"],[212,37,207,19],[212,44,207,19,"arguments"],[212,53,207,19],[212,59,207,19,"undefined"],[212,68,207,19],[213,8,209,4],[213,12,209,8],[213,16,209,12],[213,17,209,13,"_closed"],[213,24,209,20],[213,26,209,22],[214,10,210,6],[214,14,210,10,"PRINT_TO_CONSOLE"],[214,30,210,26],[214,34,210,30,"__DEV__"],[214,41,210,37],[214,43,210,39],[215,12,211,8],[215,16,211,8,"infoLog"],[215,23,211,15],[215,24,211,15,"default"],[215,31,211,15],[215,33,212,10],[215,91,212,68],[215,93,213,10,"key"],[215,96,214,8],[215,97,214,9],[216,10,215,6],[217,10,216,6],[218,8,217,4],[219,8,219,4],[219,12,219,8],[219,16,219,12],[219,17,219,13,"_timespans"],[219,27,219,23],[219,28,219,24,"key"],[219,31,219,27],[219,32,219,28],[219,34,219,30],[220,10,220,6],[220,14,220,10,"PRINT_TO_CONSOLE"],[220,30,220,26],[220,34,220,30,"__DEV__"],[220,41,220,37],[220,43,220,39],[221,12,221,8],[221,16,221,8,"infoLog"],[221,23,221,15],[221,24,221,15,"default"],[221,31,221,15],[221,33,222,10],[221,105,222,82],[221,107,223,10,"key"],[221,110,224,8],[221,111,224,9],[222,10,225,6],[223,10,226,6],[224,8,227,4],[225,8,229,4],[225,12,229,8],[225,13,229,9,"_timespans"],[225,23,229,19],[225,24,229,20,"key"],[225,27,229,23],[225,28,229,24],[225,31,229,27],[226,10,230,6,"startTime"],[226,19,230,15],[226,21,230,17,"timestamp"],[226,30,230,26],[227,10,231,6,"startExtras"],[227,21,231,17],[227,23,231,19,"extras"],[228,8,232,4],[228,9,232,5],[229,8,233,4],[229,12,233,8,"PRINT_TO_CONSOLE"],[229,28,233,24],[229,30,233,26],[230,10,234,6],[230,14,234,6,"infoLog"],[230,21,234,13],[230,22,234,13,"default"],[230,29,234,13],[230,31,234,14],[230,53,234,36],[230,55,234,38],[230,64,234,47],[230,67,234,50,"key"],[230,70,234,53],[230,71,234,54],[231,8,235,4],[232,6,236,2],[233,4,236,3],[234,6,236,3,"key"],[234,9,236,3],[235,6,236,3,"value"],[235,11,236,3],[235,13,238,2],[235,22,238,2,"stopTimespan"],[235,34,238,14,"stopTimespan"],[235,35,239,4,"key"],[235,38,239,15],[235,40,242,4],[236,8,242,4],[236,12,240,4,"timestamp"],[236,21,240,22],[236,24,240,22,"arguments"],[236,33,240,22],[236,34,240,22,"length"],[236,40,240,22],[236,48,240,22,"arguments"],[236,57,240,22],[236,65,240,22,"undefined"],[236,74,240,22],[236,77,240,22,"arguments"],[236,86,240,22],[236,92,240,25,"getCurrentTimestamp"],[236,111,240,44],[236,112,240,45],[236,113,240,46],[237,8,240,46],[237,12,241,4,"extras"],[237,18,241,19],[237,21,241,19,"arguments"],[237,30,241,19],[237,31,241,19,"length"],[237,37,241,19],[237,44,241,19,"arguments"],[237,53,241,19],[237,59,241,19,"undefined"],[237,68,241,19],[238,8,243,4],[238,12,243,8],[238,16,243,12],[238,17,243,13,"_closed"],[238,24,243,20],[238,26,243,22],[239,10,244,6],[239,14,244,10,"PRINT_TO_CONSOLE"],[239,30,244,26],[239,34,244,30,"__DEV__"],[239,41,244,37],[239,43,244,39],[240,12,245,8],[240,16,245,8,"infoLog"],[240,23,245,15],[240,24,245,15,"default"],[240,31,245,15],[240,33,245,16],[240,90,245,73],[240,92,245,75,"key"],[240,95,245,78],[240,96,245,79],[241,10,246,6],[242,10,247,6],[243,8,248,4],[244,8,250,4],[244,12,250,10,"timespan"],[244,20,250,18],[244,23,250,21],[244,27,250,25],[244,28,250,26,"_timespans"],[244,38,250,36],[244,39,250,37,"key"],[244,42,250,40],[244,43,250,41],[245,8,251,4],[245,12,251,8],[245,13,251,9,"timespan"],[245,21,251,17],[245,25,251,21,"timespan"],[245,33,251,29],[245,34,251,30,"startTime"],[245,43,251,39],[245,47,251,43],[245,51,251,47],[245,53,251,49],[246,10,252,6],[246,14,252,10,"PRINT_TO_CONSOLE"],[246,30,252,26],[246,34,252,30,"__DEV__"],[246,41,252,37],[246,43,252,39],[247,12,253,8],[247,16,253,8,"infoLog"],[247,23,253,15],[247,24,253,15,"default"],[247,31,253,15],[247,33,254,10],[247,104,254,81],[247,106,255,10,"key"],[247,109,256,8],[247,110,256,9],[248,10,257,6],[249,10,258,6],[250,8,259,4],[251,8,260,4],[251,12,260,8,"timespan"],[251,20,260,16],[251,21,260,17,"endTime"],[251,28,260,24],[251,32,260,28],[251,36,260,32],[251,38,260,34],[252,10,261,6],[252,14,261,10,"PRINT_TO_CONSOLE"],[252,30,261,26],[252,34,261,30,"__DEV__"],[252,41,261,37],[252,43,261,39],[253,12,262,8],[253,16,262,8,"infoLog"],[253,23,262,15],[253,24,262,15,"default"],[253,31,262,15],[253,33,263,10],[253,106,263,83],[253,108,264,10,"key"],[253,111,265,8],[253,112,265,9],[254,10,266,6],[255,10,267,6],[256,8,268,4],[257,8,270,4,"timespan"],[257,16,270,12],[257,17,270,13,"endExtras"],[257,26,270,22],[257,29,270,25,"extras"],[257,35,270,31],[258,8,271,4,"timespan"],[258,16,271,12],[258,17,271,13,"endTime"],[258,24,271,20],[258,27,271,23,"timestamp"],[258,36,271,32],[259,8,272,4,"timespan"],[259,16,272,12],[259,17,272,13,"totalTime"],[259,26,272,22],[259,29,272,25,"timespan"],[259,37,272,33],[259,38,272,34,"endTime"],[259,45,272,41],[259,49,272,45,"timespan"],[259,57,272,53],[259,58,272,54,"startTime"],[259,67,272,63],[259,71,272,67],[259,72,272,68],[259,73,272,69],[260,8,273,4],[260,12,273,8,"PRINT_TO_CONSOLE"],[260,28,273,24],[260,30,273,26],[261,10,274,6],[261,14,274,6,"infoLog"],[261,21,274,13],[261,22,274,13,"default"],[261,29,274,13],[261,31,274,14],[261,53,274,36],[261,55,274,38],[261,62,274,45],[261,65,274,48,"key"],[261,68,274,51],[261,69,274,52],[262,8,275,4],[263,6,276,2],[264,4,276,3],[265,2,276,3],[266,2,288,15],[266,11,288,24,"createPerformanceLogger"],[266,34,288,47,"createPerformanceLogger"],[266,35,288,47],[266,37,288,70],[267,4,289,2],[267,11,289,9],[267,15,289,13,"PerformanceLogger"],[267,32,289,30],[267,33,289,31],[267,34,289,32],[268,2,290,0],[269,0,290,1],[269,3]],"functionMap":{"names":["<global>","<anonymous>","PerformanceLogger","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;gCCsB,8BD;AEE;ECO;GD8B;EEE;GFW;EGE;GHO;EIE;GJW;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbmB;EcE;GdwB;EeE;GfI;EgBE;GhBkB;EiBE;GjBgC;EkBE;GlBsC;CFC;eqBW"},"hasCjsExports":false},"type":"js/module"}]}