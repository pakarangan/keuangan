{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"X490zePjq+0IljAc8X0qcBg0iTo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":42,"index":57}}],"key":"Opxn8Ttfh7QNGeF0y+BQ6rRbDGo=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":58},"end":{"line":4,"column":44,"index":102}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./arrayStartsWith.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":55,"index":158}}],"key":"mJQeK2ZRLq8v0j9J6l50oLtYU2c=","exportNames":["*"],"imports":1}},{"name":"./findFocusedRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":159},"end":{"line":6,"column":57,"index":216}}],"key":"/OEwo8APHIJtscmrfuh7WccCayM=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":217},"end":{"line":7,"column":55,"index":272}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":273},"end":{"line":8,"column":49,"index":322}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":323},"end":{"line":9,"column":61,"index":384}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getStateFromPath = getStateFromPath;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersDefineProperty = require(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\");\n  var _defineProperty = _interopDefault(_babelRuntimeHelpersDefineProperty);\n  var _babelRuntimeHelpersToConsumableArray = require(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\");\n  var _toConsumableArray = _interopDefault(_babelRuntimeHelpersToConsumableArray);\n  var _escapeStringRegexp = require(_dependencyMap[3], \"escape-string-regexp\");\n  var escape = _interopDefault(_escapeStringRegexp);\n  var _queryString = require(_dependencyMap[4], \"query-string\");\n  var queryString = _interopNamespace(_queryString);\n  var _arrayStartsWithJs = require(_dependencyMap[5], \"./arrayStartsWith.js\");\n  var _findFocusedRouteJs = require(_dependencyMap[6], \"./findFocusedRoute.js\");\n  var _getPatternPartsJs = require(_dependencyMap[7], \"./getPatternParts.js\");\n  var _isArrayEqualJs = require(_dependencyMap[8], \"./isArrayEqual.js\");\n  var _validatePathConfigJs = require(_dependencyMap[9], \"./validatePathConfig.js\");\n  /**\n   * Utility to parse a path string to initial state object accepted by the container.\n   * This is useful for deep linking when we need to handle the incoming URL.\n   *\n   * @example\n   * ```js\n   * getStateFromPath(\n   *   '/chat/jane/42',\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         parse: { id: Number }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   * @param path Path string to parse and convert, e.g. /foo/bar?count=42.\n   * @param options Extra options to fine-tune how to parse the path.\n   */\n  function getStateFromPath(path, options) {\n    var _options$path;\n    var _getConfigResources = getConfigResources(options),\n      initialRoutes = _getConfigResources.initialRoutes,\n      configs = _getConfigResources.configs;\n    var screens = options == null ? void 0 : options.screens;\n    var remaining = path.replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n    .replace(/^\\//, '') // Remove extra leading slash\n    .replace(/\\?.*$/, ''); // Remove query params which we will handle later\n\n    // Make sure there is a trailing slash\n    remaining = remaining.endsWith('/') ? remaining : `${remaining}/`;\n    var prefix = options == null || (_options$path = options.path) == null ? void 0 : _options$path.replace(/^\\//, ''); // Remove extra leading slash\n\n    if (prefix) {\n      // Make sure there is a trailing slash\n      var normalizedPrefix = prefix.endsWith('/') ? prefix : `${prefix}/`;\n\n      // If the path doesn't start with the prefix, it's not a match\n      if (!remaining.startsWith(normalizedPrefix)) {\n        return undefined;\n      }\n\n      // Remove the prefix from the path\n      remaining = remaining.replace(normalizedPrefix, '');\n    }\n    if (screens === undefined) {\n      // When no config is specified, use the path segments as route names\n      var _routes = remaining.split('/').filter(Boolean).map(function (segment) {\n        var name = decodeURIComponent(segment);\n        return {\n          name: name\n        };\n      });\n      if (_routes.length) {\n        return createNestedStateObject(path, _routes, initialRoutes);\n      }\n      return undefined;\n    }\n    if (remaining === '/') {\n      // We need to add special handling of empty path so navigation to empty path also works\n      // When handling empty path, we should only look at the root level config\n      var match = configs.find(function (config) {\n        return config.segments.join('/') === '';\n      });\n      if (match) {\n        return createNestedStateObject(path, match.routeNames.map(function (name) {\n          return {\n            name: name\n          };\n        }), initialRoutes, configs);\n      }\n      return undefined;\n    }\n    var result;\n    var current;\n\n    // We match the whole path against the regex instead of segments\n    // This makes sure matches such as wildcard will catch any unmatched routes, even if nested\n    var _matchAgainstConfigs = matchAgainstConfigs(remaining, configs),\n      routes = _matchAgainstConfigs.routes,\n      remainingPath = _matchAgainstConfigs.remainingPath;\n    if (routes !== undefined) {\n      // This will always be empty if full path matched\n      current = createNestedStateObject(path, routes, initialRoutes, configs);\n      remaining = remainingPath;\n      result = current;\n    }\n    if (current == null || result == null) {\n      return undefined;\n    }\n    return result;\n  }\n\n  /**\n   * Reference to the last used config resources. This is used to avoid recomputing the config resources when the options are the same.\n   */\n  var cachedConfigResources = new WeakMap();\n  function getConfigResources(options) {\n    if (!options) return prepareConfigResources();\n    var cached = cachedConfigResources.get(options);\n    if (cached) return cached;\n    var resources = prepareConfigResources(options);\n    cachedConfigResources.set(options, resources);\n    return resources;\n  }\n  function prepareConfigResources(options) {\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    var initialRoutes = getInitialRoutes(options);\n    var configs = getSortedNormalizedConfigs(initialRoutes, options == null ? void 0 : options.screens);\n    checkForDuplicatedConfigs(configs);\n    var configWithRegexes = getConfigsWithRegexes(configs);\n    return {\n      initialRoutes: initialRoutes,\n      configs: configs,\n      configWithRegexes: configWithRegexes\n    };\n  }\n  function getInitialRoutes(options) {\n    var initialRoutes = [];\n    if (options != null && options.initialRouteName) {\n      initialRoutes.push({\n        initialRouteName: options.initialRouteName,\n        parentScreens: []\n      });\n    }\n    return initialRoutes;\n  }\n  function getSortedNormalizedConfigs(initialRoutes) {\n    var _ref;\n    var screens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Create a normalized configs array which will be easier to use\n    return (_ref = []).concat.apply(_ref, (0, _toConsumableArray.default)(Object.keys(screens).map(function (key) {\n      return _createNormalizedConfigs(key, screens, initialRoutes, [], [], []);\n    }))).sort(function (a, b) {\n      // Sort config from most specific to least specific:\n      // - more segments\n      // - static segments\n      // - params with regex\n      // - regular params\n      // - wildcard\n\n      // If 2 patterns are same, move the one with less route names up\n      // This is an error state, so it's only useful for consistent error messages\n      if ((0, _isArrayEqualJs.isArrayEqual)(a.segments, b.segments)) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n\n      // If one of the patterns starts with the other, it's more exhaustive\n      // So move it up\n      if ((0, _arrayStartsWithJs.arrayStartsWith)(a.segments, b.segments)) {\n        return -1;\n      }\n      if ((0, _arrayStartsWithJs.arrayStartsWith)(b.segments, a.segments)) {\n        return 1;\n      }\n      for (var i = 0; i < Math.max(a.segments.length, b.segments.length); i++) {\n        // if b is longer, b gets higher priority\n        if (a.segments[i] == null) {\n          return 1;\n        }\n\n        // if a is longer, a gets higher priority\n        if (b.segments[i] == null) {\n          return -1;\n        }\n        var aWildCard = a.segments[i] === '*';\n        var bWildCard = b.segments[i] === '*';\n        var aParam = a.segments[i].startsWith(':');\n        var bParam = b.segments[i].startsWith(':');\n        var aRegex = aParam && a.segments[i].includes('(');\n        var bRegex = bParam && b.segments[i].includes('(');\n\n        // if both are wildcard or regex, we compare next component\n        if (aWildCard && bWildCard || aRegex && bRegex) {\n          continue;\n        }\n\n        // if only a is wildcard, b gets higher priority\n        if (aWildCard && !bWildCard) {\n          return 1;\n        }\n\n        // if only b is wildcard, a gets higher priority\n        if (bWildCard && !aWildCard) {\n          return -1;\n        }\n\n        // If only a has a param, b gets higher priority\n        if (aParam && !bParam) {\n          return 1;\n        }\n\n        // If only b has a param, a gets higher priority\n        if (bParam && !aParam) {\n          return -1;\n        }\n\n        // if only a has regex, a gets higher priority\n        if (aRegex && !bRegex) {\n          return -1;\n        }\n\n        // if only b has regex, b gets higher priority\n        if (bRegex && !aRegex) {\n          return 1;\n        }\n      }\n      return a.segments.length - b.segments.length;\n    });\n  }\n  function checkForDuplicatedConfigs(configs) {\n    // Check for duplicate patterns in the config\n    configs.reduce(function (acc, config) {\n      var pattern = config.segments.join('/');\n      if (acc[pattern]) {\n        var a = acc[pattern].routeNames;\n        var b = config.routeNames;\n\n        // It's not a problem if the path string omitted from a inner most screen\n        // For example, it's ok if a path resolves to `A > B > C` or `A > B`\n        var intersects = a.length > b.length ? b.every(function (it, i) {\n          return a[i] === it;\n        }) : a.every(function (it, i) {\n          return b[i] === it;\n        });\n        if (!intersects) {\n          throw new Error(`Found conflicting screens with the same pattern. The pattern '${pattern}' resolves to both '${a.join(' > ')}' and '${b.join(' > ')}'. Patterns must be unique and cannot resolve to more than one screen.`);\n        }\n      }\n      return Object.assign(acc, (0, _defineProperty.default)({}, pattern, config));\n    }, {});\n  }\n  function getConfigsWithRegexes(configs) {\n    return configs.map(function (c) {\n      return Object.assign({}, c, {\n        // Add `$` to the regex to make sure it matches till end of the path and not just beginning\n        regex: c.regex ? new RegExp(c.regex.source + '$') : undefined\n      });\n    });\n  }\n  var matchAgainstConfigs = function matchAgainstConfigs(remaining, configs) {\n    var routes;\n    var remainingPath = remaining;\n\n    // Go through all configs, and see if the next path segment matches our regex\n    var _loop = function _loop(config) {\n        if (!config.regex) {\n          return 0; // continue\n        }\n        var match = remainingPath.match(config.regex);\n\n        // If our regex matches, we need to extract params from the path\n        if (match) {\n          routes = config.routeNames.map(function (routeName) {\n            var routeConfig = configs.find(function (c) {\n              // Check matching name AND pattern in case same screen is used at different levels in config\n              return c.screen === routeName && (0, _arrayStartsWithJs.arrayStartsWith)(config.segments, c.segments);\n            });\n            var params = routeConfig && match.groups ? Object.fromEntries(Object.entries(match.groups).map(function (_ref2) {\n              var _ref3 = (0, _slicedToArray.default)(_ref2, 2),\n                key = _ref3[0],\n                value = _ref3[1];\n              var index = Number(key.replace('param_', ''));\n              var param = routeConfig.params.find(function (it) {\n                return it.index === index;\n              });\n              if ((param == null ? void 0 : param.screen) === routeName && param != null && param.name) {\n                return [param.name, value];\n              }\n              return null;\n            }).filter(function (it) {\n              return it != null;\n            }).map(function (_ref4) {\n              var _routeConfig$parse;\n              var _ref5 = (0, _slicedToArray.default)(_ref4, 2),\n                key = _ref5[0],\n                value = _ref5[1];\n              if (value == null) {\n                return [key, undefined];\n              }\n              var decoded = decodeURIComponent(value);\n              var parsed = (_routeConfig$parse = routeConfig.parse) != null && _routeConfig$parse[key] ? routeConfig.parse[key](decoded) : decoded;\n              return [key, parsed];\n            })) : undefined;\n            if (params && Object.keys(params).length) {\n              return {\n                name: routeName,\n                params: params\n              };\n            }\n            return {\n              name: routeName\n            };\n          });\n          remainingPath = remainingPath.replace(match[0], '');\n          return 1; // break\n        }\n      },\n      _ret;\n    for (var config of configs) {\n      _ret = _loop(config);\n      if (_ret === 0) continue;\n      if (_ret === 1) break;\n    }\n    return {\n      routes: routes,\n      remainingPath: remainingPath\n    };\n  };\n  var _createNormalizedConfigs = function createNormalizedConfigs(screen, routeConfig, initials, paths, parentScreens, routeNames) {\n    var configs = [];\n    routeNames.push(screen);\n    parentScreens.push(screen);\n    var config = routeConfig[screen];\n    if (typeof config === 'string') {\n      paths.push({\n        screen: screen,\n        path: config\n      });\n      configs.push(createConfigItem(screen, (0, _toConsumableArray.default)(routeNames), (0, _toConsumableArray.default)(paths)));\n    } else if (typeof config === 'object') {\n      var _config$alias;\n      // if an object is specified as the value (e.g. Foo: { ... }),\n      // it can have `path` property and\n      // it could have `screens` prop which has nested configs\n      if (typeof config.path === 'string') {\n        if (config.exact && config.path == null) {\n          throw new Error(`Screen '${screen}' doesn't specify a 'path'. A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. \\`path: ''\\`.`);\n        }\n\n        // We should add alias configs after the main config\n        // So unless they are more specific, main config will be matched first\n        var aliasConfigs = [];\n        if (config.alias) {\n          for (var alias of config.alias) {\n            if (typeof alias === 'string') {\n              aliasConfigs.push(createConfigItem(screen, (0, _toConsumableArray.default)(routeNames), [].concat((0, _toConsumableArray.default)(paths), [{\n                screen: screen,\n                path: alias\n              }]), config.parse));\n            } else if (typeof alias === 'object') {\n              aliasConfigs.push(createConfigItem(screen, (0, _toConsumableArray.default)(routeNames), alias.exact ? [{\n                screen: screen,\n                path: alias.path\n              }] : [].concat((0, _toConsumableArray.default)(paths), [{\n                screen: screen,\n                path: alias.path\n              }]), alias.parse));\n            }\n          }\n        }\n        if (config.exact) {\n          // If it's an exact path, we don't need to keep track of the parent screens\n          // So we can clear it\n          paths.length = 0;\n        }\n        paths.push({\n          screen: screen,\n          path: config.path\n        });\n        configs.push(createConfigItem(screen, (0, _toConsumableArray.default)(routeNames), (0, _toConsumableArray.default)(paths), config.parse));\n        configs.push.apply(configs, aliasConfigs);\n      }\n      if (typeof config !== 'string' && typeof config.path !== 'string' && (_config$alias = config.alias) != null && _config$alias.length) {\n        throw new Error(`Screen '${screen}' doesn't specify a 'path'. A 'path' needs to be specified in order to use 'alias'.`);\n      }\n      if (config.screens) {\n        // property `initialRouteName` without `screens` has no purpose\n        if (config.initialRouteName) {\n          initials.push({\n            initialRouteName: config.initialRouteName,\n            parentScreens: parentScreens\n          });\n        }\n        Object.keys(config.screens).forEach(function (nestedConfig) {\n          var result = _createNormalizedConfigs(nestedConfig, config.screens, initials, (0, _toConsumableArray.default)(paths), (0, _toConsumableArray.default)(parentScreens), routeNames);\n          configs.push.apply(configs, (0, _toConsumableArray.default)(result));\n        });\n      }\n    }\n    routeNames.pop();\n    return configs;\n  };\n  var createConfigItem = function createConfigItem(screen, routeNames, paths, parse) {\n    var parts = [];\n\n    // Parse the path string into parts for easier matching\n    var _loop2 = function _loop2(_screen) {\n      parts.push.apply(parts, (0, _toConsumableArray.default)((0, _getPatternPartsJs.getPatternParts)(path).map(function (part) {\n        return Object.assign({}, part, {\n          screen: _screen\n        });\n      })));\n    };\n    for (var _ref6 of paths) {\n      var _screen = _ref6.screen;\n      var path = _ref6.path;\n      _loop2(_screen);\n    }\n    var regex = parts.length ? new RegExp(`^(${parts.map(function (it, i) {\n      if (it.param) {\n        var reg = it.regex || '[^/]+';\n        return `(((?<param_${i}>${reg})\\\\/)${it.optional ? '?' : ''})`;\n      }\n      return `${it.segment === '*' ? '.*' : (0, escape.default)(it.segment)}\\\\/`;\n    }).join('')})$`) : undefined;\n    var segments = parts.map(function (it) {\n      return it.segment;\n    });\n    var params = parts.map(function (it, i) {\n      return it.param ? {\n        index: i,\n        screen: it.screen,\n        name: it.param\n      } : null;\n    }).filter(function (it) {\n      return it != null;\n    });\n    return {\n      screen: screen,\n      regex: regex,\n      segments: segments,\n      params: params,\n      routeNames: routeNames,\n      parse: parse\n    };\n  };\n  var findParseConfigForRoute = function findParseConfigForRoute(routeName, flatConfig) {\n    for (var config of flatConfig) {\n      if (routeName === config.routeNames[config.routeNames.length - 1]) {\n        return config.parse;\n      }\n    }\n    return undefined;\n  };\n\n  // Try to find an initial route connected with the one passed\n  var findInitialRoute = function findInitialRoute(routeName, parentScreens, initialRoutes) {\n    for (var config of initialRoutes) {\n      if (parentScreens.length === config.parentScreens.length) {\n        var sameParents = true;\n        for (var i = 0; i < parentScreens.length; i++) {\n          if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n            sameParents = false;\n            break;\n          }\n        }\n        if (sameParents) {\n          return routeName !== config.initialRouteName ? config.initialRouteName : undefined;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  // returns state object with values depending on whether\n  // it is the end of state and if there is initialRoute for this level\n  var createStateObject = function createStateObject(initialRoute, route, isEmpty) {\n    if (isEmpty) {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, route]\n        };\n      } else {\n        return {\n          routes: [route]\n        };\n      }\n    } else {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, Object.assign({}, route, {\n            state: {\n              routes: []\n            }\n          })]\n        };\n      } else {\n        return {\n          routes: [Object.assign({}, route, {\n            state: {\n              routes: []\n            }\n          })]\n        };\n      }\n    }\n  };\n  var createNestedStateObject = function createNestedStateObject(path, routes, initialRoutes, flatConfig) {\n    var route = routes.shift();\n    var parentScreens = [];\n    var initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n    parentScreens.push(route.name);\n    var state = createStateObject(initialRoute, route, routes.length === 0);\n    if (routes.length > 0) {\n      var nestedState = state;\n      while (route = routes.shift()) {\n        initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n        var nestedStateIndex = nestedState.index || nestedState.routes.length - 1;\n        nestedState.routes[nestedStateIndex].state = createStateObject(initialRoute, route, routes.length === 0);\n        if (routes.length > 0) {\n          nestedState = nestedState.routes[nestedStateIndex].state;\n        }\n        parentScreens.push(route.name);\n      }\n    }\n    route = (0, _findFocusedRouteJs.findFocusedRoute)(state);\n    route.path = path.replace(/\\/$/, '');\n    var params = parseQueryParams(path, flatConfig ? findParseConfigForRoute(route.name, flatConfig) : undefined);\n    if (params) {\n      route.params = Object.assign({}, route.params, params);\n    }\n    return state;\n  };\n  var parseQueryParams = function parseQueryParams(path, parseConfig) {\n    var query = path.split('?')[1];\n    var params = queryString.parse(query);\n    if (parseConfig) {\n      Object.keys(params).forEach(function (name) {\n        if (Object.hasOwnProperty.call(parseConfig, name) && typeof params[name] === 'string') {\n          params[name] = parseConfig[name](params[name]);\n        }\n      });\n    }\n    return Object.keys(params).length ? params : undefined;\n  };\n});","lineCount":579,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13],[16,10,1,13,"d"],[16,11,1,13],[16,14,1,13,"Object"],[16,20,1,13],[16,21,1,13,"getOwnPropertyDescriptor"],[16,45,1,13],[16,46,1,13,"e"],[16,47,1,13],[16,49,1,13,"k"],[16,50,1,13],[17,6,1,13,"Object"],[17,12,1,13],[17,13,1,13,"defineProperty"],[17,27,1,13],[17,28,1,13,"n"],[17,29,1,13],[17,31,1,13,"k"],[17,32,1,13],[17,34,1,13,"d"],[17,35,1,13],[17,36,1,13,"get"],[17,39,1,13],[17,42,1,13,"d"],[17,43,1,13],[18,8,1,13,"enumerable"],[18,18,1,13],[19,8,1,13,"get"],[19,11,1,13],[19,22,1,13,"get"],[19,23,1,13],[20,10,1,13],[20,17,1,13,"e"],[20,18,1,13],[20,19,1,13,"k"],[20,20,1,13],[21,8,1,13],[22,6,1,13],[23,4,1,13],[24,4,1,13,"n"],[24,5,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,16,1,13,"e"],[24,17,1,13],[25,4,1,13],[25,11,1,13,"n"],[25,12,1,13],[26,2,1,13],[27,2,31,0,"exports"],[27,9,31,0],[27,10,31,0,"getStateFromPath"],[27,26,31,0],[27,29,31,0,"getStateFromPath"],[27,45,31,0],[28,2,100,1],[28,6,100,1,"_babelRuntimeHelpersSlicedToArray"],[28,39,100,1],[28,42,100,1,"require"],[28,49,100,1],[28,50,100,1,"_dependencyMap"],[28,64,100,1],[29,2,100,1],[29,6,100,1,"_slicedToArray"],[29,20,100,1],[29,23,100,1,"_interopDefault"],[29,38,100,1],[29,39,100,1,"_babelRuntimeHelpersSlicedToArray"],[29,72,100,1],[30,2,100,1],[30,6,100,1,"_babelRuntimeHelpersDefineProperty"],[30,40,100,1],[30,43,100,1,"require"],[30,50,100,1],[30,51,100,1,"_dependencyMap"],[30,65,100,1],[31,2,100,1],[31,6,100,1,"_defineProperty"],[31,21,100,1],[31,24,100,1,"_interopDefault"],[31,39,100,1],[31,40,100,1,"_babelRuntimeHelpersDefineProperty"],[31,74,100,1],[32,2,100,1],[32,6,100,1,"_babelRuntimeHelpersToConsumableArray"],[32,43,100,1],[32,46,100,1,"require"],[32,53,100,1],[32,54,100,1,"_dependencyMap"],[32,68,100,1],[33,2,100,1],[33,6,100,1,"_toConsumableArray"],[33,24,100,1],[33,27,100,1,"_interopDefault"],[33,42,100,1],[33,43,100,1,"_babelRuntimeHelpersToConsumableArray"],[33,80,100,1],[34,2,3,0],[34,6,3,0,"_escapeStringRegexp"],[34,25,3,0],[34,28,3,0,"require"],[34,35,3,0],[34,36,3,0,"_dependencyMap"],[34,50,3,0],[35,2,3,0],[35,6,3,0,"escape"],[35,12,3,0],[35,15,3,0,"_interopDefault"],[35,30,3,0],[35,31,3,0,"_escapeStringRegexp"],[35,50,3,0],[36,2,4,0],[36,6,4,0,"_queryString"],[36,18,4,0],[36,21,4,0,"require"],[36,28,4,0],[36,29,4,0,"_dependencyMap"],[36,43,4,0],[37,2,4,0],[37,6,4,0,"queryString"],[37,17,4,0],[37,20,4,0,"_interopNamespace"],[37,37,4,0],[37,38,4,0,"_queryString"],[37,50,4,0],[38,2,5,0],[38,6,5,0,"_arrayStartsWithJs"],[38,24,5,0],[38,27,5,0,"require"],[38,34,5,0],[38,35,5,0,"_dependencyMap"],[38,49,5,0],[39,2,6,0],[39,6,6,0,"_findFocusedRouteJs"],[39,25,6,0],[39,28,6,0,"require"],[39,35,6,0],[39,36,6,0,"_dependencyMap"],[39,50,6,0],[40,2,7,0],[40,6,7,0,"_getPatternPartsJs"],[40,24,7,0],[40,27,7,0,"require"],[40,34,7,0],[40,35,7,0,"_dependencyMap"],[40,49,7,0],[41,2,8,0],[41,6,8,0,"_isArrayEqualJs"],[41,21,8,0],[41,24,8,0,"require"],[41,31,8,0],[41,32,8,0,"_dependencyMap"],[41,46,8,0],[42,2,9,0],[42,6,9,0,"_validatePathConfigJs"],[42,27,9,0],[42,30,9,0,"require"],[42,37,9,0],[42,38,9,0,"_dependencyMap"],[42,52,9,0],[43,2,10,0],[44,0,11,0],[45,0,12,0],[46,0,13,0],[47,0,14,0],[48,0,15,0],[49,0,16,0],[50,0,17,0],[51,0,18,0],[52,0,19,0],[53,0,20,0],[54,0,21,0],[55,0,22,0],[56,0,23,0],[57,0,24,0],[58,0,25,0],[59,0,26,0],[60,0,27,0],[61,0,28,0],[62,0,29,0],[63,0,30,0],[64,2,31,7],[64,11,31,16,"getStateFromPath"],[64,27,31,32,"getStateFromPath"],[64,28,31,33,"path"],[64,32,31,37],[64,34,31,39,"options"],[64,41,31,46],[64,43,31,48],[65,4,31,48],[65,8,31,48,"_options$path"],[65,21,31,48],[66,4,32,2],[66,8,32,2,"_getConfigResources"],[66,27,32,2],[66,30,35,6,"getConfigResources"],[66,48,35,24],[66,49,35,25,"options"],[66,56,35,32],[66,57,35,33],[67,6,33,4,"initialRoutes"],[67,19,33,17],[67,22,33,17,"_getConfigResources"],[67,41,33,17],[67,42,33,4,"initialRoutes"],[67,55,33,17],[68,6,34,4,"configs"],[68,13,34,11],[68,16,34,11,"_getConfigResources"],[68,35,34,11],[68,36,34,4,"configs"],[68,43,34,11],[69,4,36,2],[69,8,36,8,"screens"],[69,15,36,15],[69,18,36,18,"options"],[69,25,36,25],[69,45,36,18,"options"],[69,52,36,25],[69,53,36,27,"screens"],[69,60,36,34],[70,4,37,2],[70,8,37,6,"remaining"],[70,17,37,15],[70,20,37,18,"path"],[70,24,37,22],[70,25,37,23,"replace"],[70,32,37,30],[70,33,37,31],[70,39,37,37],[70,41,37,39],[70,44,37,42],[70,45,37,43],[70,46,37,44],[71,4,37,44],[71,5,38,3,"replace"],[71,12,38,10],[71,13,38,11],[71,18,38,16],[71,20,38,18],[71,22,38,20],[71,23,38,21],[71,24,38,22],[72,4,38,22],[72,5,39,3,"replace"],[72,12,39,10],[72,13,39,11],[72,20,39,18],[72,22,39,20],[72,24,39,22],[72,25,39,23],[72,26,39,24],[72,27,39,25],[74,4,41,2],[75,4,42,2,"remaining"],[75,13,42,11],[75,16,42,14,"remaining"],[75,25,42,23],[75,26,42,24,"endsWith"],[75,34,42,32],[75,35,42,33],[75,38,42,36],[75,39,42,37],[75,42,42,40,"remaining"],[75,51,42,49],[75,54,42,52],[75,57,42,55,"remaining"],[75,66,42,64],[75,69,42,67],[76,4,43,2],[76,8,43,8,"prefix"],[76,14,43,14],[76,17,43,17,"options"],[76,24,43,24],[76,37,43,24,"_options$path"],[76,50,43,24],[76,53,43,17,"options"],[76,60,43,24],[76,61,43,26,"path"],[76,65,43,30],[76,86,43,17,"_options$path"],[76,99,43,17],[76,100,43,32,"replace"],[76,107,43,39],[76,108,43,40],[76,113,43,45],[76,115,43,47],[76,117,43,49],[76,118,43,50],[76,119,43,51],[76,120,43,52],[78,4,45,2],[78,8,45,6,"prefix"],[78,14,45,12],[78,16,45,14],[79,6,46,4],[80,6,47,4],[80,10,47,10,"normalizedPrefix"],[80,26,47,26],[80,29,47,29,"prefix"],[80,35,47,35],[80,36,47,36,"endsWith"],[80,44,47,44],[80,45,47,45],[80,48,47,48],[80,49,47,49],[80,52,47,52,"prefix"],[80,58,47,58],[80,61,47,61],[80,64,47,64,"prefix"],[80,70,47,70],[80,73,47,73],[82,6,49,4],[83,6,50,4],[83,10,50,8],[83,11,50,9,"remaining"],[83,20,50,18],[83,21,50,19,"startsWith"],[83,31,50,29],[83,32,50,30,"normalizedPrefix"],[83,48,50,46],[83,49,50,47],[83,51,50,49],[84,8,51,6],[84,15,51,13,"undefined"],[84,24,51,22],[85,6,52,4],[87,6,54,4],[88,6,55,4,"remaining"],[88,15,55,13],[88,18,55,16,"remaining"],[88,27,55,25],[88,28,55,26,"replace"],[88,35,55,33],[88,36,55,34,"normalizedPrefix"],[88,52,55,50],[88,54,55,52],[88,56,55,54],[88,57,55,55],[89,4,56,2],[90,4,57,2],[90,8,57,6,"screens"],[90,15,57,13],[90,20,57,18,"undefined"],[90,29,57,27],[90,31,57,29],[91,6,58,4],[92,6,59,4],[92,10,59,10,"routes"],[92,17,59,16],[92,20,59,19,"remaining"],[92,29,59,28],[92,30,59,29,"split"],[92,35,59,34],[92,36,59,35],[92,39,59,38],[92,40,59,39],[92,41,59,40,"filter"],[92,47,59,46],[92,48,59,47,"Boolean"],[92,55,59,54],[92,56,59,55],[92,57,59,56,"map"],[92,60,59,59],[92,61,59,60],[92,71,59,60,"segment"],[92,78,59,67],[92,80,59,71],[93,8,60,6],[93,12,60,12,"name"],[93,16,60,16],[93,19,60,19,"decodeURIComponent"],[93,37,60,37],[93,38,60,38,"segment"],[93,45,60,45],[93,46,60,46],[94,8,61,6],[94,15,61,13],[95,10,62,8,"name"],[95,14,62,12],[95,16,62,8,"name"],[96,8,63,6],[96,9,63,7],[97,6,64,4],[97,7,64,5],[97,8,64,6],[98,6,65,4],[98,10,65,8,"routes"],[98,17,65,14],[98,18,65,15,"length"],[98,24,65,21],[98,26,65,23],[99,8,66,6],[99,15,66,13,"createNestedStateObject"],[99,38,66,36],[99,39,66,37,"path"],[99,43,66,41],[99,45,66,43,"routes"],[99,52,66,49],[99,54,66,51,"initialRoutes"],[99,67,66,64],[99,68,66,65],[100,6,67,4],[101,6,68,4],[101,13,68,11,"undefined"],[101,22,68,20],[102,4,69,2],[103,4,70,2],[103,8,70,6,"remaining"],[103,17,70,15],[103,22,70,20],[103,25,70,23],[103,27,70,25],[104,6,71,4],[105,6,72,4],[106,6,73,4],[106,10,73,10,"match"],[106,15,73,15],[106,18,73,18,"configs"],[106,25,73,25],[106,26,73,26,"find"],[106,30,73,30],[106,31,73,31],[106,41,73,31,"config"],[106,47,73,37],[107,8,73,37],[107,15,73,41,"config"],[107,21,73,47],[107,22,73,48,"segments"],[107,30,73,56],[107,31,73,57,"join"],[107,35,73,61],[107,36,73,62],[107,39,73,65],[107,40,73,66],[107,45,73,71],[107,47,73,73],[108,6,73,73],[108,8,73,74],[109,6,74,4],[109,10,74,8,"match"],[109,15,74,13],[109,17,74,15],[110,8,75,6],[110,15,75,13,"createNestedStateObject"],[110,38,75,36],[110,39,75,37,"path"],[110,43,75,41],[110,45,75,43,"match"],[110,50,75,48],[110,51,75,49,"routeNames"],[110,61,75,59],[110,62,75,60,"map"],[110,65,75,63],[110,66,75,64],[110,76,75,64,"name"],[110,80,75,68],[111,10,75,68],[111,17,75,73],[112,12,76,8,"name"],[112,16,76,12],[112,18,76,8,"name"],[113,10,77,6],[113,11,77,7],[114,8,77,7],[114,9,77,8],[114,10,77,9],[114,12,77,11,"initialRoutes"],[114,25,77,24],[114,27,77,26,"configs"],[114,34,77,33],[114,35,77,34],[115,6,78,4],[116,6,79,4],[116,13,79,11,"undefined"],[116,22,79,20],[117,4,80,2],[118,4,81,2],[118,8,81,6,"result"],[118,14,81,12],[119,4,82,2],[119,8,82,6,"current"],[119,15,82,13],[121,4,84,2],[122,4,85,2],[123,4,86,2],[123,8,86,2,"_matchAgainstConfigs"],[123,28,86,2],[123,31,89,6,"matchAgainstConfigs"],[123,50,89,25],[123,51,89,26,"remaining"],[123,60,89,35],[123,62,89,37,"configs"],[123,69,89,44],[123,70,89,45],[124,6,87,4,"routes"],[124,12,87,10],[124,15,87,10,"_matchAgainstConfigs"],[124,35,87,10],[124,36,87,4,"routes"],[124,42,87,10],[125,6,88,4,"remainingPath"],[125,19,88,17],[125,22,88,17,"_matchAgainstConfigs"],[125,42,88,17],[125,43,88,4,"remainingPath"],[125,56,88,17],[126,4,90,2],[126,8,90,6,"routes"],[126,14,90,12],[126,19,90,17,"undefined"],[126,28,90,26],[126,30,90,28],[127,6,91,4],[128,6,92,4,"current"],[128,13,92,11],[128,16,92,14,"createNestedStateObject"],[128,39,92,37],[128,40,92,38,"path"],[128,44,92,42],[128,46,92,44,"routes"],[128,52,92,50],[128,54,92,52,"initialRoutes"],[128,67,92,65],[128,69,92,67,"configs"],[128,76,92,74],[128,77,92,75],[129,6,93,4,"remaining"],[129,15,93,13],[129,18,93,16,"remainingPath"],[129,31,93,29],[130,6,94,4,"result"],[130,12,94,10],[130,15,94,13,"current"],[130,22,94,20],[131,4,95,2],[132,4,96,2],[132,8,96,6,"current"],[132,15,96,13],[132,19,96,17],[132,23,96,21],[132,27,96,25,"result"],[132,33,96,31],[132,37,96,35],[132,41,96,39],[132,43,96,41],[133,6,97,4],[133,13,97,11,"undefined"],[133,22,97,20],[134,4,98,2],[135,4,99,2],[135,11,99,9,"result"],[135,17,99,15],[136,2,100,0],[138,2,102,0],[139,0,103,0],[140,0,104,0],[141,2,105,0],[141,6,105,6,"cachedConfigResources"],[141,27,105,27],[141,30,105,30],[141,34,105,34,"WeakMap"],[141,41,105,41],[141,42,105,42],[141,43,105,43],[142,2,106,0],[142,11,106,9,"getConfigResources"],[142,29,106,27,"getConfigResources"],[142,30,106,28,"options"],[142,37,106,35],[142,39,106,37],[143,4,107,2],[143,8,107,6],[143,9,107,7,"options"],[143,16,107,14],[143,18,107,16],[143,25,107,23,"prepareConfigResources"],[143,47,107,45],[143,48,107,46],[143,49,107,47],[144,4,108,2],[144,8,108,8,"cached"],[144,14,108,14],[144,17,108,17,"cachedConfigResources"],[144,38,108,38],[144,39,108,39,"get"],[144,42,108,42],[144,43,108,43,"options"],[144,50,108,50],[144,51,108,51],[145,4,109,2],[145,8,109,6,"cached"],[145,14,109,12],[145,16,109,14],[145,23,109,21,"cached"],[145,29,109,27],[146,4,110,2],[146,8,110,8,"resources"],[146,17,110,17],[146,20,110,20,"prepareConfigResources"],[146,42,110,42],[146,43,110,43,"options"],[146,50,110,50],[146,51,110,51],[147,4,111,2,"cachedConfigResources"],[147,25,111,23],[147,26,111,24,"set"],[147,29,111,27],[147,30,111,28,"options"],[147,37,111,35],[147,39,111,37,"resources"],[147,48,111,46],[147,49,111,47],[148,4,112,2],[148,11,112,9,"resources"],[148,20,112,18],[149,2,113,0],[150,2,114,0],[150,11,114,9,"prepareConfigResources"],[150,33,114,31,"prepareConfigResources"],[150,34,114,32,"options"],[150,41,114,39],[150,43,114,41],[151,4,115,2],[151,8,115,6,"options"],[151,15,115,13],[151,17,115,15],[152,6,116,4],[152,10,116,4,"validatePathConfig"],[152,31,116,22],[152,32,116,22,"validatePathConfig"],[152,50,116,22],[152,52,116,23,"options"],[152,59,116,30],[152,60,116,31],[153,4,117,2],[154,4,118,2],[154,8,118,8,"initialRoutes"],[154,21,118,21],[154,24,118,24,"getInitialRoutes"],[154,40,118,40],[154,41,118,41,"options"],[154,48,118,48],[154,49,118,49],[155,4,119,2],[155,8,119,8,"configs"],[155,15,119,15],[155,18,119,18,"getSortedNormalizedConfigs"],[155,44,119,44],[155,45,119,45,"initialRoutes"],[155,58,119,58],[155,60,119,60,"options"],[155,67,119,67],[155,87,119,60,"options"],[155,94,119,67],[155,95,119,69,"screens"],[155,102,119,76],[155,103,119,77],[156,4,120,2,"checkForDuplicatedConfigs"],[156,29,120,27],[156,30,120,28,"configs"],[156,37,120,35],[156,38,120,36],[157,4,121,2],[157,8,121,8,"configWithRegexes"],[157,25,121,25],[157,28,121,28,"getConfigsWithRegexes"],[157,49,121,49],[157,50,121,50,"configs"],[157,57,121,57],[157,58,121,58],[158,4,122,2],[158,11,122,9],[159,6,123,4,"initialRoutes"],[159,19,123,17],[159,21,123,4,"initialRoutes"],[159,34,123,17],[160,6,124,4,"configs"],[160,13,124,11],[160,15,124,4,"configs"],[160,22,124,11],[161,6,125,4,"configWithRegexes"],[161,23,125,21],[161,25,125,4,"configWithRegexes"],[162,4,126,2],[162,5,126,3],[163,2,127,0],[164,2,128,0],[164,11,128,9,"getInitialRoutes"],[164,27,128,25,"getInitialRoutes"],[164,28,128,26,"options"],[164,35,128,33],[164,37,128,35],[165,4,129,2],[165,8,129,8,"initialRoutes"],[165,21,129,21],[165,24,129,24],[165,26,129,26],[166,4,130,2],[166,8,130,6,"options"],[166,15,130,13],[166,27,130,6,"options"],[166,34,130,13],[166,35,130,15,"initialRouteName"],[166,51,130,31],[166,53,130,33],[167,6,131,4,"initialRoutes"],[167,19,131,17],[167,20,131,18,"push"],[167,24,131,22],[167,25,131,23],[168,8,132,6,"initialRouteName"],[168,24,132,22],[168,26,132,24,"options"],[168,33,132,31],[168,34,132,32,"initialRouteName"],[168,50,132,48],[169,8,133,6,"parentScreens"],[169,21,133,19],[169,23,133,21],[170,6,134,4],[170,7,134,5],[170,8,134,6],[171,4,135,2],[172,4,136,2],[172,11,136,9,"initialRoutes"],[172,24,136,22],[173,2,137,0],[174,2,138,0],[174,11,138,9,"getSortedNormalizedConfigs"],[174,37,138,35,"getSortedNormalizedConfigs"],[174,38,138,36,"initialRoutes"],[174,51,138,49],[174,53,138,65],[175,4,138,65],[175,8,138,65,"_ref"],[175,12,138,65],[176,4,138,65],[176,8,138,51,"screens"],[176,15,138,58],[176,18,138,58,"arguments"],[176,27,138,58],[176,28,138,58,"length"],[176,34,138,58],[176,42,138,58,"arguments"],[176,51,138,58],[176,59,138,58,"undefined"],[176,68,138,58],[176,71,138,58,"arguments"],[176,80,138,58],[176,86,138,61],[176,87,138,62],[176,88,138,63],[177,4,139,2],[178,4,140,2],[178,11,140,9],[178,12,140,9,"_ref"],[178,16,140,9],[178,21,140,11],[178,23,140,12,"concat"],[178,29,140,18],[178,30,140,18,"apply"],[178,35,140,18],[178,36,140,18,"_ref"],[178,40,140,18],[178,46,140,18,"_toConsumableArray"],[178,64,140,18],[178,65,140,18,"default"],[178,72,140,18],[178,74,140,22,"Object"],[178,80,140,28],[178,81,140,29,"keys"],[178,85,140,33],[178,86,140,34,"screens"],[178,93,140,41],[178,94,140,42],[178,95,140,43,"map"],[178,98,140,46],[178,99,140,47],[178,109,140,47,"key"],[178,112,140,50],[179,6,140,50],[179,13,140,54,"createNormalizedConfigs"],[179,37,140,77],[179,38,140,78,"key"],[179,41,140,81],[179,43,140,83,"screens"],[179,50,140,90],[179,52,140,92,"initialRoutes"],[179,65,140,105],[179,67,140,107],[179,69,140,109],[179,71,140,111],[179,73,140,113],[179,75,140,115],[179,77,140,117],[179,78,140,118],[180,4,140,118],[180,6,140,119],[180,8,140,120],[180,9,140,121,"sort"],[180,13,140,125],[180,14,140,126],[180,24,140,127,"a"],[180,25,140,128],[180,27,140,130,"b"],[180,28,140,131],[180,30,140,136],[181,6,141,4],[182,6,142,4],[183,6,143,4],[184,6,144,4],[185,6,145,4],[186,6,146,4],[188,6,148,4],[189,6,149,4],[190,6,150,4],[190,10,150,8],[190,14,150,8,"isArrayEqual"],[190,29,150,20],[190,30,150,20,"isArrayEqual"],[190,42,150,20],[190,44,150,21,"a"],[190,45,150,22],[190,46,150,23,"segments"],[190,54,150,31],[190,56,150,33,"b"],[190,57,150,34],[190,58,150,35,"segments"],[190,66,150,43],[190,67,150,44],[190,69,150,46],[191,8,151,6],[191,15,151,13,"b"],[191,16,151,14],[191,17,151,15,"routeNames"],[191,27,151,25],[191,28,151,26,"join"],[191,32,151,30],[191,33,151,31],[191,36,151,34],[191,37,151,35],[191,38,151,36,"localeCompare"],[191,51,151,49],[191,52,151,50,"a"],[191,53,151,51],[191,54,151,52,"routeNames"],[191,64,151,62],[191,65,151,63,"join"],[191,69,151,67],[191,70,151,68],[191,73,151,71],[191,74,151,72],[191,75,151,73],[192,6,152,4],[194,6,154,4],[195,6,155,4],[196,6,156,4],[196,10,156,8],[196,14,156,8,"arrayStartsWith"],[196,32,156,23],[196,33,156,23,"arrayStartsWith"],[196,48,156,23],[196,50,156,24,"a"],[196,51,156,25],[196,52,156,26,"segments"],[196,60,156,34],[196,62,156,36,"b"],[196,63,156,37],[196,64,156,38,"segments"],[196,72,156,46],[196,73,156,47],[196,75,156,49],[197,8,157,6],[197,15,157,13],[197,16,157,14],[197,17,157,15],[198,6,158,4],[199,6,159,4],[199,10,159,8],[199,14,159,8,"arrayStartsWith"],[199,32,159,23],[199,33,159,23,"arrayStartsWith"],[199,48,159,23],[199,50,159,24,"b"],[199,51,159,25],[199,52,159,26,"segments"],[199,60,159,34],[199,62,159,36,"a"],[199,63,159,37],[199,64,159,38,"segments"],[199,72,159,46],[199,73,159,47],[199,75,159,49],[200,8,160,6],[200,15,160,13],[200,16,160,14],[201,6,161,4],[202,6,162,4],[202,11,162,9],[202,15,162,13,"i"],[202,16,162,14],[202,19,162,17],[202,20,162,18],[202,22,162,20,"i"],[202,23,162,21],[202,26,162,24,"Math"],[202,30,162,28],[202,31,162,29,"max"],[202,34,162,32],[202,35,162,33,"a"],[202,36,162,34],[202,37,162,35,"segments"],[202,45,162,43],[202,46,162,44,"length"],[202,52,162,50],[202,54,162,52,"b"],[202,55,162,53],[202,56,162,54,"segments"],[202,64,162,62],[202,65,162,63,"length"],[202,71,162,69],[202,72,162,70],[202,74,162,72,"i"],[202,75,162,73],[202,77,162,75],[202,79,162,77],[203,8,163,6],[204,8,164,6],[204,12,164,10,"a"],[204,13,164,11],[204,14,164,12,"segments"],[204,22,164,20],[204,23,164,21,"i"],[204,24,164,22],[204,25,164,23],[204,29,164,27],[204,33,164,31],[204,35,164,33],[205,10,165,8],[205,17,165,15],[205,18,165,16],[206,8,166,6],[208,8,168,6],[209,8,169,6],[209,12,169,10,"b"],[209,13,169,11],[209,14,169,12,"segments"],[209,22,169,20],[209,23,169,21,"i"],[209,24,169,22],[209,25,169,23],[209,29,169,27],[209,33,169,31],[209,35,169,33],[210,10,170,8],[210,17,170,15],[210,18,170,16],[210,19,170,17],[211,8,171,6],[212,8,172,6],[212,12,172,12,"aWildCard"],[212,21,172,21],[212,24,172,24,"a"],[212,25,172,25],[212,26,172,26,"segments"],[212,34,172,34],[212,35,172,35,"i"],[212,36,172,36],[212,37,172,37],[212,42,172,42],[212,45,172,45],[213,8,173,6],[213,12,173,12,"bWildCard"],[213,21,173,21],[213,24,173,24,"b"],[213,25,173,25],[213,26,173,26,"segments"],[213,34,173,34],[213,35,173,35,"i"],[213,36,173,36],[213,37,173,37],[213,42,173,42],[213,45,173,45],[214,8,174,6],[214,12,174,12,"aParam"],[214,18,174,18],[214,21,174,21,"a"],[214,22,174,22],[214,23,174,23,"segments"],[214,31,174,31],[214,32,174,32,"i"],[214,33,174,33],[214,34,174,34],[214,35,174,35,"startsWith"],[214,45,174,45],[214,46,174,46],[214,49,174,49],[214,50,174,50],[215,8,175,6],[215,12,175,12,"bParam"],[215,18,175,18],[215,21,175,21,"b"],[215,22,175,22],[215,23,175,23,"segments"],[215,31,175,31],[215,32,175,32,"i"],[215,33,175,33],[215,34,175,34],[215,35,175,35,"startsWith"],[215,45,175,45],[215,46,175,46],[215,49,175,49],[215,50,175,50],[216,8,176,6],[216,12,176,12,"aRegex"],[216,18,176,18],[216,21,176,21,"aParam"],[216,27,176,27],[216,31,176,31,"a"],[216,32,176,32],[216,33,176,33,"segments"],[216,41,176,41],[216,42,176,42,"i"],[216,43,176,43],[216,44,176,44],[216,45,176,45,"includes"],[216,53,176,53],[216,54,176,54],[216,57,176,57],[216,58,176,58],[217,8,177,6],[217,12,177,12,"bRegex"],[217,18,177,18],[217,21,177,21,"bParam"],[217,27,177,27],[217,31,177,31,"b"],[217,32,177,32],[217,33,177,33,"segments"],[217,41,177,41],[217,42,177,42,"i"],[217,43,177,43],[217,44,177,44],[217,45,177,45,"includes"],[217,53,177,53],[217,54,177,54],[217,57,177,57],[217,58,177,58],[219,8,179,6],[220,8,180,6],[220,12,180,10,"aWildCard"],[220,21,180,19],[220,25,180,23,"bWildCard"],[220,34,180,32],[220,38,180,36,"aRegex"],[220,44,180,42],[220,48,180,46,"bRegex"],[220,54,180,52],[220,56,180,54],[221,10,181,8],[222,8,182,6],[224,8,184,6],[225,8,185,6],[225,12,185,10,"aWildCard"],[225,21,185,19],[225,25,185,23],[225,26,185,24,"bWildCard"],[225,35,185,33],[225,37,185,35],[226,10,186,8],[226,17,186,15],[226,18,186,16],[227,8,187,6],[229,8,189,6],[230,8,190,6],[230,12,190,10,"bWildCard"],[230,21,190,19],[230,25,190,23],[230,26,190,24,"aWildCard"],[230,35,190,33],[230,37,190,35],[231,10,191,8],[231,17,191,15],[231,18,191,16],[231,19,191,17],[232,8,192,6],[234,8,194,6],[235,8,195,6],[235,12,195,10,"aParam"],[235,18,195,16],[235,22,195,20],[235,23,195,21,"bParam"],[235,29,195,27],[235,31,195,29],[236,10,196,8],[236,17,196,15],[236,18,196,16],[237,8,197,6],[239,8,199,6],[240,8,200,6],[240,12,200,10,"bParam"],[240,18,200,16],[240,22,200,20],[240,23,200,21,"aParam"],[240,29,200,27],[240,31,200,29],[241,10,201,8],[241,17,201,15],[241,18,201,16],[241,19,201,17],[242,8,202,6],[244,8,204,6],[245,8,205,6],[245,12,205,10,"aRegex"],[245,18,205,16],[245,22,205,20],[245,23,205,21,"bRegex"],[245,29,205,27],[245,31,205,29],[246,10,206,8],[246,17,206,15],[246,18,206,16],[246,19,206,17],[247,8,207,6],[249,8,209,6],[250,8,210,6],[250,12,210,10,"bRegex"],[250,18,210,16],[250,22,210,20],[250,23,210,21,"aRegex"],[250,29,210,27],[250,31,210,29],[251,10,211,8],[251,17,211,15],[251,18,211,16],[252,8,212,6],[253,6,213,4],[254,6,214,4],[254,13,214,11,"a"],[254,14,214,12],[254,15,214,13,"segments"],[254,23,214,21],[254,24,214,22,"length"],[254,30,214,28],[254,33,214,31,"b"],[254,34,214,32],[254,35,214,33,"segments"],[254,43,214,41],[254,44,214,42,"length"],[254,50,214,48],[255,4,215,2],[255,5,215,3],[255,6,215,4],[256,2,216,0],[257,2,217,0],[257,11,217,9,"checkForDuplicatedConfigs"],[257,36,217,34,"checkForDuplicatedConfigs"],[257,37,217,35,"configs"],[257,44,217,42],[257,46,217,44],[258,4,218,2],[259,4,219,2,"configs"],[259,11,219,9],[259,12,219,10,"reduce"],[259,18,219,16],[259,19,219,17],[259,29,219,18,"acc"],[259,32,219,21],[259,34,219,23,"config"],[259,40,219,29],[259,42,219,34],[260,6,220,4],[260,10,220,10,"pattern"],[260,17,220,17],[260,20,220,20,"config"],[260,26,220,26],[260,27,220,27,"segments"],[260,35,220,35],[260,36,220,36,"join"],[260,40,220,40],[260,41,220,41],[260,44,220,44],[260,45,220,45],[261,6,221,4],[261,10,221,8,"acc"],[261,13,221,11],[261,14,221,12,"pattern"],[261,21,221,19],[261,22,221,20],[261,24,221,22],[262,8,222,6],[262,12,222,12,"a"],[262,13,222,13],[262,16,222,16,"acc"],[262,19,222,19],[262,20,222,20,"pattern"],[262,27,222,27],[262,28,222,28],[262,29,222,29,"routeNames"],[262,39,222,39],[263,8,223,6],[263,12,223,12,"b"],[263,13,223,13],[263,16,223,16,"config"],[263,22,223,22],[263,23,223,23,"routeNames"],[263,33,223,33],[265,8,225,6],[266,8,226,6],[267,8,227,6],[267,12,227,12,"intersects"],[267,22,227,22],[267,25,227,25,"a"],[267,26,227,26],[267,27,227,27,"length"],[267,33,227,33],[267,36,227,36,"b"],[267,37,227,37],[267,38,227,38,"length"],[267,44,227,44],[267,47,227,47,"b"],[267,48,227,48],[267,49,227,49,"every"],[267,54,227,54],[267,55,227,55],[267,65,227,56,"it"],[267,67,227,58],[267,69,227,60,"i"],[267,70,227,61],[268,10,227,61],[268,17,227,66,"a"],[268,18,227,67],[268,19,227,68,"i"],[268,20,227,69],[268,21,227,70],[268,26,227,75,"it"],[268,28,227,77],[269,8,227,77],[269,10,227,78],[269,13,227,81,"a"],[269,14,227,82],[269,15,227,83,"every"],[269,20,227,88],[269,21,227,89],[269,31,227,90,"it"],[269,33,227,92],[269,35,227,94,"i"],[269,36,227,95],[270,10,227,95],[270,17,227,100,"b"],[270,18,227,101],[270,19,227,102,"i"],[270,20,227,103],[270,21,227,104],[270,26,227,109,"it"],[270,28,227,111],[271,8,227,111],[271,10,227,112],[272,8,228,6],[272,12,228,10],[272,13,228,11,"intersects"],[272,23,228,21],[272,25,228,23],[273,10,229,8],[273,16,229,14],[273,20,229,18,"Error"],[273,25,229,23],[273,26,229,24],[273,91,229,89,"pattern"],[273,98,229,96],[273,121,229,119,"a"],[273,122,229,120],[273,123,229,121,"join"],[273,127,229,125],[273,128,229,126],[273,133,229,131],[273,134,229,132],[273,144,229,142,"b"],[273,145,229,143],[273,146,229,144,"join"],[273,150,229,148],[273,151,229,149],[273,156,229,154],[273,157,229,155],[273,229,229,227],[273,230,229,228],[274,8,230,6],[275,6,231,4],[276,6,232,4],[276,13,232,11,"Object"],[276,19,232,17],[276,20,232,18,"assign"],[276,26,232,24],[276,27,232,25,"acc"],[276,30,232,28],[276,36,232,28,"_defineProperty"],[276,51,232,28],[276,52,232,28,"default"],[276,59,232,28],[276,65,233,7,"pattern"],[276,72,233,14],[276,74,233,17,"config"],[276,80,233,23],[276,81,234,5],[276,82,234,6],[277,4,235,2],[277,5,235,3],[277,7,235,5],[277,8,235,6],[277,9,235,7],[277,10,235,8],[278,2,236,0],[279,2,237,0],[279,11,237,9,"getConfigsWithRegexes"],[279,32,237,30,"getConfigsWithRegexes"],[279,33,237,31,"configs"],[279,40,237,38],[279,42,237,40],[280,4,238,2],[280,11,238,9,"configs"],[280,18,238,16],[280,19,238,17,"map"],[280,22,238,20],[280,23,238,21],[280,33,238,21,"c"],[280,34,238,22],[281,6,238,22],[281,13,238,22,"Object"],[281,19,238,22],[281,20,238,22,"assign"],[281,26,238,22],[281,31,239,7,"c"],[281,32,239,8],[282,8,240,4],[283,8,241,4,"regex"],[283,13,241,9],[283,15,241,11,"c"],[283,16,241,12],[283,17,241,13,"regex"],[283,22,241,18],[283,25,241,21],[283,29,241,25,"RegExp"],[283,35,241,31],[283,36,241,32,"c"],[283,37,241,33],[283,38,241,34,"regex"],[283,43,241,39],[283,44,241,40,"source"],[283,50,241,46],[283,53,241,49],[283,56,241,52],[283,57,241,53],[283,60,241,56,"undefined"],[284,6,241,65],[285,4,241,65],[285,5,242,4],[285,6,242,5],[286,2,243,0],[287,2,244,0],[287,6,244,6,"matchAgainstConfigs"],[287,25,244,25],[287,28,244,28],[287,37,244,6,"matchAgainstConfigs"],[287,56,244,25,"matchAgainstConfigs"],[287,57,244,29,"remaining"],[287,66,244,38],[287,68,244,40,"configs"],[287,75,244,47],[287,77,244,52],[288,4,245,2],[288,8,245,6,"routes"],[288,14,245,12],[289,4,246,2],[289,8,246,6,"remainingPath"],[289,21,246,19],[289,24,246,22,"remaining"],[289,33,246,31],[291,4,248,2],[292,4,248,2],[292,8,248,2,"_loop"],[292,13,248,2],[292,25,248,2,"_loop"],[292,31,248,2,"config"],[292,37,248,2],[292,39,249,32],[293,8,250,4],[293,12,250,8],[293,13,250,9,"config"],[293,19,250,15],[293,20,250,16,"regex"],[293,25,250,21],[293,27,250,23],[294,10,250,23],[295,8,252,4],[296,8,253,4],[296,12,253,10,"match"],[296,17,253,15],[296,20,253,18,"remainingPath"],[296,33,253,31],[296,34,253,32,"match"],[296,39,253,37],[296,40,253,38,"config"],[296,46,253,44],[296,47,253,45,"regex"],[296,52,253,50],[296,53,253,51],[298,8,255,4],[299,8,256,4],[299,12,256,8,"match"],[299,17,256,13],[299,19,256,15],[300,10,257,6,"routes"],[300,16,257,12],[300,19,257,15,"config"],[300,25,257,21],[300,26,257,22,"routeNames"],[300,36,257,32],[300,37,257,33,"map"],[300,40,257,36],[300,41,257,37],[300,51,257,37,"routeName"],[300,60,257,46],[300,62,257,50],[301,12,258,8],[301,16,258,14,"routeConfig"],[301,27,258,25],[301,30,258,28,"configs"],[301,37,258,35],[301,38,258,36,"find"],[301,42,258,40],[301,43,258,41],[301,53,258,41,"c"],[301,54,258,42],[301,56,258,46],[302,14,259,10],[303,14,260,10],[303,21,260,17,"c"],[303,22,260,18],[303,23,260,19,"screen"],[303,29,260,25],[303,34,260,30,"routeName"],[303,43,260,39],[303,47,260,43],[303,51,260,43,"arrayStartsWith"],[303,69,260,58],[303,70,260,58,"arrayStartsWith"],[303,85,260,58],[303,87,260,59,"config"],[303,93,260,65],[303,94,260,66,"segments"],[303,102,260,74],[303,104,260,76,"c"],[303,105,260,77],[303,106,260,78,"segments"],[303,114,260,86],[303,115,260,87],[304,12,261,8],[304,13,261,9],[304,14,261,10],[305,12,262,8],[305,16,262,14,"params"],[305,22,262,20],[305,25,262,23,"routeConfig"],[305,36,262,34],[305,40,262,38,"match"],[305,45,262,43],[305,46,262,44,"groups"],[305,52,262,50],[305,55,262,53,"Object"],[305,61,262,59],[305,62,262,60,"fromEntries"],[305,73,262,71],[305,74,262,72,"Object"],[305,80,262,78],[305,81,262,79,"entries"],[305,88,262,86],[305,89,262,87,"match"],[305,94,262,92],[305,95,262,93,"groups"],[305,101,262,99],[305,102,262,100],[305,103,262,101,"map"],[305,106,262,104],[305,107,262,105],[305,117,262,105,"_ref2"],[305,122,262,105],[305,124,262,123],[306,14,262,123],[306,18,262,123,"_ref3"],[306,23,262,123],[306,30,262,123,"_slicedToArray"],[306,44,262,123],[306,45,262,123,"default"],[306,52,262,123],[306,54,262,123,"_ref2"],[306,59,262,123],[307,16,262,107,"key"],[307,19,262,110],[307,22,262,110,"_ref3"],[307,27,262,110],[308,16,262,112,"value"],[308,21,262,117],[308,24,262,117,"_ref3"],[308,29,262,117],[309,14,263,10],[309,18,263,16,"index"],[309,23,263,21],[309,26,263,24,"Number"],[309,32,263,30],[309,33,263,31,"key"],[309,36,263,34],[309,37,263,35,"replace"],[309,44,263,42],[309,45,263,43],[309,53,263,51],[309,55,263,53],[309,57,263,55],[309,58,263,56],[309,59,263,57],[310,14,264,10],[310,18,264,16,"param"],[310,23,264,21],[310,26,264,24,"routeConfig"],[310,37,264,35],[310,38,264,36,"params"],[310,44,264,42],[310,45,264,43,"find"],[310,49,264,47],[310,50,264,48],[310,60,264,48,"it"],[310,62,264,50],[311,16,264,50],[311,23,264,54,"it"],[311,25,264,56],[311,26,264,57,"index"],[311,31,264,62],[311,36,264,67,"index"],[311,41,264,72],[312,14,264,72],[312,16,264,73],[313,14,265,10],[313,18,265,14],[313,19,265,14,"param"],[313,24,265,19],[313,44,265,14,"param"],[313,49,265,19],[313,50,265,21,"screen"],[313,56,265,27],[313,62,265,32,"routeName"],[313,71,265,41],[313,75,265,45,"param"],[313,80,265,50],[313,92,265,45,"param"],[313,97,265,50],[313,98,265,52,"name"],[313,102,265,56],[313,104,265,58],[314,16,266,12],[314,23,266,19],[314,24,266,20,"param"],[314,29,266,25],[314,30,266,26,"name"],[314,34,266,30],[314,36,266,32,"value"],[314,41,266,37],[314,42,266,38],[315,14,267,10],[316,14,268,10],[316,21,268,17],[316,25,268,21],[317,12,269,8],[317,13,269,9],[317,14,269,10],[317,15,269,11,"filter"],[317,21,269,17],[317,22,269,18],[317,32,269,18,"it"],[317,34,269,20],[318,14,269,20],[318,21,269,24,"it"],[318,23,269,26],[318,27,269,30],[318,31,269,34],[319,12,269,34],[319,14,269,35],[319,15,269,36,"map"],[319,18,269,39],[319,19,269,40],[319,29,269,40,"_ref4"],[319,34,269,40],[319,36,269,58],[320,14,269,58],[320,18,269,58,"_routeConfig$parse"],[320,36,269,58],[321,14,269,58],[321,18,269,58,"_ref5"],[321,23,269,58],[321,30,269,58,"_slicedToArray"],[321,44,269,58],[321,45,269,58,"default"],[321,52,269,58],[321,54,269,58,"_ref4"],[321,59,269,58],[322,16,269,42,"key"],[322,19,269,45],[322,22,269,45,"_ref5"],[322,27,269,45],[323,16,269,47,"value"],[323,21,269,52],[323,24,269,52,"_ref5"],[323,29,269,52],[324,14,270,10],[324,18,270,14,"value"],[324,23,270,19],[324,27,270,23],[324,31,270,27],[324,33,270,29],[325,16,271,12],[325,23,271,19],[325,24,271,20,"key"],[325,27,271,23],[325,29,271,25,"undefined"],[325,38,271,34],[325,39,271,35],[326,14,272,10],[327,14,273,10],[327,18,273,16,"decoded"],[327,25,273,23],[327,28,273,26,"decodeURIComponent"],[327,46,273,44],[327,47,273,45,"value"],[327,52,273,50],[327,53,273,51],[328,14,274,10],[328,18,274,16,"parsed"],[328,24,274,22],[328,27,274,25],[328,28,274,25,"_routeConfig$parse"],[328,46,274,25],[328,49,274,25,"routeConfig"],[328,60,274,36],[328,61,274,37,"parse"],[328,66,274,42],[328,79,274,25,"_routeConfig$parse"],[328,97,274,25],[328,98,274,45,"key"],[328,101,274,48],[328,102,274,49],[328,105,274,52,"routeConfig"],[328,116,274,63],[328,117,274,64,"parse"],[328,122,274,69],[328,123,274,70,"key"],[328,126,274,73],[328,127,274,74],[328,128,274,75,"decoded"],[328,135,274,82],[328,136,274,83],[328,139,274,86,"decoded"],[328,146,274,93],[329,14,275,10],[329,21,275,17],[329,22,275,18,"key"],[329,25,275,21],[329,27,275,23,"parsed"],[329,33,275,29],[329,34,275,30],[330,12,276,8],[330,13,276,9],[330,14,276,10],[330,15,276,11],[330,18,276,14,"undefined"],[330,27,276,23],[331,12,277,8],[331,16,277,12,"params"],[331,22,277,18],[331,26,277,22,"Object"],[331,32,277,28],[331,33,277,29,"keys"],[331,37,277,33],[331,38,277,34,"params"],[331,44,277,40],[331,45,277,41],[331,46,277,42,"length"],[331,52,277,48],[331,54,277,50],[332,14,278,10],[332,21,278,17],[333,16,279,12,"name"],[333,20,279,16],[333,22,279,18,"routeName"],[333,31,279,27],[334,16,280,12,"params"],[334,22,280,18],[334,24,280,12,"params"],[335,14,281,10],[335,15,281,11],[336,12,282,8],[337,12,283,8],[337,19,283,15],[338,14,284,10,"name"],[338,18,284,14],[338,20,284,16,"routeName"],[339,12,285,8],[339,13,285,9],[340,10,286,6],[340,11,286,7],[340,12,286,8],[341,10,287,6,"remainingPath"],[341,23,287,19],[341,26,287,22,"remainingPath"],[341,39,287,35],[341,40,287,36,"replace"],[341,47,287,43],[341,48,287,44,"match"],[341,53,287,49],[341,54,287,50],[341,55,287,51],[341,56,287,52],[341,58,287,54],[341,60,287,56],[341,61,287,57],[342,10,287,58],[343,8,289,4],[344,6,290,2],[344,7,290,3],[345,6,290,3,"_ret"],[345,10,290,3],[346,4,249,2],[346,9,249,7],[346,13,249,13,"config"],[346,19,249,19],[346,23,249,23,"configs"],[346,30,249,30],[347,6,249,30,"_ret"],[347,10,249,30],[347,13,249,30,"_loop"],[347,18,249,30],[347,19,249,30,"config"],[347,25,249,30],[348,6,249,30],[348,10,249,30,"_ret"],[348,14,249,30],[348,22,251,6],[349,6,251,15],[349,10,251,15,"_ret"],[349,14,251,15],[349,22,288,6],[350,4,288,12],[351,4,291,2],[351,11,291,9],[352,6,292,4,"routes"],[352,12,292,10],[352,14,292,4,"routes"],[352,20,292,10],[353,6,293,4,"remainingPath"],[353,19,293,17],[353,21,293,4,"remainingPath"],[354,4,294,2],[354,5,294,3],[355,2,295,0],[355,3,295,1],[356,2,296,0],[356,6,296,6,"createNormalizedConfigs"],[356,30,296,29],[356,33,296,32],[356,42,296,6,"createNormalizedConfigs"],[356,65,296,29,"createNormalizedConfigs"],[356,66,296,33,"screen"],[356,72,296,39],[356,74,296,41,"routeConfig"],[356,85,296,52],[356,87,296,54,"initials"],[356,95,296,62],[356,97,296,64,"paths"],[356,102,296,69],[356,104,296,71,"parentScreens"],[356,117,296,84],[356,119,296,86,"routeNames"],[356,129,296,96],[356,131,296,101],[357,4,297,2],[357,8,297,8,"configs"],[357,15,297,15],[357,18,297,18],[357,20,297,20],[358,4,298,2,"routeNames"],[358,14,298,12],[358,15,298,13,"push"],[358,19,298,17],[358,20,298,18,"screen"],[358,26,298,24],[358,27,298,25],[359,4,299,2,"parentScreens"],[359,17,299,15],[359,18,299,16,"push"],[359,22,299,20],[359,23,299,21,"screen"],[359,29,299,27],[359,30,299,28],[360,4,300,2],[360,8,300,8,"config"],[360,14,300,14],[360,17,300,17,"routeConfig"],[360,28,300,28],[360,29,300,29,"screen"],[360,35,300,35],[360,36,300,36],[361,4,301,2],[361,8,301,6],[361,15,301,13,"config"],[361,21,301,19],[361,26,301,24],[361,34,301,32],[361,36,301,34],[362,6,302,4,"paths"],[362,11,302,9],[362,12,302,10,"push"],[362,16,302,14],[362,17,302,15],[363,8,303,6,"screen"],[363,14,303,12],[363,16,303,6,"screen"],[363,22,303,12],[364,8,304,6,"path"],[364,12,304,10],[364,14,304,12,"config"],[365,6,305,4],[365,7,305,5],[365,8,305,6],[366,6,306,4,"configs"],[366,13,306,11],[366,14,306,12,"push"],[366,18,306,16],[366,19,306,17,"createConfigItem"],[366,35,306,33],[366,36,306,34,"screen"],[366,42,306,40],[366,48,306,40,"_toConsumableArray"],[366,66,306,40],[366,67,306,40,"default"],[366,74,306,40],[366,76,306,46,"routeNames"],[366,86,306,56],[366,93,306,56,"_toConsumableArray"],[366,111,306,56],[366,112,306,56,"default"],[366,119,306,56],[366,121,306,63,"paths"],[366,126,306,68],[366,127,306,69],[366,128,306,70],[366,129,306,71],[367,4,307,2],[367,5,307,3],[367,11,307,9],[367,15,307,13],[367,22,307,20,"config"],[367,28,307,26],[367,33,307,31],[367,41,307,39],[367,43,307,41],[368,6,307,41],[368,10,307,41,"_config$alias"],[368,23,307,41],[369,6,308,4],[370,6,309,4],[371,6,310,4],[372,6,311,4],[372,10,311,8],[372,17,311,15,"config"],[372,23,311,21],[372,24,311,22,"path"],[372,28,311,26],[372,33,311,31],[372,41,311,39],[372,43,311,41],[373,8,312,6],[373,12,312,10,"config"],[373,18,312,16],[373,19,312,17,"exact"],[373,24,312,22],[373,28,312,26,"config"],[373,34,312,32],[373,35,312,33,"path"],[373,39,312,37],[373,43,312,41],[373,47,312,45],[373,49,312,47],[374,10,313,8],[374,16,313,14],[374,20,313,18,"Error"],[374,25,313,23],[374,26,313,24],[374,37,313,35,"screen"],[374,43,313,41],[374,223,313,221],[374,224,313,222],[375,8,314,6],[377,8,316,6],[378,8,317,6],[379,8,318,6],[379,12,318,12,"aliasConfigs"],[379,24,318,24],[379,27,318,27],[379,29,318,29],[380,8,319,6],[380,12,319,10,"config"],[380,18,319,16],[380,19,319,17,"alias"],[380,24,319,22],[380,26,319,24],[381,10,320,8],[381,15,320,13],[381,19,320,19,"alias"],[381,24,320,24],[381,28,320,28,"config"],[381,34,320,34],[381,35,320,35,"alias"],[381,40,320,40],[381,42,320,42],[382,12,321,10],[382,16,321,14],[382,23,321,21,"alias"],[382,28,321,26],[382,33,321,31],[382,41,321,39],[382,43,321,41],[383,14,322,12,"aliasConfigs"],[383,26,322,24],[383,27,322,25,"push"],[383,31,322,29],[383,32,322,30,"createConfigItem"],[383,48,322,46],[383,49,322,47,"screen"],[383,55,322,53],[383,61,322,53,"_toConsumableArray"],[383,79,322,53],[383,80,322,53,"default"],[383,87,322,53],[383,89,322,59,"routeNames"],[383,99,322,69],[383,105,322,69,"concat"],[383,111,322,69],[383,116,322,69,"_toConsumableArray"],[383,134,322,69],[383,135,322,69,"default"],[383,142,322,69],[383,144,322,76,"paths"],[383,149,322,81],[383,153,322,83],[384,16,323,14,"screen"],[384,22,323,20],[384,24,323,14,"screen"],[384,30,323,20],[385,16,324,14,"path"],[385,20,324,18],[385,22,324,20,"alias"],[386,14,325,12],[386,15,325,13],[386,19,325,16,"config"],[386,25,325,22],[386,26,325,23,"parse"],[386,31,325,28],[386,32,325,29],[386,33,325,30],[387,12,326,10],[387,13,326,11],[387,19,326,17],[387,23,326,21],[387,30,326,28,"alias"],[387,35,326,33],[387,40,326,38],[387,48,326,46],[387,50,326,48],[388,14,327,12,"aliasConfigs"],[388,26,327,24],[388,27,327,25,"push"],[388,31,327,29],[388,32,327,30,"createConfigItem"],[388,48,327,46],[388,49,327,47,"screen"],[388,55,327,53],[388,61,327,53,"_toConsumableArray"],[388,79,327,53],[388,80,327,53,"default"],[388,87,327,53],[388,89,327,59,"routeNames"],[388,99,327,69],[388,102,327,72,"alias"],[388,107,327,77],[388,108,327,78,"exact"],[388,113,327,83],[388,116,327,86],[388,117,327,87],[389,16,328,14,"screen"],[389,22,328,20],[389,24,328,14,"screen"],[389,30,328,20],[390,16,329,14,"path"],[390,20,329,18],[390,22,329,20,"alias"],[390,27,329,25],[390,28,329,26,"path"],[391,14,330,12],[391,15,330,13],[391,16,330,14],[391,22,330,14,"concat"],[391,28,330,14],[391,33,330,14,"_toConsumableArray"],[391,51,330,14],[391,52,330,14,"default"],[391,59,330,14],[391,61,330,21,"paths"],[391,66,330,26],[391,70,330,28],[392,16,331,14,"screen"],[392,22,331,20],[392,24,331,14,"screen"],[392,30,331,20],[393,16,332,14,"path"],[393,20,332,18],[393,22,332,20,"alias"],[393,27,332,25],[393,28,332,26,"path"],[394,14,333,12],[394,15,333,13],[394,17,333,14],[394,19,333,16,"alias"],[394,24,333,21],[394,25,333,22,"parse"],[394,30,333,27],[394,31,333,28],[394,32,333,29],[395,12,334,10],[396,10,335,8],[397,8,336,6],[398,8,337,6],[398,12,337,10,"config"],[398,18,337,16],[398,19,337,17,"exact"],[398,24,337,22],[398,26,337,24],[399,10,338,8],[400,10,339,8],[401,10,340,8,"paths"],[401,15,340,13],[401,16,340,14,"length"],[401,22,340,20],[401,25,340,23],[401,26,340,24],[402,8,341,6],[403,8,342,6,"paths"],[403,13,342,11],[403,14,342,12,"push"],[403,18,342,16],[403,19,342,17],[404,10,343,8,"screen"],[404,16,343,14],[404,18,343,8,"screen"],[404,24,343,14],[405,10,344,8,"path"],[405,14,344,12],[405,16,344,14,"config"],[405,22,344,20],[405,23,344,21,"path"],[406,8,345,6],[406,9,345,7],[406,10,345,8],[407,8,346,6,"configs"],[407,15,346,13],[407,16,346,14,"push"],[407,20,346,18],[407,21,346,19,"createConfigItem"],[407,37,346,35],[407,38,346,36,"screen"],[407,44,346,42],[407,50,346,42,"_toConsumableArray"],[407,68,346,42],[407,69,346,42,"default"],[407,76,346,42],[407,78,346,48,"routeNames"],[407,88,346,58],[407,95,346,58,"_toConsumableArray"],[407,113,346,58],[407,114,346,58,"default"],[407,121,346,58],[407,123,346,65,"paths"],[407,128,346,70],[407,131,346,73,"config"],[407,137,346,79],[407,138,346,80,"parse"],[407,143,346,85],[407,144,346,86],[407,145,346,87],[408,8,347,6,"configs"],[408,15,347,13],[408,16,347,14,"push"],[408,20,347,18],[408,21,347,18,"apply"],[408,26,347,18],[408,27,347,6,"configs"],[408,34,347,13],[408,36,347,22,"aliasConfigs"],[408,48,347,34],[408,49,347,35],[409,6,348,4],[410,6,349,4],[410,10,349,8],[410,17,349,15,"config"],[410,23,349,21],[410,28,349,26],[410,36,349,34],[410,40,349,38],[410,47,349,45,"config"],[410,53,349,51],[410,54,349,52,"path"],[410,58,349,56],[410,63,349,61],[410,71,349,69],[410,76,349,69,"_config$alias"],[410,89,349,69],[410,92,349,73,"config"],[410,98,349,79],[410,99,349,80,"alias"],[410,104,349,85],[410,117,349,73,"_config$alias"],[410,130,349,73],[410,131,349,87,"length"],[410,137,349,93],[410,139,349,95],[411,8,350,6],[411,14,350,12],[411,18,350,16,"Error"],[411,23,350,21],[411,24,350,22],[411,35,350,33,"screen"],[411,41,350,39],[411,126,350,124],[411,127,350,125],[412,6,351,4],[413,6,352,4],[413,10,352,8,"config"],[413,16,352,14],[413,17,352,15,"screens"],[413,24,352,22],[413,26,352,24],[414,8,353,6],[415,8,354,6],[415,12,354,10,"config"],[415,18,354,16],[415,19,354,17,"initialRouteName"],[415,35,354,33],[415,37,354,35],[416,10,355,8,"initials"],[416,18,355,16],[416,19,355,17,"push"],[416,23,355,21],[416,24,355,22],[417,12,356,10,"initialRouteName"],[417,28,356,26],[417,30,356,28,"config"],[417,36,356,34],[417,37,356,35,"initialRouteName"],[417,53,356,51],[418,12,357,10,"parentScreens"],[418,25,357,23],[418,27,357,10,"parentScreens"],[419,10,358,8],[419,11,358,9],[419,12,358,10],[420,8,359,6],[421,8,360,6,"Object"],[421,14,360,12],[421,15,360,13,"keys"],[421,19,360,17],[421,20,360,18,"config"],[421,26,360,24],[421,27,360,25,"screens"],[421,34,360,32],[421,35,360,33],[421,36,360,34,"forEach"],[421,43,360,41],[421,44,360,42],[421,54,360,42,"nestedConfig"],[421,66,360,54],[421,68,360,58],[422,10,361,8],[422,14,361,14,"result"],[422,20,361,20],[422,23,361,23,"createNormalizedConfigs"],[422,47,361,46],[422,48,361,47,"nestedConfig"],[422,60,361,59],[422,62,361,61,"config"],[422,68,361,67],[422,69,361,68,"screens"],[422,76,361,75],[422,78,361,77,"initials"],[422,86,361,85],[422,92,361,85,"_toConsumableArray"],[422,110,361,85],[422,111,361,85,"default"],[422,118,361,85],[422,120,361,91,"paths"],[422,125,361,96],[422,132,361,96,"_toConsumableArray"],[422,150,361,96],[422,151,361,96,"default"],[422,158,361,96],[422,160,361,103,"parentScreens"],[422,173,361,116],[422,176,361,119,"routeNames"],[422,186,361,129],[422,187,361,130],[423,10,362,8,"configs"],[423,17,362,15],[423,18,362,16,"push"],[423,22,362,20],[423,23,362,20,"apply"],[423,28,362,20],[423,29,362,8,"configs"],[423,36,362,15],[423,42,362,15,"_toConsumableArray"],[423,60,362,15],[423,61,362,15,"default"],[423,68,362,15],[423,70,362,24,"result"],[423,76,362,30],[423,78,362,31],[424,8,363,6],[424,9,363,7],[424,10,363,8],[425,6,364,4],[426,4,365,2],[427,4,366,2,"routeNames"],[427,14,366,12],[427,15,366,13,"pop"],[427,18,366,16],[427,19,366,17],[427,20,366,18],[428,4,367,2],[428,11,367,9,"configs"],[428,18,367,16],[429,2,368,0],[429,3,368,1],[430,2,369,0],[430,6,369,6,"createConfigItem"],[430,22,369,22],[430,25,369,25],[430,34,369,6,"createConfigItem"],[430,50,369,22,"createConfigItem"],[430,51,369,26,"screen"],[430,57,369,32],[430,59,369,34,"routeNames"],[430,69,369,44],[430,71,369,46,"paths"],[430,76,369,51],[430,78,369,53,"parse"],[430,83,369,58],[430,85,369,63],[431,4,370,2],[431,8,370,8,"parts"],[431,13,370,13],[431,16,370,16],[431,18,370,18],[433,4,372,2],[434,4,372,2],[434,8,372,2,"_loop2"],[434,14,372,2],[434,26,372,2,"_loop2"],[434,33,372,2,"_screen"],[434,40,372,2],[434,42,376,14],[435,6,377,4,"parts"],[435,11,377,9],[435,12,377,10,"push"],[435,16,377,14],[435,17,377,14,"apply"],[435,22,377,14],[435,23,377,4,"parts"],[435,28,377,9],[435,34,377,9,"_toConsumableArray"],[435,52,377,9],[435,53,377,9,"default"],[435,60,377,9],[435,62,377,18],[435,66,377,18,"getPatternParts"],[435,84,377,33],[435,85,377,33,"getPatternParts"],[435,100,377,33],[435,102,377,34,"path"],[435,106,377,38],[435,107,377,39],[435,108,377,40,"map"],[435,111,377,43],[435,112,377,44],[435,122,377,44,"part"],[435,126,377,48],[436,8,377,48],[436,15,377,48,"Object"],[436,21,377,48],[436,22,377,48,"assign"],[436,28,377,48],[436,33,378,9,"part"],[436,37,378,13],[437,10,379,6,"screen"],[437,16,379,12],[437,18,379,6,"screen"],[438,8,379,12],[439,6,379,12],[439,7,380,6],[439,8,380,7],[439,10,380,8],[440,4,381,2],[440,5,381,3],[441,4,373,2],[441,13,373,2,"_ref6"],[441,18,373,2],[441,22,376,7,"paths"],[441,27,376,12],[442,6,376,12],[442,10,374,4,"screen"],[442,17,374,10],[442,20,374,10,"_ref6"],[442,25,374,10],[442,26,374,4,"screen"],[442,32,374,10],[443,6,374,10],[443,10,375,4,"path"],[443,14,375,8],[443,17,375,8,"_ref6"],[443,22,375,8],[443,23,375,4,"path"],[443,27,375,8],[444,6,375,8,"_loop2"],[444,12,375,8],[444,13,375,8,"_screen"],[444,20,375,8],[445,4,375,8],[446,4,382,2],[446,8,382,8,"regex"],[446,13,382,13],[446,16,382,16,"parts"],[446,21,382,21],[446,22,382,22,"length"],[446,28,382,28],[446,31,382,31],[446,35,382,35,"RegExp"],[446,41,382,41],[446,42,382,42],[446,47,382,47,"parts"],[446,52,382,52],[446,53,382,53,"map"],[446,56,382,56],[446,57,382,57],[446,67,382,58,"it"],[446,69,382,60],[446,71,382,62,"i"],[446,72,382,63],[446,74,382,68],[447,6,383,4],[447,10,383,8,"it"],[447,12,383,10],[447,13,383,11,"param"],[447,18,383,16],[447,20,383,18],[448,8,384,6],[448,12,384,12,"reg"],[448,15,384,15],[448,18,384,18,"it"],[448,20,384,20],[448,21,384,21,"regex"],[448,26,384,26],[448,30,384,30],[448,37,384,37],[449,8,385,6],[449,15,385,13],[449,29,385,27,"i"],[449,30,385,28],[449,34,385,32,"reg"],[449,37,385,35],[449,45,385,43,"it"],[449,47,385,45],[449,48,385,46,"optional"],[449,56,385,54],[449,59,385,57],[449,62,385,60],[449,65,385,63],[449,67,385,65],[449,70,385,68],[450,6,386,4],[451,6,387,4],[451,13,387,11],[451,16,387,14,"it"],[451,18,387,16],[451,19,387,17,"segment"],[451,26,387,24],[451,31,387,29],[451,34,387,32],[451,37,387,35],[451,41,387,39],[451,44,387,42],[451,48,387,42,"escape"],[451,54,387,48],[451,55,387,48,"default"],[451,62,387,48],[451,64,387,49,"it"],[451,66,387,51],[451,67,387,52,"segment"],[451,74,387,59],[451,75,387,60],[451,80,387,65],[452,4,388,2],[452,5,388,3],[452,6,388,4],[452,7,388,5,"join"],[452,11,388,9],[452,12,388,10],[452,14,388,12],[452,15,388,13],[452,19,388,17],[452,20,388,18],[452,23,388,21,"undefined"],[452,32,388,30],[453,4,389,2],[453,8,389,8,"segments"],[453,16,389,16],[453,19,389,19,"parts"],[453,24,389,24],[453,25,389,25,"map"],[453,28,389,28],[453,29,389,29],[453,39,389,29,"it"],[453,41,389,31],[454,6,389,31],[454,13,389,35,"it"],[454,15,389,37],[454,16,389,38,"segment"],[454,23,389,45],[455,4,389,45],[455,6,389,46],[456,4,390,2],[456,8,390,8,"params"],[456,14,390,14],[456,17,390,17,"parts"],[456,22,390,22],[456,23,390,23,"map"],[456,26,390,26],[456,27,390,27],[456,37,390,28,"it"],[456,39,390,30],[456,41,390,32,"i"],[456,42,390,33],[457,6,390,33],[457,13,390,38,"it"],[457,15,390,40],[457,16,390,41,"param"],[457,21,390,46],[457,24,390,49],[458,8,391,4,"index"],[458,13,391,9],[458,15,391,11,"i"],[458,16,391,12],[459,8,392,4,"screen"],[459,14,392,10],[459,16,392,12,"it"],[459,18,392,14],[459,19,392,15,"screen"],[459,25,392,21],[460,8,393,4,"name"],[460,12,393,8],[460,14,393,10,"it"],[460,16,393,12],[460,17,393,13,"param"],[461,6,394,2],[461,7,394,3],[461,10,394,6],[461,14,394,10],[462,4,394,10],[462,6,394,11],[462,7,394,12,"filter"],[462,13,394,18],[462,14,394,19],[462,24,394,19,"it"],[462,26,394,21],[463,6,394,21],[463,13,394,25,"it"],[463,15,394,27],[463,19,394,31],[463,23,394,35],[464,4,394,35],[464,6,394,36],[465,4,395,2],[465,11,395,9],[466,6,396,4,"screen"],[466,12,396,10],[466,14,396,4,"screen"],[466,20,396,10],[467,6,397,4,"regex"],[467,11,397,9],[467,13,397,4,"regex"],[467,18,397,9],[468,6,398,4,"segments"],[468,14,398,12],[468,16,398,4,"segments"],[468,24,398,12],[469,6,399,4,"params"],[469,12,399,10],[469,14,399,4,"params"],[469,20,399,10],[470,6,400,4,"routeNames"],[470,16,400,14],[470,18,400,4,"routeNames"],[470,28,400,14],[471,6,401,4,"parse"],[471,11,401,9],[471,13,401,4,"parse"],[472,4,402,2],[472,5,402,3],[473,2,403,0],[473,3,403,1],[474,2,404,0],[474,6,404,6,"findParseConfigForRoute"],[474,29,404,29],[474,32,404,32],[474,41,404,6,"findParseConfigForRoute"],[474,64,404,29,"findParseConfigForRoute"],[474,65,404,33,"routeName"],[474,74,404,42],[474,76,404,44,"flatConfig"],[474,86,404,54],[474,88,404,59],[475,4,405,2],[475,9,405,7],[475,13,405,13,"config"],[475,19,405,19],[475,23,405,23,"flatConfig"],[475,33,405,33],[475,35,405,35],[476,6,406,4],[476,10,406,8,"routeName"],[476,19,406,17],[476,24,406,22,"config"],[476,30,406,28],[476,31,406,29,"routeNames"],[476,41,406,39],[476,42,406,40,"config"],[476,48,406,46],[476,49,406,47,"routeNames"],[476,59,406,57],[476,60,406,58,"length"],[476,66,406,64],[476,69,406,67],[476,70,406,68],[476,71,406,69],[476,73,406,71],[477,8,407,6],[477,15,407,13,"config"],[477,21,407,19],[477,22,407,20,"parse"],[477,27,407,25],[478,6,408,4],[479,4,409,2],[480,4,410,2],[480,11,410,9,"undefined"],[480,20,410,18],[481,2,411,0],[481,3,411,1],[483,2,413,0],[484,2,414,0],[484,6,414,6,"findInitialRoute"],[484,22,414,22],[484,25,414,25],[484,34,414,6,"findInitialRoute"],[484,50,414,22,"findInitialRoute"],[484,51,414,26,"routeName"],[484,60,414,35],[484,62,414,37,"parentScreens"],[484,75,414,50],[484,77,414,52,"initialRoutes"],[484,90,414,65],[484,92,414,70],[485,4,415,2],[485,9,415,7],[485,13,415,13,"config"],[485,19,415,19],[485,23,415,23,"initialRoutes"],[485,36,415,36],[485,38,415,38],[486,6,416,4],[486,10,416,8,"parentScreens"],[486,23,416,21],[486,24,416,22,"length"],[486,30,416,28],[486,35,416,33,"config"],[486,41,416,39],[486,42,416,40,"parentScreens"],[486,55,416,53],[486,56,416,54,"length"],[486,62,416,60],[486,64,416,62],[487,8,417,6],[487,12,417,10,"sameParents"],[487,23,417,21],[487,26,417,24],[487,30,417,28],[488,8,418,6],[488,13,418,11],[488,17,418,15,"i"],[488,18,418,16],[488,21,418,19],[488,22,418,20],[488,24,418,22,"i"],[488,25,418,23],[488,28,418,26,"parentScreens"],[488,41,418,39],[488,42,418,40,"length"],[488,48,418,46],[488,50,418,48,"i"],[488,51,418,49],[488,53,418,51],[488,55,418,53],[489,10,419,8],[489,14,419,12,"parentScreens"],[489,27,419,25],[489,28,419,26,"i"],[489,29,419,27],[489,30,419,28],[489,31,419,29,"localeCompare"],[489,44,419,42],[489,45,419,43,"config"],[489,51,419,49],[489,52,419,50,"parentScreens"],[489,65,419,63],[489,66,419,64,"i"],[489,67,419,65],[489,68,419,66],[489,69,419,67],[489,74,419,72],[489,75,419,73],[489,77,419,75],[490,12,420,10,"sameParents"],[490,23,420,21],[490,26,420,24],[490,31,420,29],[491,12,421,10],[492,10,422,8],[493,8,423,6],[494,8,424,6],[494,12,424,10,"sameParents"],[494,23,424,21],[494,25,424,23],[495,10,425,8],[495,17,425,15,"routeName"],[495,26,425,24],[495,31,425,29,"config"],[495,37,425,35],[495,38,425,36,"initialRouteName"],[495,54,425,52],[495,57,425,55,"config"],[495,63,425,61],[495,64,425,62,"initialRouteName"],[495,80,425,78],[495,83,425,81,"undefined"],[495,92,425,90],[496,8,426,6],[497,6,427,4],[498,4,428,2],[499,4,429,2],[499,11,429,9,"undefined"],[499,20,429,18],[500,2,430,0],[500,3,430,1],[502,2,432,0],[503,2,433,0],[504,2,434,0],[504,6,434,6,"createStateObject"],[504,23,434,23],[504,26,434,26],[504,35,434,6,"createStateObject"],[504,52,434,23,"createStateObject"],[504,53,434,27,"initialRoute"],[504,65,434,39],[504,67,434,41,"route"],[504,72,434,46],[504,74,434,48,"isEmpty"],[504,81,434,55],[504,83,434,60],[505,4,435,2],[505,8,435,6,"isEmpty"],[505,15,435,13],[505,17,435,15],[506,6,436,4],[506,10,436,8,"initialRoute"],[506,22,436,20],[506,24,436,22],[507,8,437,6],[507,15,437,13],[508,10,438,8,"index"],[508,15,438,13],[508,17,438,15],[508,18,438,16],[509,10,439,8,"routes"],[509,16,439,14],[509,18,439,16],[509,19,439,17],[510,12,440,10,"name"],[510,16,440,14],[510,18,440,16,"initialRoute"],[511,10,441,8],[511,11,441,9],[511,13,441,11,"route"],[511,18,441,16],[512,8,442,6],[512,9,442,7],[513,6,443,4],[513,7,443,5],[513,13,443,11],[514,8,444,6],[514,15,444,13],[515,10,445,8,"routes"],[515,16,445,14],[515,18,445,16],[515,19,445,17,"route"],[515,24,445,22],[516,8,446,6],[516,9,446,7],[517,6,447,4],[518,4,448,2],[518,5,448,3],[518,11,448,9],[519,6,449,4],[519,10,449,8,"initialRoute"],[519,22,449,20],[519,24,449,22],[520,8,450,6],[520,15,450,13],[521,10,451,8,"index"],[521,15,451,13],[521,17,451,15],[521,18,451,16],[522,10,452,8,"routes"],[522,16,452,14],[522,18,452,16],[522,19,452,17],[523,12,453,10,"name"],[523,16,453,14],[523,18,453,16,"initialRoute"],[524,10,454,8],[524,11,454,9],[524,13,454,9,"Object"],[524,19,454,9],[524,20,454,9,"assign"],[524,26,454,9],[524,31,455,13,"route"],[524,36,455,18],[525,12,456,10,"state"],[525,17,456,15],[525,19,456,17],[526,14,457,12,"routes"],[526,20,457,18],[526,22,457,20],[527,12,458,10],[528,10,458,11],[529,8,460,6],[529,9,460,7],[530,6,461,4],[530,7,461,5],[530,13,461,11],[531,8,462,6],[531,15,462,13],[532,10,463,8,"routes"],[532,16,463,14],[532,18,463,16],[532,19,463,16,"Object"],[532,25,463,16],[532,26,463,16,"assign"],[532,32,463,16],[532,37,464,13,"route"],[532,42,464,18],[533,12,465,10,"state"],[533,17,465,15],[533,19,465,17],[534,14,466,12,"routes"],[534,20,466,18],[534,22,466,20],[535,12,467,10],[536,10,467,11],[537,8,469,6],[537,9,469,7],[538,6,470,4],[539,4,471,2],[540,2,472,0],[540,3,472,1],[541,2,473,0],[541,6,473,6,"createNestedStateObject"],[541,29,473,29],[541,32,473,32],[541,41,473,6,"createNestedStateObject"],[541,64,473,29,"createNestedStateObject"],[541,65,473,33,"path"],[541,69,473,37],[541,71,473,39,"routes"],[541,77,473,45],[541,79,473,47,"initialRoutes"],[541,92,473,60],[541,94,473,62,"flatConfig"],[541,104,473,72],[541,106,473,77],[542,4,474,2],[542,8,474,6,"route"],[542,13,474,11],[542,16,474,14,"routes"],[542,22,474,20],[542,23,474,21,"shift"],[542,28,474,26],[542,29,474,27],[542,30,474,28],[543,4,475,2],[543,8,475,8,"parentScreens"],[543,21,475,21],[543,24,475,24],[543,26,475,26],[544,4,476,2],[544,8,476,6,"initialRoute"],[544,20,476,18],[544,23,476,21,"findInitialRoute"],[544,39,476,37],[544,40,476,38,"route"],[544,45,476,43],[544,46,476,44,"name"],[544,50,476,48],[544,52,476,50,"parentScreens"],[544,65,476,63],[544,67,476,65,"initialRoutes"],[544,80,476,78],[544,81,476,79],[545,4,477,2,"parentScreens"],[545,17,477,15],[545,18,477,16,"push"],[545,22,477,20],[545,23,477,21,"route"],[545,28,477,26],[545,29,477,27,"name"],[545,33,477,31],[545,34,477,32],[546,4,478,2],[546,8,478,8,"state"],[546,13,478,13],[546,16,478,16,"createStateObject"],[546,33,478,33],[546,34,478,34,"initialRoute"],[546,46,478,46],[546,48,478,48,"route"],[546,53,478,53],[546,55,478,55,"routes"],[546,61,478,61],[546,62,478,62,"length"],[546,68,478,68],[546,73,478,73],[546,74,478,74],[546,75,478,75],[547,4,479,2],[547,8,479,6,"routes"],[547,14,479,12],[547,15,479,13,"length"],[547,21,479,19],[547,24,479,22],[547,25,479,23],[547,27,479,25],[548,6,480,4],[548,10,480,8,"nestedState"],[548,21,480,19],[548,24,480,22,"state"],[548,29,480,27],[549,6,481,4],[549,13,481,11,"route"],[549,18,481,16],[549,21,481,19,"routes"],[549,27,481,25],[549,28,481,26,"shift"],[549,33,481,31],[549,34,481,32],[549,35,481,33],[549,37,481,35],[550,8,482,6,"initialRoute"],[550,20,482,18],[550,23,482,21,"findInitialRoute"],[550,39,482,37],[550,40,482,38,"route"],[550,45,482,43],[550,46,482,44,"name"],[550,50,482,48],[550,52,482,50,"parentScreens"],[550,65,482,63],[550,67,482,65,"initialRoutes"],[550,80,482,78],[550,81,482,79],[551,8,483,6],[551,12,483,12,"nestedStateIndex"],[551,28,483,28],[551,31,483,31,"nestedState"],[551,42,483,42],[551,43,483,43,"index"],[551,48,483,48],[551,52,483,52,"nestedState"],[551,63,483,63],[551,64,483,64,"routes"],[551,70,483,70],[551,71,483,71,"length"],[551,77,483,77],[551,80,483,80],[551,81,483,81],[552,8,484,6,"nestedState"],[552,19,484,17],[552,20,484,18,"routes"],[552,26,484,24],[552,27,484,25,"nestedStateIndex"],[552,43,484,41],[552,44,484,42],[552,45,484,43,"state"],[552,50,484,48],[552,53,484,51,"createStateObject"],[552,70,484,68],[552,71,484,69,"initialRoute"],[552,83,484,81],[552,85,484,83,"route"],[552,90,484,88],[552,92,484,90,"routes"],[552,98,484,96],[552,99,484,97,"length"],[552,105,484,103],[552,110,484,108],[552,111,484,109],[552,112,484,110],[553,8,485,6],[553,12,485,10,"routes"],[553,18,485,16],[553,19,485,17,"length"],[553,25,485,23],[553,28,485,26],[553,29,485,27],[553,31,485,29],[554,10,486,8,"nestedState"],[554,21,486,19],[554,24,486,22,"nestedState"],[554,35,486,33],[554,36,486,34,"routes"],[554,42,486,40],[554,43,486,41,"nestedStateIndex"],[554,59,486,57],[554,60,486,58],[554,61,486,59,"state"],[554,66,486,64],[555,8,487,6],[556,8,488,6,"parentScreens"],[556,21,488,19],[556,22,488,20,"push"],[556,26,488,24],[556,27,488,25,"route"],[556,32,488,30],[556,33,488,31,"name"],[556,37,488,35],[556,38,488,36],[557,6,489,4],[558,4,490,2],[559,4,491,2,"route"],[559,9,491,7],[559,12,491,10],[559,16,491,10,"findFocusedRoute"],[559,35,491,26],[559,36,491,26,"findFocusedRoute"],[559,52,491,26],[559,54,491,27,"state"],[559,59,491,32],[559,60,491,33],[560,4,492,2,"route"],[560,9,492,7],[560,10,492,8,"path"],[560,14,492,12],[560,17,492,15,"path"],[560,21,492,19],[560,22,492,20,"replace"],[560,29,492,27],[560,30,492,28],[560,35,492,33],[560,37,492,35],[560,39,492,37],[560,40,492,38],[561,4,493,2],[561,8,493,8,"params"],[561,14,493,14],[561,17,493,17,"parseQueryParams"],[561,33,493,33],[561,34,493,34,"path"],[561,38,493,38],[561,40,493,40,"flatConfig"],[561,50,493,50],[561,53,493,53,"findParseConfigForRoute"],[561,76,493,76],[561,77,493,77,"route"],[561,82,493,82],[561,83,493,83,"name"],[561,87,493,87],[561,89,493,89,"flatConfig"],[561,99,493,99],[561,100,493,100],[561,103,493,103,"undefined"],[561,112,493,112],[561,113,493,113],[562,4,494,2],[562,8,494,6,"params"],[562,14,494,12],[562,16,494,14],[563,6,495,4,"route"],[563,11,495,9],[563,12,495,10,"params"],[563,18,495,16],[563,21,495,16,"Object"],[563,27,495,16],[563,28,495,16,"assign"],[563,34,495,16],[563,39,496,9,"route"],[563,44,496,14],[563,45,496,15,"params"],[563,51,496,21],[563,53,497,9,"params"],[563,59,497,15],[563,60,498,5],[564,4,499,2],[565,4,500,2],[565,11,500,9,"state"],[565,16,500,14],[566,2,501,0],[566,3,501,1],[567,2,502,0],[567,6,502,6,"parseQueryParams"],[567,22,502,22],[567,25,502,25],[567,34,502,6,"parseQueryParams"],[567,50,502,22,"parseQueryParams"],[567,51,502,26,"path"],[567,55,502,30],[567,57,502,32,"parseConfig"],[567,68,502,43],[567,70,502,48],[568,4,503,2],[568,8,503,8,"query"],[568,13,503,13],[568,16,503,16,"path"],[568,20,503,20],[568,21,503,21,"split"],[568,26,503,26],[568,27,503,27],[568,30,503,30],[568,31,503,31],[568,32,503,32],[568,33,503,33],[568,34,503,34],[569,4,504,2],[569,8,504,8,"params"],[569,14,504,14],[569,17,504,17,"queryString"],[569,28,504,28],[569,29,504,29,"parse"],[569,34,504,34],[569,35,504,35,"query"],[569,40,504,40],[569,41,504,41],[570,4,505,2],[570,8,505,6,"parseConfig"],[570,19,505,17],[570,21,505,19],[571,6,506,4,"Object"],[571,12,506,10],[571,13,506,11,"keys"],[571,17,506,15],[571,18,506,16,"params"],[571,24,506,22],[571,25,506,23],[571,26,506,24,"forEach"],[571,33,506,31],[571,34,506,32],[571,44,506,32,"name"],[571,48,506,36],[571,50,506,40],[572,8,507,6],[572,12,507,10,"Object"],[572,18,507,16],[572,19,507,17,"hasOwnProperty"],[572,33,507,31],[572,34,507,32,"call"],[572,38,507,36],[572,39,507,37,"parseConfig"],[572,50,507,48],[572,52,507,50,"name"],[572,56,507,54],[572,57,507,55],[572,61,507,59],[572,68,507,66,"params"],[572,74,507,72],[572,75,507,73,"name"],[572,79,507,77],[572,80,507,78],[572,85,507,83],[572,93,507,91],[572,95,507,93],[573,10,508,8,"params"],[573,16,508,14],[573,17,508,15,"name"],[573,21,508,19],[573,22,508,20],[573,25,508,23,"parseConfig"],[573,36,508,34],[573,37,508,35,"name"],[573,41,508,39],[573,42,508,40],[573,43,508,41,"params"],[573,49,508,47],[573,50,508,48,"name"],[573,54,508,52],[573,55,508,53],[573,56,508,54],[574,8,509,6],[575,6,510,4],[575,7,510,5],[575,8,510,6],[576,4,511,2],[577,4,512,2],[577,11,512,9,"Object"],[577,17,512,15],[577,18,512,16,"keys"],[577,22,512,20],[577,23,512,21,"params"],[577,29,512,27],[577,30,512,28],[577,31,512,29,"length"],[577,37,512,35],[577,40,512,38,"params"],[577,46,512,44],[577,49,512,47,"undefined"],[577,58,512,56],[578,2,513,0],[578,3,513,1],[579,0,513,2],[579,3]],"functionMap":{"names":["<global>","getStateFromPath","remaining.split.filter.map$argument_0","configs.find$argument_0","match.routeNames.map$argument_0","getConfigResources","prepareConfigResources","getInitialRoutes","getSortedNormalizedConfigs","Object.keys.map$argument_0","concat.sort$argument_0","checkForDuplicatedConfigs","configs.reduce$argument_0","b.every$argument_0","a.every$argument_0","getConfigsWithRegexes","configs.map$argument_0","matchAgainstConfigs","config.routeNames.map$argument_0","Object.entries.map$argument_0","routeConfig.params.find$argument_0","Object.entries.map.filter$argument_0","Object.entries.map.filter.map$argument_0","createNormalizedConfigs","Object.keys.forEach$argument_0","createConfigItem","getPatternParts.map$argument_0","parts.map$argument_0","parts.map.filter$argument_0","findParseConfigForRoute","findInitialRoute","createStateObject","createNestedStateObject","parseQueryParams"],"mappings":"AAA;OC8B;4DC4B;KDK;+BES,0CF;gEGE;QHE;CDuB;AKM;CLO;AMC;CNa;AOC;CPS;AQC;+CCE,uED,QE;GF2E;CRC;AWC;iBCE;uDCQ,sBD,YE,sBF;GDQ;CXC;AeC;qBCC;IDI;CfC;4BiBC;qCCa;yCfC;SeG;yGCC;gDCE,wBD;SDK,SG,gBH,MI;SJO;ODU;CjBS;gCuBC;0CCgE;ODG;CvBK;yByBC;4CCQ;MDG;yDEE;GFM;6BEC,gBF;2BEC;UFI,SG,gBH;CzBS;gC6BC;C7BO;yB8BG;C9BgB;0B+BI;C/BsC;gCgCC;ChC4B;yBiCC;gCTI;KSI;CjCG"},"hasCjsExports":false},"type":"js/module"}]}