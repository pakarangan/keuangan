{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * EventEmitter manages listeners and publishes events to them.\n   *\n   * EventEmitter accepts a single type parameter that defines the valid events\n   * and associated listener argument(s).\n   *\n   * @example\n   *\n   *   const emitter = new EventEmitter<{\n   *     success: [number, string],\n   *     error: [Error],\n   *   }>();\n   *\n   *   emitter.on('success', (statusCode, responseText) => {...});\n   *   emitter.emit('success', 200, '...');\n   *\n   *   emitter.on('error', error => {...});\n   *   emitter.emit('error', new Error('Resource not found'));\n   *\n   */\n  var EventEmitter = /*#__PURE__*/function () {\n    function EventEmitter() {\n      _classCallCheck(this, EventEmitter);\n      this._registry = {};\n    }\n    /**\n     * Registers a listener that is called when the supplied event is emitted.\n     * Returns a subscription that has a `remove` method to undo registration.\n     */\n    return _createClass(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        var registrations = allocate(this._registry, eventType);\n        var registration = {\n          context: context,\n          listener: listener,\n          remove: function remove() {\n            registrations.delete(registration);\n          }\n        };\n        registrations.add(registration);\n        return registration;\n      }\n\n      /**\n       * Emits the supplied event. Additional arguments supplied to `emit` will be\n       * passed through to each of the registered listeners.\n       *\n       * If a listener modifies the listeners registered for the same event, those\n       * changes will not be reflected in the current invocation of `emit`.\n       */\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var registrations = this._registry[eventType];\n        if (registrations != null) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          for (var _i = 0, _arr = _toConsumableArray(registrations); _i < _arr.length; _i++) {\n            var registration = _arr[_i];\n            registration.listener.apply(registration.context, args);\n          }\n        }\n      }\n\n      /**\n       * Removes all registered listeners.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        if (eventType == null) {\n          this._registry = {};\n        } else {\n          delete this._registry[eventType];\n        }\n      }\n\n      /**\n       * Returns the number of registered listeners for the supplied event.\n       */\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var registrations = this._registry[eventType];\n        return registrations == null ? 0 : registrations.size;\n      }\n    }]);\n  }();\n  exports.default = EventEmitter;\n  function allocate(registry, eventType) {\n    var registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n  module.exports = exports.default;\n});","lineCount":119,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"require"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[4,98,1,13,"default"],[4,105,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"__esModule"],[7,20,3,18],[7,23,3,21],[7,27,3,25],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"default"],[8,17,4,15],[8,20,4,18],[8,25,4,23],[8,26,4,24],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,2,15,0],[39,6,35,6,"EventEmitter"],[39,18,35,18],[40,4,36,2],[40,13,36,2,"EventEmitter"],[40,26,36,2],[40,28,36,16],[41,6,36,16,"_classCallCheck"],[41,21,36,16],[41,28,36,16,"EventEmitter"],[41,40,36,16],[42,6,37,4],[42,10,37,8],[42,11,37,9,"_registry"],[42,20,37,18],[42,23,37,21],[42,24,37,22],[42,25,37,23],[43,4,38,2],[44,4,39,2],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,4,39,2],[48,11,39,2,"_createClass"],[48,23,39,2],[48,24,39,2,"EventEmitter"],[48,36,39,2],[49,6,39,2,"key"],[49,9,39,2],[50,6,39,2,"value"],[50,11,39,2],[50,13,43,2],[50,22,43,2,"addListener"],[50,33,43,13,"addListener"],[50,34,43,14,"eventType"],[50,43,43,23],[50,45,43,25,"listener"],[50,53,43,33],[50,55,43,35,"context"],[50,62,43,42],[50,64,43,44],[51,8,44,4],[51,12,44,8,"registrations"],[51,25,44,21],[51,28,44,24,"allocate"],[51,36,44,32],[51,37,44,33],[51,41,44,37],[51,42,44,38,"_registry"],[51,51,44,47],[51,53,44,49,"eventType"],[51,62,44,58],[51,63,44,59],[52,8,45,4],[52,12,45,8,"registration"],[52,24,45,20],[52,27,45,23],[53,10,46,6,"context"],[53,17,46,13],[53,19,46,6,"context"],[53,26,46,13],[54,10,47,6,"listener"],[54,18,47,14],[54,20,47,6,"listener"],[54,28,47,14],[55,10,48,6,"remove"],[55,16,48,12],[55,27,48,6,"remove"],[55,33,48,12,"remove"],[55,34,48,12],[55,36,48,15],[56,12,49,8,"registrations"],[56,25,49,21],[56,26,49,22,"delete"],[56,32,49,28],[56,33,49,29,"registration"],[56,45,49,41],[56,46,49,42],[57,10,50,6],[58,8,51,4],[58,9,51,5],[59,8,52,4,"registrations"],[59,21,52,17],[59,22,52,18,"add"],[59,25,52,21],[59,26,52,22,"registration"],[59,38,52,34],[59,39,52,35],[60,8,53,4],[60,15,53,11,"registration"],[60,27,53,23],[61,6,54,2],[63,6,56,2],[64,0,57,0],[65,0,58,0],[66,0,59,0],[67,0,60,0],[68,0,61,0],[69,0,62,0],[70,4,56,2],[71,6,56,2,"key"],[71,9,56,2],[72,6,56,2,"value"],[72,11,56,2],[72,13,63,2],[72,22,63,2,"emit"],[72,26,63,6,"emit"],[72,27,63,7,"eventType"],[72,36,63,16],[72,38,63,18],[73,8,64,4],[73,12,64,8,"registrations"],[73,25,64,21],[73,28,64,24],[73,32,64,28],[73,33,64,29,"_registry"],[73,42,64,38],[73,43,64,39,"eventType"],[73,52,64,48],[73,53,64,49],[74,8,65,4],[74,12,65,8,"registrations"],[74,25,65,21],[74,29,65,25],[74,33,65,29],[74,35,65,31],[75,10,66,6],[75,15,66,11],[75,19,66,15,"_len"],[75,23,66,19],[75,26,66,22,"arguments"],[75,35,66,31],[75,36,66,32,"length"],[75,42,66,38],[75,44,66,40,"args"],[75,48,66,44],[75,51,66,47],[75,55,66,51,"Array"],[75,60,66,56],[75,61,66,57,"_len"],[75,65,66,61],[75,68,66,64],[75,69,66,65],[75,72,66,68,"_len"],[75,76,66,72],[75,79,66,75],[75,80,66,76],[75,83,66,79],[75,84,66,80],[75,85,66,81],[75,87,66,83,"_key"],[75,91,66,87],[75,94,66,90],[75,95,66,91],[75,97,66,93,"_key"],[75,101,66,97],[75,104,66,100,"_len"],[75,108,66,104],[75,110,66,106,"_key"],[75,114,66,110],[75,116,66,112],[75,118,66,114],[76,12,67,8,"args"],[76,16,67,12],[76,17,67,13,"_key"],[76,21,67,17],[76,24,67,20],[76,25,67,21],[76,26,67,22],[76,29,67,25,"arguments"],[76,38,67,34],[76,39,67,35,"_key"],[76,43,67,39],[76,44,67,40],[77,10,68,6],[78,10,69,6],[78,15,69,11],[78,19,69,15,"_i"],[78,21,69,17],[78,24,69,20],[78,25,69,21],[78,27,69,23,"_arr"],[78,31,69,27],[78,34,69,27,"_toConsumableArray"],[78,52,69,27],[78,53,69,34,"registrations"],[78,66,69,47],[78,67,69,48],[78,69,69,50,"_i"],[78,71,69,52],[78,74,69,55,"_arr"],[78,78,69,59],[78,79,69,60,"length"],[78,85,69,66],[78,87,69,68,"_i"],[78,89,69,70],[78,91,69,72],[78,93,69,74],[79,12,70,8],[79,16,70,12,"registration"],[79,28,70,24],[79,31,70,27,"_arr"],[79,35,70,31],[79,36,70,32,"_i"],[79,38,70,34],[79,39,70,35],[80,12,71,8,"registration"],[80,24,71,20],[80,25,71,21,"listener"],[80,33,71,29],[80,34,71,30,"apply"],[80,39,71,35],[80,40,71,36,"registration"],[80,52,71,48],[80,53,71,49,"context"],[80,60,71,56],[80,62,71,58,"args"],[80,66,71,62],[80,67,71,63],[81,10,72,6],[82,8,73,4],[83,6,74,2],[85,6,76,2],[86,0,77,0],[87,0,78,0],[88,4,76,2],[89,6,76,2,"key"],[89,9,76,2],[90,6,76,2,"value"],[90,11,76,2],[90,13,79,2],[90,22,79,2,"removeAllListeners"],[90,40,79,20,"removeAllListeners"],[90,41,79,21,"eventType"],[90,50,79,30],[90,52,79,32],[91,8,80,4],[91,12,80,8,"eventType"],[91,21,80,17],[91,25,80,21],[91,29,80,25],[91,31,80,27],[92,10,81,6],[92,14,81,10],[92,15,81,11,"_registry"],[92,24,81,20],[92,27,81,23],[92,28,81,24],[92,29,81,25],[93,8,82,4],[93,9,82,5],[93,15,82,11],[94,10,83,6],[94,17,83,13],[94,21,83,17],[94,22,83,18,"_registry"],[94,31,83,27],[94,32,83,28,"eventType"],[94,41,83,37],[94,42,83,38],[95,8,84,4],[96,6,85,2],[98,6,87,2],[99,0,88,0],[100,0,89,0],[101,4,87,2],[102,6,87,2,"key"],[102,9,87,2],[103,6,87,2,"value"],[103,11,87,2],[103,13,90,2],[103,22,90,2,"listenerCount"],[103,35,90,15,"listenerCount"],[103,36,90,16,"eventType"],[103,45,90,25],[103,47,90,27],[104,8,91,4],[104,12,91,8,"registrations"],[104,25,91,21],[104,28,91,24],[104,32,91,28],[104,33,91,29,"_registry"],[104,42,91,38],[104,43,91,39,"eventType"],[104,52,91,48],[104,53,91,49],[105,8,92,4],[105,15,92,11,"registrations"],[105,28,92,24],[105,32,92,28],[105,36,92,32],[105,39,92,35],[105,40,92,36],[105,43,92,39,"registrations"],[105,56,92,52],[105,57,92,53,"size"],[105,61,92,57],[106,6,93,2],[107,4,93,3],[108,2,93,3],[109,2,95,0,"exports"],[109,9,95,7],[109,10,95,8,"default"],[109,17,95,15],[109,20,95,18,"EventEmitter"],[109,32,95,30],[110,2,96,0],[110,11,96,9,"allocate"],[110,19,96,17,"allocate"],[110,20,96,18,"registry"],[110,28,96,26],[110,30,96,28,"eventType"],[110,39,96,37],[110,41,96,39],[111,4,97,2],[111,8,97,6,"registrations"],[111,21,97,19],[111,24,97,22,"registry"],[111,32,97,30],[111,33,97,31,"eventType"],[111,42,97,40],[111,43,97,41],[112,4,98,2],[112,8,98,6,"registrations"],[112,21,98,19],[112,25,98,23],[112,29,98,27],[112,31,98,29],[113,6,99,4,"registrations"],[113,19,99,17],[113,22,99,20],[113,26,99,24,"Set"],[113,29,99,27],[113,30,99,28],[113,31,99,29],[114,6,100,4,"registry"],[114,14,100,12],[114,15,100,13,"eventType"],[114,24,100,22],[114,25,100,23],[114,28,100,26,"registrations"],[114,41,100,39],[115,4,101,2],[116,4,102,2],[116,11,102,9,"registrations"],[116,24,102,22],[117,2,103,0],[118,2,104,0,"module"],[118,8,104,6],[118,9,104,7,"exports"],[118,16,104,14],[118,19,104,17,"exports"],[118,26,104,24],[118,27,104,25,"default"],[118,34,104,32],[119,0,104,33],[119,3]],"functionMap":{"names":["<global>","EventEmitter","constructor","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;ACkC;ECC;GDE;EEK;MCK;ODE;GFI;EIS;GJW;EKK;GLM;EMK;GNG;CDC;AQE;CRO"},"hasCjsExports":true},"type":"js/module"}]}