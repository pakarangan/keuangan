{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(function (frame) {\n      var _frame$location, _frame$location2;\n      return {\n        column: frame == null || (_frame$location = frame.location) == null ? void 0 : _frame$location.column,\n        file: frame.fileName,\n        lineNumber: frame == null || (_frame$location2 = frame.location) == null ? void 0 : _frame$location2.row,\n        methodName: frame.content,\n        collapse: false\n      };\n    });\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: (frame == null ? void 0 : frame.file) || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        var retry = false;\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          retry = true;\n        }\n        if (this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(convertComponentStateToStack(this.componentStack));\n          retry = true;\n        }\n        if (retry) {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        var _this = this;\n        if (this.symbolicated.status !== 'PENDING' && this.symbolicated.status !== 'COMPLETE') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(function (data) {\n            _this.updateStatus(null, data == null ? void 0 : data.stack, data == null ? void 0 : data.codeFrame, callback);\n          }, function (error) {\n            _this.updateStatus(error, null, null, callback);\n          });\n        }\n        if (this.componentStack != null && this.componentStackType === 'stack' && this.symbolicatedComponentStack.status !== 'PENDING' && this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          this.updateComponentStackStatus(null, null, null, callback);\n          var componentStackFrames = convertComponentStateToStack(this.componentStack);\n          LogBoxSymbolication.symbolicate(componentStackFrames, []).then(function (data) {\n            _this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), data == null ? void 0 : data.codeFrame, callback);\n          }, function (error) {\n            _this.updateComponentStackStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error: error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack: stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error: error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          if (codeFrame) {\n            this.componentCodeFrame = codeFrame;\n          }\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = LogBoxLog;\n});","lineCount":221,"map":[[27,2,279,0,"Object"],[27,8,279,0],[27,9,279,0,"defineProperty"],[27,23,279,0],[27,24,279,0,"exports"],[27,31,279,0],[28,4,279,0,"enumerable"],[28,14,279,0],[29,4,279,0,"get"],[29,7,279,0],[29,18,279,0,"get"],[29,19,279,0],[30,6,279,0],[30,13,279,0,"_default"],[30,21,279,0],[31,4,279,0],[32,2,279,0],[33,2,279,25],[33,6,279,25,"_babelRuntimeHelpersClassCallCheck"],[33,40,279,25],[33,43,279,25,"require"],[33,50,279,25],[33,51,279,25,"_dependencyMap"],[33,65,279,25],[34,2,279,25],[34,6,279,25,"_classCallCheck"],[34,21,279,25],[34,24,279,25,"_interopDefault"],[34,39,279,25],[34,40,279,25,"_babelRuntimeHelpersClassCallCheck"],[34,74,279,25],[35,2,279,25],[35,6,279,25,"_babelRuntimeHelpersCreateClass"],[35,37,279,25],[35,40,279,25,"require"],[35,47,279,25],[35,48,279,25,"_dependencyMap"],[35,62,279,25],[36,2,279,25],[36,6,279,25,"_createClass"],[36,18,279,25],[36,21,279,25,"_interopDefault"],[36,36,279,25],[36,37,279,25,"_babelRuntimeHelpersCreateClass"],[36,68,279,25],[37,2,20,0],[37,6,20,0,"_LogBoxSymbolication"],[37,26,20,0],[37,29,20,0,"require"],[37,36,20,0],[37,37,20,0,"_dependencyMap"],[37,51,20,0],[38,2,20,0],[38,6,20,0,"LogBoxSymbolication"],[38,25,20,0],[38,28,20,0,"_interopNamespace"],[38,45,20,0],[38,46,20,0,"_LogBoxSymbolication"],[38,66,20,0],[39,2,28,0],[39,11,28,9,"convertComponentStateToStack"],[39,39,28,37,"convertComponentStateToStack"],[39,40,28,38,"componentStack"],[39,54,28,68],[39,56,28,77],[40,4,29,2],[40,11,29,9,"componentStack"],[40,25,29,23],[40,26,29,24,"map"],[40,29,29,27],[40,30,29,28],[40,40,29,28,"frame"],[40,45,29,33],[41,6,29,33],[41,10,29,33,"_frame$location"],[41,25,29,33],[41,27,29,33,"_frame$location2"],[41,43,29,33],[42,6,29,33],[42,13,29,38],[43,8,30,4,"column"],[43,14,30,10],[43,16,30,12,"frame"],[43,21,30,17],[43,34,30,17,"_frame$location"],[43,49,30,17],[43,52,30,12,"frame"],[43,57,30,17],[43,58,30,19,"location"],[43,66,30,27],[43,87,30,12,"_frame$location"],[43,102,30,12],[43,103,30,29,"column"],[43,109,30,35],[44,8,31,4,"file"],[44,12,31,8],[44,14,31,10,"frame"],[44,19,31,15],[44,20,31,16,"fileName"],[44,28,31,24],[45,8,32,4,"lineNumber"],[45,18,32,14],[45,20,32,16,"frame"],[45,25,32,21],[45,38,32,21,"_frame$location2"],[45,54,32,21],[45,57,32,16,"frame"],[45,62,32,21],[45,63,32,23,"location"],[45,71,32,31],[45,92,32,16,"_frame$location2"],[45,108,32,16],[45,109,32,33,"row"],[45,112,32,36],[46,8,33,4,"methodName"],[46,18,33,14],[46,20,33,16,"frame"],[46,25,33,21],[46,26,33,22,"content"],[46,33,33,29],[47,8,34,4,"collapse"],[47,16,34,12],[47,18,34,14],[48,6,35,2],[48,7,35,3],[49,4,35,3],[49,5,35,4],[49,6,35,5],[50,2,36,0],[51,2,38,0],[51,11,38,9,"convertStackToComponentStack"],[51,39,38,37,"convertStackToComponentStack"],[51,40,38,38,"stack"],[51,45,38,50],[51,47,38,68],[52,4,39,2],[52,8,39,8,"componentStack"],[52,22,39,22],[52,25,39,25],[52,27,39,27],[53,4,40,2],[53,9,40,7],[53,13,40,11,"i"],[53,14,40,12],[53,17,40,15],[53,18,40,16],[53,20,40,18,"i"],[53,21,40,19],[53,24,40,22,"stack"],[53,29,40,27],[53,30,40,28,"length"],[53,36,40,34],[53,38,40,36,"i"],[53,39,40,37],[53,41,40,39],[53,43,40,41],[54,6,41,4],[54,10,41,10,"frame"],[54,15,41,15],[54,18,41,18,"stack"],[54,23,41,23],[54,24,41,24,"i"],[54,25,41,25],[54,26,41,26],[55,6,43,4],[55,10,43,8,"frame"],[55,15,43,13],[55,16,43,14,"lineNumber"],[55,26,43,24],[55,30,43,28],[55,34,43,32],[55,38,43,36,"frame"],[55,43,43,41],[55,44,43,42,"column"],[55,50,43,48],[55,54,43,52],[55,58,43,56],[55,60,43,58],[56,8,44,6,"componentStack"],[56,22,44,20],[56,23,44,21,"push"],[56,27,44,25],[56,28,44,26],[57,10,45,8,"fileName"],[57,18,45,16],[57,20,45,18],[57,21,45,18,"frame"],[57,26,45,23],[57,46,45,18,"frame"],[57,51,45,23],[57,52,45,25,"file"],[57,56,45,29],[57,61,45,33],[57,63,45,35],[58,10,46,8,"location"],[58,18,46,16],[58,20,46,18],[59,12,47,10,"row"],[59,15,47,13],[59,17,47,15,"frame"],[59,22,47,20],[59,23,47,21,"lineNumber"],[59,33,47,31],[60,12,48,10,"column"],[60,18,48,16],[60,20,48,18,"frame"],[60,25,48,23],[60,26,48,24,"column"],[61,10,49,8],[61,11,49,9],[62,10,50,8,"content"],[62,17,50,15],[62,19,50,17,"frame"],[62,24,50,22],[62,25,50,23,"methodName"],[62,35,50,33],[63,10,51,8,"collapse"],[63,18,51,16],[63,20,51,18],[64,8,52,6],[64,9,52,7],[64,10,52,8],[65,6,53,4],[66,4,54,2],[67,4,55,2],[67,11,55,9,"componentStack"],[67,25,55,23],[68,2,56,0],[69,2,56,1],[69,6,72,6,"LogBoxLog"],[69,15,72,15],[70,4,109,2],[70,13,109,2,"LogBoxLog"],[70,23,109,14,"data"],[70,27,109,33],[70,29,109,35],[71,6,109,35],[71,10,109,35,"_classCallCheck"],[71,25,109,35],[71,26,109,35,"default"],[71,33,109,35],[71,41,109,35,"LogBoxLog"],[71,50,109,35],[72,6,109,35],[72,11,85,2,"symbolicated"],[72,23,85,14],[72,26,89,65],[73,8,90,4,"error"],[73,13,90,9],[73,15,90,11],[73,19,90,15],[74,8,91,4,"stack"],[74,13,91,9],[74,15,91,11],[74,19,91,15],[75,8,92,4,"status"],[75,14,92,10],[75,16,92,12],[76,6,93,2],[76,7,93,3],[77,6,93,3],[77,11,94,2,"symbolicatedComponentStack"],[77,37,94,28],[77,40,102,74],[78,8,103,4,"error"],[78,13,103,9],[78,15,103,11],[78,19,103,15],[79,8,104,4,"componentStack"],[79,22,104,18],[79,24,104,20],[79,28,104,24],[80,8,105,4,"status"],[80,14,105,10],[80,16,105,12],[81,6,106,2],[81,7,106,3],[82,6,110,4],[82,10,110,8],[82,11,110,9,"level"],[82,16,110,14],[82,19,110,17,"data"],[82,23,110,21],[82,24,110,22,"level"],[82,29,110,27],[83,6,111,4],[83,10,111,8],[83,11,111,9,"type"],[83,15,111,13],[83,18,111,16,"data"],[83,22,111,20],[83,23,111,21,"type"],[83,27,111,25],[84,6,112,4],[84,10,112,8],[84,11,112,9,"message"],[84,18,112,16],[84,21,112,19,"data"],[84,25,112,23],[84,26,112,24,"message"],[84,33,112,31],[85,6,113,4],[85,10,113,8],[85,11,113,9,"stack"],[85,16,113,14],[85,19,113,17,"data"],[85,23,113,21],[85,24,113,22,"stack"],[85,29,113,27],[86,6,114,4],[86,10,114,8],[86,11,114,9,"category"],[86,19,114,17],[86,22,114,20,"data"],[86,26,114,24],[86,27,114,25,"category"],[86,35,114,33],[87,6,115,4],[87,10,115,8],[87,11,115,9,"componentStack"],[87,25,115,23],[87,28,115,26,"data"],[87,32,115,30],[87,33,115,31,"componentStack"],[87,47,115,45],[88,6,116,4],[88,10,116,8],[88,11,116,9,"componentStackType"],[88,29,116,27],[88,32,116,30,"data"],[88,36,116,34],[88,37,116,35,"componentStackType"],[88,55,116,53],[88,59,116,57],[88,67,116,65],[89,6,117,4],[89,10,117,8],[89,11,117,9,"codeFrame"],[89,20,117,18],[89,23,117,21,"data"],[89,27,117,25],[89,28,117,26,"codeFrame"],[89,37,117,35],[90,6,118,4],[90,10,118,8],[90,11,118,9,"isComponentError"],[90,27,118,25],[90,30,118,28,"data"],[90,34,118,32],[90,35,118,33,"isComponentError"],[90,51,118,49],[91,6,119,4],[91,10,119,8],[91,11,119,9,"extraData"],[91,20,119,18],[91,23,119,21,"data"],[91,27,119,25],[91,28,119,26,"extraData"],[91,37,119,35],[92,6,120,4],[92,10,120,8],[92,11,120,9,"count"],[92,16,120,14],[92,19,120,17],[92,20,120,18],[93,6,121,4],[93,10,121,8],[93,11,121,9,"onNotificationPress"],[93,30,121,28],[93,33,121,31,"data"],[93,37,121,35],[93,38,121,36,"onNotificationPress"],[93,57,121,55],[94,4,122,2],[95,4,122,3],[95,15,122,3,"_createClass"],[95,27,122,3],[95,28,122,3,"default"],[95,35,122,3],[95,37,122,3,"LogBoxLog"],[95,46,122,3],[96,6,122,3,"key"],[96,9,122,3],[97,6,122,3,"value"],[97,11,122,3],[97,13,124,2],[97,22,124,2,"incrementCount"],[97,36,124,16,"incrementCount"],[97,37,124,16],[97,39,124,25],[98,8,125,4],[98,12,125,8],[98,13,125,9,"count"],[98,18,125,14],[98,22,125,18],[98,23,125,19],[99,6,126,2],[100,4,126,3],[101,6,126,3,"key"],[101,9,126,3],[102,6,126,3,"value"],[102,11,126,3],[102,13,128,2],[102,22,128,2,"getAvailableStack"],[102,39,128,19,"getAvailableStack"],[102,40,128,19],[102,42,128,29],[103,8,129,4],[103,15,129,11],[103,19,129,15],[103,20,129,16,"symbolicated"],[103,32,129,28],[103,33,129,29,"status"],[103,39,129,35],[103,44,129,40],[103,54,129,50],[103,57,130,8],[103,61,130,12],[103,62,130,13,"symbolicated"],[103,74,130,25],[103,75,130,26,"stack"],[103,80,130,31],[103,83,131,8],[103,87,131,12],[103,88,131,13,"stack"],[103,93,131,18],[104,6,132,2],[105,4,132,3],[106,6,132,3,"key"],[106,9,132,3],[107,6,132,3,"value"],[107,11,132,3],[107,13,134,2],[107,22,134,2,"getAvailableComponentStack"],[107,48,134,28,"getAvailableComponentStack"],[107,49,134,28],[107,51,134,47],[108,8,135,4],[108,12,135,8],[108,16,135,12],[108,17,135,13,"componentStackType"],[108,35,135,31],[108,40,135,36],[108,48,135,44],[108,50,135,46],[109,10,136,6],[109,17,136,13],[109,21,136,17],[109,22,136,18,"componentStack"],[109,36,136,32],[110,8,137,4],[111,8,138,4],[111,15,138,11],[111,19,138,15],[111,20,138,16,"symbolicatedComponentStack"],[111,46,138,42],[111,47,138,43,"status"],[111,53,138,49],[111,58,138,54],[111,68,138,64],[111,71,139,8],[111,75,139,12],[111,76,139,13,"symbolicatedComponentStack"],[111,102,139,39],[111,103,139,40,"componentStack"],[111,117,139,54],[111,120,140,8],[111,124,140,12],[111,125,140,13,"componentStack"],[111,139,140,27],[112,6,141,2],[113,4,141,3],[114,6,141,3,"key"],[114,9,141,3],[115,6,141,3,"value"],[115,11,141,3],[115,13,143,2],[115,22,143,2,"retrySymbolicate"],[115,38,143,18,"retrySymbolicate"],[115,39,143,19,"callback"],[115,47,143,67],[115,49,143,75],[116,8,144,4],[116,12,144,8,"retry"],[116,17,144,13],[116,20,144,16],[116,25,144,21],[117,8,145,4],[117,12,145,8],[117,16,145,12],[117,17,145,13,"symbolicated"],[117,29,145,25],[117,30,145,26,"status"],[117,36,145,32],[117,41,145,37],[117,51,145,47],[117,53,145,49],[118,10,146,6,"LogBoxSymbolication"],[118,29,146,25],[118,30,146,26,"deleteStack"],[118,41,146,37],[118,42,146,38],[118,46,146,42],[118,47,146,43,"stack"],[118,52,146,48],[118,53,146,49],[119,10,147,6,"retry"],[119,15,147,11],[119,18,147,14],[119,22,147,18],[120,8,148,4],[121,8,149,4],[121,12,149,8],[121,16,149,12],[121,17,149,13,"symbolicatedComponentStack"],[121,43,149,39],[121,44,149,40,"status"],[121,50,149,46],[121,55,149,51],[121,65,149,61],[121,67,149,63],[122,10,150,6,"LogBoxSymbolication"],[122,29,150,25],[122,30,150,26,"deleteStack"],[122,41,150,37],[122,42,151,8,"convertComponentStateToStack"],[122,70,151,36],[122,71,151,37],[122,75,151,41],[122,76,151,42,"componentStack"],[122,90,151,56],[122,91,152,6],[122,92,152,7],[123,10,153,6,"retry"],[123,15,153,11],[123,18,153,14],[123,22,153,18],[124,8,154,4],[125,8,155,4],[125,12,155,8,"retry"],[125,17,155,13],[125,19,155,15],[126,10,156,6],[126,14,156,10],[126,15,156,11,"handleSymbolicate"],[126,32,156,28],[126,33,156,29,"callback"],[126,41,156,37],[126,42,156,38],[127,8,157,4],[128,6,158,2],[129,4,158,3],[130,6,158,3,"key"],[130,9,158,3],[131,6,158,3,"value"],[131,11,158,3],[131,13,160,2],[131,22,160,2,"symbolicate"],[131,33,160,13,"symbolicate"],[131,34,160,14,"callback"],[131,42,160,62],[131,44,160,70],[132,8,161,4],[132,12,161,8],[132,16,161,12],[132,17,161,13,"symbolicated"],[132,29,161,25],[132,30,161,26,"status"],[132,36,161,32],[132,41,161,37],[132,47,161,43],[132,49,161,45],[133,10,162,6],[133,14,162,10],[133,15,162,11,"handleSymbolicate"],[133,32,162,28],[133,33,162,29,"callback"],[133,41,162,37],[133,42,162,38],[134,8,163,4],[135,6,164,2],[136,4,164,3],[137,6,164,3,"key"],[137,9,164,3],[138,6,164,3,"value"],[138,11,164,3],[138,13,166,2],[138,22,166,2,"handleSymbolicate"],[138,39,166,19,"handleSymbolicate"],[138,40,166,20,"callback"],[138,48,166,68],[138,50,166,76],[139,8,166,76],[139,12,166,76,"_this"],[139,17,166,76],[140,8,167,4],[140,12,168,6],[140,16,168,10],[140,17,168,11,"symbolicated"],[140,29,168,23],[140,30,168,24,"status"],[140,36,168,30],[140,41,168,35],[140,50,168,44],[140,54,169,6],[140,58,169,10],[140,59,169,11,"symbolicated"],[140,71,169,23],[140,72,169,24,"status"],[140,78,169,30],[140,83,169,35],[140,93,169,45],[140,95,170,6],[141,10,171,6],[141,14,171,10],[141,15,171,11,"updateStatus"],[141,27,171,23],[141,28,171,24],[141,32,171,28],[141,34,171,30],[141,38,171,34],[141,40,171,36],[141,44,171,40],[141,46,171,42,"callback"],[141,54,171,50],[141,55,171,51],[142,10,172,6,"LogBoxSymbolication"],[142,29,172,25],[142,30,172,26,"symbolicate"],[142,41,172,37],[142,42,172,38],[142,46,172,42],[142,47,172,43,"stack"],[142,52,172,48],[142,54,172,50],[142,58,172,54],[142,59,172,55,"extraData"],[142,68,172,64],[142,69,172,65],[142,70,172,66,"then"],[142,74,172,70],[142,75,173,8],[142,85,173,8,"data"],[142,89,173,12],[142,91,173,16],[143,12,174,10,"_this"],[143,17,174,14],[143,18,174,15,"updateStatus"],[143,30,174,27],[143,31,174,28],[143,35,174,32],[143,37,174,34,"data"],[143,41,174,38],[143,61,174,34,"data"],[143,65,174,38],[143,66,174,40,"stack"],[143,71,174,45],[143,73,174,47,"data"],[143,77,174,51],[143,97,174,47,"data"],[143,101,174,51],[143,102,174,53,"codeFrame"],[143,111,174,62],[143,113,174,64,"callback"],[143,121,174,72],[143,122,174,73],[144,10,175,8],[144,11,175,9],[144,13,176,8],[144,23,176,8,"error"],[144,28,176,13],[144,30,176,17],[145,12,177,10,"_this"],[145,17,177,14],[145,18,177,15,"updateStatus"],[145,30,177,27],[145,31,177,28,"error"],[145,36,177,33],[145,38,177,35],[145,42,177,39],[145,44,177,41],[145,48,177,45],[145,50,177,47,"callback"],[145,58,177,55],[145,59,177,56],[146,10,178,8],[146,11,179,6],[146,12,179,7],[147,8,180,4],[148,8,181,4],[148,12,182,6],[148,16,182,10],[148,17,182,11,"componentStack"],[148,31,182,25],[148,35,182,29],[148,39,182,33],[148,43,183,6],[148,47,183,10],[148,48,183,11,"componentStackType"],[148,66,183,29],[148,71,183,34],[148,78,183,41],[148,82,184,6],[148,86,184,10],[148,87,184,11,"symbolicatedComponentStack"],[148,113,184,37],[148,114,184,38,"status"],[148,120,184,44],[148,125,184,49],[148,134,184,58],[148,138,185,6],[148,142,185,10],[148,143,185,11,"symbolicatedComponentStack"],[148,169,185,37],[148,170,185,38,"status"],[148,176,185,44],[148,181,185,49],[148,191,185,59],[148,193,186,6],[149,10,187,6],[149,14,187,10],[149,15,187,11,"updateComponentStackStatus"],[149,41,187,37],[149,42,187,38],[149,46,187,42],[149,48,187,44],[149,52,187,48],[149,54,187,50],[149,58,187,54],[149,60,187,56,"callback"],[149,68,187,64],[149,69,187,65],[150,10,188,6],[150,14,188,12,"componentStackFrames"],[150,34,188,32],[150,37,188,35,"convertComponentStateToStack"],[150,65,188,63],[150,66,189,8],[150,70,189,12],[150,71,189,13,"componentStack"],[150,85,190,6],[150,86,190,7],[151,10,191,6,"LogBoxSymbolication"],[151,29,191,25],[151,30,191,26,"symbolicate"],[151,41,191,37],[151,42,191,38,"componentStackFrames"],[151,62,191,58],[151,64,191,60],[151,66,191,62],[151,67,191,63],[151,68,191,64,"then"],[151,72,191,68],[151,73,192,8],[151,83,192,8,"data"],[151,87,192,12],[151,89,192,16],[152,12,193,10,"_this"],[152,17,193,14],[152,18,193,15,"updateComponentStackStatus"],[152,44,193,41],[152,45,194,12],[152,49,194,16],[152,51,195,12,"convertStackToComponentStack"],[152,79,195,40],[152,80,195,41,"data"],[152,84,195,45],[152,85,195,46,"stack"],[152,90,195,51],[152,91,195,52],[152,93,196,12,"data"],[152,97,196,16],[152,117,196,12,"data"],[152,121,196,16],[152,122,196,18,"codeFrame"],[152,131,196,27],[152,133,197,12,"callback"],[152,141,198,10],[152,142,198,11],[153,10,199,8],[153,11,199,9],[153,13,200,8],[153,23,200,8,"error"],[153,28,200,13],[153,30,200,17],[154,12,201,10,"_this"],[154,17,201,14],[154,18,201,15,"updateComponentStackStatus"],[154,44,201,41],[154,45,201,42,"error"],[154,50,201,47],[154,52,201,49],[154,56,201,53],[154,58,201,55],[154,62,201,59],[154,64,201,61,"callback"],[154,72,201,69],[154,73,201,70],[155,10,202,8],[155,11,203,6],[155,12,203,7],[156,8,204,4],[157,6,205,2],[158,4,205,3],[159,6,205,3,"key"],[159,9,205,3],[160,6,205,3,"value"],[160,11,205,3],[160,13,207,2],[160,22,207,2,"updateStatus"],[160,34,207,14,"updateStatus"],[160,35,208,4,"error"],[160,40,208,17],[160,42,209,4,"stack"],[160,47,209,17],[160,49,210,4,"codeFrame"],[160,58,210,25],[160,60,211,4,"callback"],[160,68,211,52],[160,70,212,10],[161,8,213,4],[161,12,213,10,"lastStatus"],[161,22,213,20],[161,25,213,23],[161,29,213,27],[161,30,213,28,"symbolicated"],[161,42,213,40],[161,43,213,41,"status"],[161,49,213,47],[162,8,214,4],[162,12,214,8,"error"],[162,17,214,13],[162,21,214,17],[162,25,214,21],[162,27,214,23],[163,10,215,6],[163,14,215,10],[163,15,215,11,"symbolicated"],[163,27,215,23],[163,30,215,26],[164,12,216,8,"error"],[164,17,216,13],[164,19,216,8,"error"],[164,24,216,13],[165,12,217,8,"stack"],[165,17,217,13],[165,19,217,15],[165,23,217,19],[166,12,218,8,"status"],[166,18,218,14],[166,20,218,16],[167,10,219,6],[167,11,219,7],[168,8,220,4],[168,9,220,5],[168,15,220,11],[168,19,220,15,"stack"],[168,24,220,20],[168,28,220,24],[168,32,220,28],[168,34,220,30],[169,10,221,6],[169,14,221,10,"codeFrame"],[169,23,221,19],[169,25,221,21],[170,12,222,8],[170,16,222,12],[170,17,222,13,"codeFrame"],[170,26,222,22],[170,29,222,25,"codeFrame"],[170,38,222,34],[171,10,223,6],[172,10,225,6],[172,14,225,10],[172,15,225,11,"symbolicated"],[172,27,225,23],[172,30,225,26],[173,12,226,8,"error"],[173,17,226,13],[173,19,226,15],[173,23,226,19],[174,12,227,8,"stack"],[174,17,227,13],[174,19,227,8,"stack"],[174,24,227,13],[175,12,228,8,"status"],[175,18,228,14],[175,20,228,16],[176,10,229,6],[176,11,229,7],[177,8,230,4],[177,9,230,5],[177,15,230,11],[178,10,231,6],[178,14,231,10],[178,15,231,11,"symbolicated"],[178,27,231,23],[178,30,231,26],[179,12,232,8,"error"],[179,17,232,13],[179,19,232,15],[179,23,232,19],[180,12,233,8,"stack"],[180,17,233,13],[180,19,233,15],[180,23,233,19],[181,12,234,8,"status"],[181,18,234,14],[181,20,234,16],[182,10,235,6],[182,11,235,7],[183,8,236,4],[184,8,238,4],[184,12,238,8,"callback"],[184,20,238,16],[184,24,238,20,"lastStatus"],[184,34,238,30],[184,39,238,35],[184,43,238,39],[184,44,238,40,"symbolicated"],[184,56,238,52],[184,57,238,53,"status"],[184,63,238,59],[184,65,238,61],[185,10,239,6,"callback"],[185,18,239,14],[185,19,239,15],[185,23,239,19],[185,24,239,20,"symbolicated"],[185,36,239,32],[185,37,239,33,"status"],[185,43,239,39],[185,44,239,40],[186,8,240,4],[187,6,241,2],[188,4,241,3],[189,6,241,3,"key"],[189,9,241,3],[190,6,241,3,"value"],[190,11,241,3],[190,13,243,2],[190,22,243,2,"updateComponentStackStatus"],[190,48,243,28,"updateComponentStackStatus"],[190,49,244,4,"error"],[190,54,244,17],[190,56,245,4,"componentStack"],[190,70,245,35],[190,72,246,4,"codeFrame"],[190,81,246,25],[190,83,247,4,"callback"],[190,91,247,52],[190,93,248,10],[191,8,249,4],[191,12,249,10,"lastStatus"],[191,22,249,20],[191,25,249,23],[191,29,249,27],[191,30,249,28,"symbolicatedComponentStack"],[191,56,249,54],[191,57,249,55,"status"],[191,63,249,61],[192,8,250,4],[192,12,250,8,"error"],[192,17,250,13],[192,21,250,17],[192,25,250,21],[192,27,250,23],[193,10,251,6],[193,14,251,10],[193,15,251,11,"symbolicatedComponentStack"],[193,41,251,37],[193,44,251,40],[194,12,252,8,"error"],[194,17,252,13],[194,19,252,8,"error"],[194,24,252,13],[195,12,253,8,"componentStack"],[195,26,253,22],[195,28,253,24],[195,32,253,28],[196,12,254,8,"status"],[196,18,254,14],[196,20,254,16],[197,10,255,6],[197,11,255,7],[198,8,256,4],[198,9,256,5],[198,15,256,11],[198,19,256,15,"componentStack"],[198,33,256,29],[198,37,256,33],[198,41,256,37],[198,43,256,39],[199,10,257,6],[199,14,257,10,"codeFrame"],[199,23,257,19],[199,25,257,21],[200,12,258,8],[200,16,258,12],[200,17,258,13,"componentCodeFrame"],[200,35,258,31],[200,38,258,34,"codeFrame"],[200,47,258,43],[201,10,259,6],[202,10,260,6],[202,14,260,10],[202,15,260,11,"symbolicatedComponentStack"],[202,41,260,37],[202,44,260,40],[203,12,261,8,"error"],[203,17,261,13],[203,19,261,15],[203,23,261,19],[204,12,262,8,"componentStack"],[204,26,262,22],[204,28,262,8,"componentStack"],[204,42,262,22],[205,12,263,8,"status"],[205,18,263,14],[205,20,263,16],[206,10,264,6],[206,11,264,7],[207,8,265,4],[207,9,265,5],[207,15,265,11],[208,10,266,6],[208,14,266,10],[208,15,266,11,"symbolicatedComponentStack"],[208,41,266,37],[208,44,266,40],[209,12,267,8,"error"],[209,17,267,13],[209,19,267,15],[209,23,267,19],[210,12,268,8,"componentStack"],[210,26,268,22],[210,28,268,24],[210,32,268,28],[211,12,269,8,"status"],[211,18,269,14],[211,20,269,16],[212,10,270,6],[212,11,270,7],[213,8,271,4],[214,8,273,4],[214,12,273,8,"callback"],[214,20,273,16],[214,24,273,20,"lastStatus"],[214,34,273,30],[214,39,273,35],[214,43,273,39],[214,44,273,40,"symbolicatedComponentStack"],[214,70,273,66],[214,71,273,67,"status"],[214,77,273,73],[214,79,273,75],[215,10,274,6,"callback"],[215,18,274,14],[215,19,274,15],[215,23,274,19],[215,24,274,20,"symbolicatedComponentStack"],[215,50,274,46],[215,51,274,47,"status"],[215,57,274,53],[215,58,274,54],[216,8,275,4],[217,6,276,2],[218,4,276,3],[219,2,276,3],[220,2,279,0],[220,6,279,0,"_default"],[220,14,279,0],[220,17,279,15,"LogBoxLog"],[220,26,279,24],[221,0,279,25],[221,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECqC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLe;EME;GNI;EOE;QCO;SDE;QEC;SFE;QCc;SDO;QEC;SFE;GPG;EUE;GVkC;EWE;GXiC;CJC"},"hasCjsExports":false},"type":"js/module"}]}