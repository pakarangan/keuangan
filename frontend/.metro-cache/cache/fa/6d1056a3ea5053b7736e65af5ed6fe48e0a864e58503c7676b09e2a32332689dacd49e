{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var invariant = require(_dependencyMap[0], \"invariant\");\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(function (s) {\n      return s.trim();\n    });\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(function (n) {\n      return Number.isNaN(Number(n));\n    });\n    if (__DEV__) {\n      invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  var _default = processAspectRatio;\n});","lineCount":48,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,63,0,"Object"],[7,8,63,0],[7,9,63,0,"defineProperty"],[7,23,63,0],[7,24,63,0,"exports"],[7,31,63,0],[8,4,63,0,"enumerable"],[8,14,63,0],[9,4,63,0,"get"],[9,7,63,0],[9,18,63,0,"get"],[9,19,63,0],[10,6,63,0],[10,13,63,0,"_default"],[10,21,63,0],[11,4,63,0],[12,2,63,0],[13,2,13,0],[13,6,13,6,"invariant"],[13,15,13,15],[13,18,13,18,"require"],[13,25,13,25],[13,26,13,25,"_dependencyMap"],[13,40,13,25],[13,56,13,37],[13,57,13,38],[14,2,15,0],[14,11,15,9,"processAspectRatio"],[14,29,15,27,"processAspectRatio"],[14,30,15,28,"aspectRatio"],[14,41,15,57],[14,43,15,68],[15,4,16,2],[15,8,16,6],[15,15,16,13,"aspectRatio"],[15,26,16,24],[15,31,16,29],[15,39,16,37],[15,41,16,39],[16,6,17,4],[16,13,17,11,"aspectRatio"],[16,24,17,22],[17,4,18,2],[18,4,19,2],[18,8,19,6],[18,15,19,13,"aspectRatio"],[18,26,19,24],[18,31,19,29],[18,39,19,37],[18,41,19,39],[19,6,20,4],[19,10,20,8,"__DEV__"],[19,17,20,15],[19,19,20,17],[20,8,21,6,"invariant"],[20,17,21,15],[20,18,22,8],[20,19,22,9,"aspectRatio"],[20,30,22,20],[20,32,23,8],[20,111,23,87],[20,113,24,8,"aspectRatio"],[20,124,25,6],[20,125,25,7],[21,6,26,4],[22,6,27,4],[23,4,28,2],[24,4,30,2],[24,8,30,8,"matches"],[24,15,30,15],[24,18,30,18,"aspectRatio"],[24,29,30,29],[24,30,30,30,"split"],[24,35,30,35],[24,36,30,36],[24,39,30,39],[24,40,30,40],[24,41,30,41,"map"],[24,44,30,44],[24,45,30,45],[24,55,30,45,"s"],[24,56,30,46],[25,6,30,46],[25,13,30,50,"s"],[25,14,30,51],[25,15,30,52,"trim"],[25,19,30,56],[25,20,30,57],[25,21,30,58],[26,4,30,58],[26,6,30,59],[27,4,32,2],[27,8,32,6,"matches"],[27,15,32,13],[27,16,32,14,"includes"],[27,24,32,22],[27,25,32,23],[27,31,32,29],[27,32,32,30],[27,34,32,32],[28,6,33,4],[28,10,33,8,"__DEV__"],[28,17,33,15],[28,19,33,17],[29,8,34,6,"invariant"],[29,17,34,15],[29,18,35,8,"matches"],[29,25,35,15],[29,26,35,16,"length"],[29,32,35,22],[29,34,36,8],[29,95,36,69],[29,97,37,8,"aspectRatio"],[29,108,38,6],[29,109,38,7],[30,6,39,4],[31,6,40,4],[32,4,41,2],[33,4,43,2],[33,8,43,8,"hasNonNumericValues"],[33,27,43,27],[33,30,43,30,"matches"],[33,37,43,37],[33,38,43,38,"some"],[33,42,43,42],[33,43,43,43],[33,53,43,43,"n"],[33,54,43,44],[34,6,43,44],[34,13,43,48,"Number"],[34,19,43,54],[34,20,43,55,"isNaN"],[34,25,43,60],[34,26,43,61,"Number"],[34,32,43,67],[34,33,43,68,"n"],[34,34,43,69],[34,35,43,70],[34,36,43,71],[35,4,43,71],[35,6,43,72],[36,4,44,2],[36,8,44,6,"__DEV__"],[36,15,44,13],[36,17,44,15],[37,6,45,4,"invariant"],[37,15,45,13],[37,16,46,6],[37,17,46,7,"hasNonNumericValues"],[37,36,46,26],[37,41,46,31,"matches"],[37,48,46,38],[37,49,46,39,"length"],[37,55,46,45],[37,60,46,50],[37,61,46,51],[37,65,46,55,"matches"],[37,72,46,62],[37,73,46,63,"length"],[37,79,46,69],[37,84,46,74],[37,85,46,75],[37,86,46,76],[37,88,47,6],[37,167,47,85],[37,169,48,6,"aspectRatio"],[37,180,49,4],[37,181,49,5],[38,4,50,2],[39,4,52,2],[39,8,52,6,"hasNonNumericValues"],[39,27,52,25],[39,29,52,27],[40,6,53,4],[41,4,54,2],[42,4,56,2],[42,8,56,6,"matches"],[42,15,56,13],[42,16,56,14,"length"],[42,22,56,20],[42,27,56,25],[42,28,56,26],[42,30,56,28],[43,6,57,4],[43,13,57,11,"Number"],[43,19,57,17],[43,20,57,18,"matches"],[43,27,57,25],[43,28,57,26],[43,29,57,27],[43,30,57,28],[43,31,57,29],[43,34,57,32,"Number"],[43,40,57,38],[43,41,57,39,"matches"],[43,48,57,46],[43,49,57,47],[43,50,57,48],[43,51,57,49],[43,52,57,50],[44,4,58,2],[45,4,60,2],[45,11,60,9,"Number"],[45,17,60,15],[45,18,60,16,"matches"],[45,25,60,23],[45,26,60,24],[45,27,60,25],[45,28,60,26],[45,29,60,27],[46,2,61,0],[47,2,63,0],[47,6,63,0,"_default"],[47,14,63,0],[47,17,63,15,"processAspectRatio"],[47,35,63,33],[48,0,63,34],[48,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"},"hasCjsExports":false},"type":"js/module"}]}