{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./Font","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":45,"index":90}}],"key":"uhjJvb2CC+i2amHkDH4+UF8lIHQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useFonts\", {\n    enumerable: true,\n    get: function () {\n      return useFonts;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _Font = require(_dependencyMap[2], \"./Font\");\n  function isMapLoaded(map) {\n    if (typeof map === 'string') {\n      return (0, _Font.isLoaded)(map);\n    } else {\n      return Object.keys(map).every(function (fontFamily) {\n        return (0, _Font.isLoaded)(fontFamily);\n      });\n    }\n  }\n  function useRuntimeFonts(map) {\n    var _useState = (0, _react.useState)(\n      // For web rehydration, we need to check if the fonts are already loaded during the static render.\n      // Native will also benefit from this optimization.\n      isMapLoaded(map)),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n    (0, _react.useEffect)(function () {\n      var isMounted = true;\n      (0, _Font.loadAsync)(map).then(function () {\n        if (isMounted) {\n          setLoaded(true);\n        }\n      }).catch(function (error) {\n        if (isMounted) {\n          setError(error);\n        }\n      });\n      return function () {\n        isMounted = false;\n      };\n    }, []);\n    return [loaded, error];\n  }\n  function useStaticFonts(map) {\n    (0, _Font.loadAsync)(map);\n    return [true, null];\n  }\n  // @needsAudit\n  /**\n   * Load a map of fonts at runtime with [`loadAsync`](#loadasyncfontfamilyorfontmap-source). This returns a `boolean` if the fonts are\n   * loaded and ready to use. It also returns an error if something went wrong, to use in development.\n   *\n   * > Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n   *\n   * @param map A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\n   * use the key in the `fontFamily` style prop of a `Text` element.\n   *\n   * @return\n   * - __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\n   * loading.\n   * - __error__ (`Error | null`) - An error encountered when loading the fonts.\n   *\n   * @example\n   * ```tsx\n   * const [loaded, error] = useFonts({\n   *   'Inter-Black': require('./assets/fonts/Inter-Black.otf'),\n   * });\n   * ```\n   */\n  var useFonts = typeof window === 'undefined' ? useStaticFonts : useRuntimeFonts;\n});","lineCount":87,"map":[[12,2,62,0,"Object"],[12,8,62,0],[12,9,62,0,"defineProperty"],[12,23,62,0],[12,24,62,0,"exports"],[12,31,62,0],[13,4,62,0,"enumerable"],[13,14,62,0],[14,4,62,0,"get"],[14,7,62,0],[14,18,62,0,"get"],[14,19,62,0],[15,6,62,0],[15,13,62,0,"useFonts"],[15,21,62,0],[16,4,62,0],[17,2,62,0],[18,2,62,89],[18,6,62,89,"_babelRuntimeHelpersSlicedToArray"],[18,39,62,89],[18,42,62,89,"require"],[18,49,62,89],[18,50,62,89,"_dependencyMap"],[18,64,62,89],[19,2,62,89],[19,6,62,89,"_slicedToArray"],[19,20,62,89],[19,23,62,89,"_interopDefault"],[19,38,62,89],[19,39,62,89,"_babelRuntimeHelpersSlicedToArray"],[19,72,62,89],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_Font"],[21,11,2,0],[21,14,2,0,"require"],[21,21,2,0],[21,22,2,0,"_dependencyMap"],[21,36,2,0],[22,2,3,0],[22,11,3,9,"isMapLoaded"],[22,22,3,20,"isMapLoaded"],[22,23,3,21,"map"],[22,26,3,24],[22,28,3,26],[23,4,4,4],[23,8,4,8],[23,15,4,15,"map"],[23,18,4,18],[23,23,4,23],[23,31,4,31],[23,33,4,33],[24,6,5,8],[24,13,5,15],[24,17,5,15,"isLoaded"],[24,22,5,23],[24,23,5,23,"isLoaded"],[24,31,5,23],[24,33,5,24,"map"],[24,36,5,27],[24,37,5,28],[25,4,6,4],[25,5,6,5],[25,11,7,9],[26,6,8,8],[26,13,8,15,"Object"],[26,19,8,21],[26,20,8,22,"keys"],[26,24,8,26],[26,25,8,27,"map"],[26,28,8,30],[26,29,8,31],[26,30,8,32,"every"],[26,35,8,37],[26,36,8,38],[26,46,8,39,"fontFamily"],[26,56,8,49],[27,8,8,49],[27,15,8,54],[27,19,8,54,"isLoaded"],[27,24,8,62],[27,25,8,62,"isLoaded"],[27,33,8,62],[27,35,8,63,"fontFamily"],[27,45,8,73],[27,46,8,74],[28,6,8,74],[28,8,8,75],[29,4,9,4],[30,2,10,0],[31,2,11,0],[31,11,11,9,"useRuntimeFonts"],[31,26,11,24,"useRuntimeFonts"],[31,27,11,25,"map"],[31,30,11,28],[31,32,11,30],[32,4,12,4],[32,8,12,4,"_useState"],[32,17,12,4],[32,20,12,32],[32,24,12,32,"useState"],[32,30,12,40],[32,31,12,40,"useState"],[32,39,12,40],[33,6,13,4],[34,6,14,4],[35,6,15,4,"isMapLoaded"],[35,17,15,15],[35,18,15,16,"map"],[35,21,15,19],[35,22,15,20],[35,23,15,21],[36,6,15,21,"_useState2"],[36,16,15,21],[36,23,15,21,"_slicedToArray"],[36,37,15,21],[36,38,15,21,"default"],[36,45,15,21],[36,47,15,21,"_useState"],[36,56,15,21],[37,6,12,11,"loaded"],[37,12,12,17],[37,15,12,17,"_useState2"],[37,25,12,17],[38,6,12,19,"setLoaded"],[38,15,12,28],[38,18,12,28,"_useState2"],[38,28,12,28],[39,4,16,4],[39,8,16,4,"_useState3"],[39,18,16,4],[39,21,16,30],[39,25,16,30,"useState"],[39,31,16,38],[39,32,16,38,"useState"],[39,40,16,38],[39,42,16,39],[39,46,16,43],[39,47,16,44],[40,6,16,44,"_useState4"],[40,16,16,44],[40,23,16,44,"_slicedToArray"],[40,37,16,44],[40,38,16,44,"default"],[40,45,16,44],[40,47,16,44,"_useState3"],[40,57,16,44],[41,6,16,11,"error"],[41,11,16,16],[41,14,16,16,"_useState4"],[41,24,16,16],[42,6,16,18,"setError"],[42,14,16,26],[42,17,16,26,"_useState4"],[42,27,16,26],[43,4,17,4],[43,8,17,4,"useEffect"],[43,14,17,13],[43,15,17,13,"useEffect"],[43,24,17,13],[43,26,17,14],[43,38,17,20],[44,6,18,8],[44,10,18,12,"isMounted"],[44,19,18,21],[44,22,18,24],[44,26,18,28],[45,6,19,8],[45,10,19,8,"loadAsync"],[45,15,19,17],[45,16,19,17,"loadAsync"],[45,25,19,17],[45,27,19,18,"map"],[45,30,19,21],[45,31,19,22],[45,32,20,13,"then"],[45,36,20,17],[45,37,20,18],[45,49,20,24],[46,8,21,12],[46,12,21,16,"isMounted"],[46,21,21,25],[46,23,21,27],[47,10,22,16,"setLoaded"],[47,19,22,25],[47,20,22,26],[47,24,22,30],[47,25,22,31],[48,8,23,12],[49,6,24,8],[49,7,24,9],[49,8,24,10],[49,9,25,13,"catch"],[49,14,25,18],[49,15,25,19],[49,25,25,20,"error"],[49,30,25,25],[49,32,25,30],[50,8,26,12],[50,12,26,16,"isMounted"],[50,21,26,25],[50,23,26,27],[51,10,27,16,"setError"],[51,18,27,24],[51,19,27,25,"error"],[51,24,27,30],[51,25,27,31],[52,8,28,12],[53,6,29,8],[53,7,29,9],[53,8,29,10],[54,6,30,8],[54,13,30,15],[54,25,30,21],[55,8,31,12,"isMounted"],[55,17,31,21],[55,20,31,24],[55,25,31,29],[56,6,32,8],[56,7,32,9],[57,4,33,4],[57,5,33,5],[57,7,33,7],[57,9,33,9],[57,10,33,10],[58,4,34,4],[58,11,34,11],[58,12,34,12,"loaded"],[58,18,34,18],[58,20,34,20,"error"],[58,25,34,25],[58,26,34,26],[59,2,35,0],[60,2,36,0],[60,11,36,9,"useStaticFonts"],[60,25,36,23,"useStaticFonts"],[60,26,36,24,"map"],[60,29,36,27],[60,31,36,29],[61,4,37,4],[61,8,37,4,"loadAsync"],[61,13,37,13],[61,14,37,13,"loadAsync"],[61,23,37,13],[61,25,37,14,"map"],[61,28,37,17],[61,29,37,18],[62,4,38,4],[62,11,38,11],[62,12,38,12],[62,16,38,16],[62,18,38,18],[62,22,38,22],[62,23,38,23],[63,2,39,0],[64,2,40,0],[65,2,41,0],[66,0,42,0],[67,0,43,0],[68,0,44,0],[69,0,45,0],[70,0,46,0],[71,0,47,0],[72,0,48,0],[73,0,49,0],[74,0,50,0],[75,0,51,0],[76,0,52,0],[77,0,53,0],[78,0,54,0],[79,0,55,0],[80,0,56,0],[81,0,57,0],[82,0,58,0],[83,0,59,0],[84,0,60,0],[85,0,61,0],[86,2,62,7],[86,6,62,13,"useFonts"],[86,14,62,21],[86,17,62,24],[86,24,62,31,"window"],[86,30,62,37],[86,35,62,42],[86,46,62,53],[86,49,62,56,"useStaticFonts"],[86,63,62,70],[86,66,62,73,"useRuntimeFonts"],[86,81,62,88],[87,0,62,89],[87,3]],"functionMap":{"names":["<global>","isMapLoaded","Object.keys.every$argument_0","useRuntimeFonts","useEffect$argument_0","loadAsync.then$argument_0","loadAsync.then._catch$argument_0","<anonymous>","useStaticFonts"],"mappings":"AAA;ACE;sCCK,oCD;CDE;AGC;cCM;kBCG;SDI;mBEC;SFI;eGC;SHE;KDC;CHE;AQC;CRG"},"hasCjsExports":false},"type":"js/module"}]}