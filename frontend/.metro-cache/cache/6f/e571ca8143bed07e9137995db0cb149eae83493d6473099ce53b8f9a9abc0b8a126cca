{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"X490zePjq+0IljAc8X0qcBg0iTo=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":190},"end":{"line":5,"column":52,"index":225}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":28,"index":255},"end":{"line":6,"column":56,"index":283}}],"key":"lFSV8MloDpR3EnWyvloF9Uq7qFY=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":305},"end":{"line":7,"column":42,"index":327}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":35,"index":364},"end":{"line":8,"column":72,"index":401}}],"key":"vHLl09Fo1cot8Q7f7epxLLVamLs=","exportNames":["*"],"imports":1}},{"name":"./getRoutesRedirects","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":29,"index":432},"end":{"line":9,"column":60,"index":463}}],"key":"E6xJvmMQ8Tg9oU66GfkFALUrP4w=","exportNames":["*"],"imports":1}},{"name":"./link/linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":483},"end":{"line":10,"column":43,"index":508}}],"key":"I1McWHLUyOzTMAaygW/PL/mjMmY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _defineProperty = require(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\").default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNavigationConfig = getNavigationConfig;\n  exports.getLinkingConfig = getLinkingConfig;\n  var native_1 = require(_dependencyMap[1], \"@react-navigation/native\");\n  var expo_modules_core_1 = require(_dependencyMap[2], \"expo-modules-core\");\n  var constants_1 = require(_dependencyMap[3], \"./constants\");\n  var getReactNavigationConfig_1 = require(_dependencyMap[4], \"./getReactNavigationConfig\");\n  var getRoutesRedirects_1 = require(_dependencyMap[5], \"./getRoutesRedirects\");\n  var linking_1 = require(_dependencyMap[6], \"./link/linking\");\n  function getNavigationConfig(routes) {\n    var metaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return {\n      screens: _defineProperty({}, constants_1.INTERNAL_SLOT_NAME, Object.assign({\n        path: ''\n      }, (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly)))\n    };\n  }\n  function getLinkingConfig(routes, context, getRouteInfo) {\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$metaOnly = _ref.metaOnly,\n      metaOnly = _ref$metaOnly === void 0 ? true : _ref$metaOnly,\n      serverUrl = _ref.serverUrl,\n      redirects = _ref.redirects;\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    var hasCachedInitialUrl = false;\n    var initialUrl;\n    var nativeLinkingKey = context.keys().find(function (key) {\n      return key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/);\n    });\n    var nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    var config = getNavigationConfig(routes, metaOnly);\n    return {\n      prefixes: [],\n      config: config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL: function getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl != null ? serverUrl : (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl != null ? serverUrl : (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              initialUrl = (0, getRoutesRedirects_1.applyRedirects)(initialUrl, redirects);\n              if (initialUrl && typeof (nativeLinking == null ? void 0 : nativeLinking.redirectSystemPath) === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(function (url) {\n                url = (0, getRoutesRedirects_1.applyRedirects)(url, redirects);\n                if (url && typeof (nativeLinking == null ? void 0 : nativeLinking.redirectSystemPath) === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.subscribe)(nativeLinking, redirects),\n      getStateFromPath: function getStateFromPath(path, options) {\n        return (0, linking_1.getStateFromPath)(path, options, getRouteInfo().segments);\n      },\n      getPathFromState: function getPathFromState(state, options) {\n        var _ref2, _ref3, _config$screens;\n        return (_ref2 = (0, linking_1.getPathFromState)(state, Object.assign({}, config, options, {\n          screens: (_ref3 = (_config$screens = config.screens) != null ? _config$screens : options == null ? void 0 : options.screens) != null ? _ref3 : {}\n        }))) != null ? _ref2 : '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n});","lineCount":94,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_defineProperty"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"getNavigationConfig"],[8,29,3,27],[8,32,3,30,"getNavigationConfig"],[8,51,3,49],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"getLinkingConfig"],[9,26,4,24],[9,29,4,27,"getLinkingConfig"],[9,45,4,43],[10,2,5,0],[10,6,5,6,"native_1"],[10,14,5,14],[10,17,5,17,"require"],[10,24,5,24],[10,25,5,24,"_dependencyMap"],[10,39,5,24],[10,70,5,51],[10,71,5,52],[11,2,6,0],[11,6,6,6,"expo_modules_core_1"],[11,25,6,25],[11,28,6,28,"require"],[11,35,6,35],[11,36,6,35,"_dependencyMap"],[11,50,6,35],[11,74,6,55],[11,75,6,56],[12,2,7,0],[12,6,7,6,"constants_1"],[12,17,7,17],[12,20,7,20,"require"],[12,27,7,27],[12,28,7,27,"_dependencyMap"],[12,42,7,27],[12,60,7,41],[12,61,7,42],[13,2,8,0],[13,6,8,6,"getReactNavigationConfig_1"],[13,32,8,32],[13,35,8,35,"require"],[13,42,8,42],[13,43,8,42,"_dependencyMap"],[13,57,8,42],[13,90,8,71],[13,91,8,72],[14,2,9,0],[14,6,9,6,"getRoutesRedirects_1"],[14,26,9,26],[14,29,9,29,"require"],[14,36,9,36],[14,37,9,36,"_dependencyMap"],[14,51,9,36],[14,78,9,59],[14,79,9,60],[15,2,10,0],[15,6,10,6,"linking_1"],[15,15,10,15],[15,18,10,18,"require"],[15,25,10,25],[15,26,10,25,"_dependencyMap"],[15,40,10,25],[15,61,10,42],[15,62,10,43],[16,2,11,0],[16,11,11,9,"getNavigationConfig"],[16,30,11,28,"getNavigationConfig"],[16,31,11,29,"routes"],[16,37,11,35],[16,39,11,54],[17,4,11,54],[17,8,11,37,"metaOnly"],[17,16,11,45],[17,19,11,45,"arguments"],[17,28,11,45],[17,29,11,45,"length"],[17,35,11,45],[17,43,11,45,"arguments"],[17,52,11,45],[17,60,11,45,"undefined"],[17,69,11,45],[17,72,11,45,"arguments"],[17,81,11,45],[17,87,11,48],[17,91,11,52],[18,4,12,4],[18,11,12,11],[19,6,13,8,"screens"],[19,13,13,15],[19,15,13,15,"_defineProperty"],[19,30,13,15],[19,35,14,13,"constants_1"],[19,46,14,24],[19,47,14,25,"INTERNAL_SLOT_NAME"],[19,65,14,43],[19,67,14,43,"Object"],[19,73,14,43],[19,74,14,43,"assign"],[19,80,14,43],[20,8,15,16,"path"],[20,12,15,20],[20,14,15,22],[21,6,15,24],[21,9,16,19],[21,10,16,20],[21,11,16,21],[21,13,16,23,"getReactNavigationConfig_1"],[21,39,16,49],[21,40,16,50,"getReactNavigationConfig"],[21,64,16,74],[21,66,16,76,"routes"],[21,72,16,82],[21,74,16,84,"metaOnly"],[21,82,16,92],[21,83,16,93],[22,4,19,4],[22,5,19,5],[23,2,20,0],[24,2,21,0],[24,11,21,9,"getLinkingConfig"],[24,27,21,25,"getLinkingConfig"],[24,28,21,26,"routes"],[24,34,21,32],[24,36,21,34,"context"],[24,43,21,41],[24,45,21,43,"getRouteInfo"],[24,57,21,55],[24,59,21,105],[25,4,21,105],[25,8,21,105,"_ref"],[25,12,21,105],[25,15,21,105,"arguments"],[25,24,21,105],[25,25,21,105,"length"],[25,31,21,105],[25,39,21,105,"arguments"],[25,48,21,105],[25,56,21,105,"undefined"],[25,65,21,105],[25,68,21,105,"arguments"],[25,77,21,105],[25,83,21,101],[25,84,21,102],[25,85,21,103],[26,6,21,103,"_ref$metaOnly"],[26,19,21,103],[26,22,21,103,"_ref"],[26,26,21,103],[26,27,21,59,"metaOnly"],[26,35,21,67],[27,6,21,59,"metaOnly"],[27,14,21,67],[27,17,21,67,"_ref$metaOnly"],[27,30,21,67],[27,44,21,70],[27,48,21,74],[27,51,21,74,"_ref$metaOnly"],[27,64,21,74],[28,6,21,76,"serverUrl"],[28,15,21,85],[28,18,21,85,"_ref"],[28,22,21,85],[28,23,21,76,"serverUrl"],[28,32,21,85],[29,6,21,87,"redirects"],[29,15,21,96],[29,18,21,96,"_ref"],[29,22,21,96],[29,23,21,87,"redirects"],[29,32,21,96],[30,4,22,4],[31,4,23,4],[31,8,23,8,"hasCachedInitialUrl"],[31,27,23,27],[31,30,23,30],[31,35,23,35],[32,4,24,4],[32,8,24,8,"initialUrl"],[32,18,24,18],[33,4,25,4],[33,8,25,10,"nativeLinkingKey"],[33,24,25,26],[33,27,25,29,"context"],[33,34,25,36],[33,35,26,9,"keys"],[33,39,26,13],[33,40,26,14],[33,41,26,15],[33,42,27,9,"find"],[33,46,27,13],[33,47,27,14],[33,57,27,15,"key"],[33,60,27,18],[34,6,27,18],[34,13,27,23,"key"],[34,16,27,26],[34,17,27,27,"match"],[34,22,27,32],[34,23,27,33],[34,55,27,65],[34,56,27,66],[35,4,27,66],[35,6,27,67],[36,4,28,4],[36,8,28,10,"nativeLinking"],[36,21,28,23],[36,24,28,26,"nativeLinkingKey"],[36,40,28,42],[36,43,29,10,"context"],[36,50,29,17],[36,51,29,18,"nativeLinkingKey"],[36,67,29,34],[36,68,29,35],[36,71,30,10,"undefined"],[36,80,30,19],[37,4,31,4],[37,8,31,10,"config"],[37,14,31,16],[37,17,31,19,"getNavigationConfig"],[37,36,31,38],[37,37,31,39,"routes"],[37,43,31,45],[37,45,31,47,"metaOnly"],[37,53,31,55],[37,54,31,56],[38,4,32,4],[38,11,32,11],[39,6,33,8,"prefixes"],[39,14,33,16],[39,16,33,18],[39,18,33,20],[40,6,34,8,"config"],[40,12,34,14],[40,14,34,8,"config"],[40,20,34,14],[41,6,35,8],[42,6,36,8],[43,6,37,8],[44,6,38,8],[45,6,39,8],[46,6,40,8,"getInitialURL"],[46,19,40,21],[46,30,40,8,"getInitialURL"],[46,43,40,21,"getInitialURL"],[46,44,40,21],[46,46,40,24],[47,8,41,12],[48,8,42,12],[49,8,43,12],[49,12,43,16],[49,13,43,17,"hasCachedInitialUrl"],[49,32,43,36],[49,34,43,38],[50,10,44,16],[50,14,44,20,"expo_modules_core_1"],[50,33,44,39],[50,34,44,40,"Platform"],[50,42,44,48],[50,43,44,49,"OS"],[50,45,44,51],[50,50,44,56],[50,55,44,61],[50,57,44,63],[51,12,45,20,"initialUrl"],[51,22,45,30],[51,25,45,33,"serverUrl"],[51,34,45,42],[51,45,45,33,"serverUrl"],[51,54,45,42],[51,57,45,46],[51,58,45,47],[51,59,45,48],[51,61,45,50,"linking_1"],[51,70,45,59],[51,71,45,60,"getInitialURL"],[51,84,45,73],[51,86,45,75],[51,87,45,76],[52,10,46,16],[52,11,46,17],[52,17,47,21],[53,12,48,20,"initialUrl"],[53,22,48,30],[53,25,48,33,"serverUrl"],[53,34,48,42],[53,45,48,33,"serverUrl"],[53,54,48,42],[53,57,48,46],[53,58,48,47],[53,59,48,48],[53,61,48,50,"linking_1"],[53,70,48,59],[53,71,48,60,"getInitialURL"],[53,84,48,73],[53,86,48,75],[53,87,48,76],[54,12,49,20],[54,16,49,24],[54,23,49,31,"initialUrl"],[54,33,49,41],[54,38,49,46],[54,46,49,54],[54,48,49,56],[55,14,50,24,"initialUrl"],[55,24,50,34],[55,27,50,37],[55,28,50,38],[55,29,50,39],[55,31,50,41,"getRoutesRedirects_1"],[55,51,50,61],[55,52,50,62,"applyRedirects"],[55,66,50,76],[55,68,50,78,"initialUrl"],[55,78,50,88],[55,80,50,90,"redirects"],[55,89,50,99],[55,90,50,100],[56,14,51,24],[56,18,51,28,"initialUrl"],[56,28,51,38],[56,32,51,42],[56,40,51,49,"nativeLinking"],[56,53,51,62],[56,73,51,49,"nativeLinking"],[56,86,51,62],[56,87,51,64,"redirectSystemPath"],[56,105,51,82],[56,111,51,87],[56,121,51,97],[56,123,51,99],[57,16,52,28,"initialUrl"],[57,26,52,38],[57,29,52,41,"nativeLinking"],[57,42,52,54],[57,43,52,55,"redirectSystemPath"],[57,61,52,73],[57,62,52,74],[58,18,52,76,"path"],[58,22,52,80],[58,24,52,82,"initialUrl"],[58,34,52,92],[59,18,52,94,"initial"],[59,25,52,101],[59,27,52,103],[60,16,52,108],[60,17,52,109],[60,18,52,110],[61,14,53,24],[62,12,54,20],[62,13,54,21],[62,19,55,25],[62,23,55,29,"initialUrl"],[62,33,55,39],[62,35,55,41],[63,14,56,24,"initialUrl"],[63,24,56,34],[63,27,56,37,"initialUrl"],[63,37,56,47],[63,38,56,48,"then"],[63,42,56,52],[63,43,56,53],[63,53,56,54,"url"],[63,56,56,57],[63,58,56,62],[64,16,57,28,"url"],[64,19,57,31],[64,22,57,34],[64,23,57,35],[64,24,57,36],[64,26,57,38,"getRoutesRedirects_1"],[64,46,57,58],[64,47,57,59,"applyRedirects"],[64,61,57,73],[64,63,57,75,"url"],[64,66,57,78],[64,68,57,80,"redirects"],[64,77,57,89],[64,78,57,90],[65,16,58,28],[65,20,58,32,"url"],[65,23,58,35],[65,27,58,39],[65,35,58,46,"nativeLinking"],[65,48,58,59],[65,68,58,46,"nativeLinking"],[65,81,58,59],[65,82,58,61,"redirectSystemPath"],[65,100,58,79],[65,106,58,84],[65,116,58,94],[65,118,58,96],[66,18,59,32],[66,25,59,39,"nativeLinking"],[66,38,59,52],[66,39,59,53,"redirectSystemPath"],[66,57,59,71],[66,58,59,72],[67,20,59,74,"path"],[67,24,59,78],[67,26,59,80,"url"],[67,29,59,83],[68,20,59,85,"initial"],[68,27,59,92],[68,29,59,94],[69,18,59,99],[69,19,59,100],[69,20,59,101],[70,16,60,28],[71,16,61,28],[71,23,61,35,"url"],[71,26,61,38],[72,14,62,24],[72,15,62,25],[72,16,62,26],[73,12,63,20],[74,10,64,16],[75,10,65,16,"hasCachedInitialUrl"],[75,29,65,35],[75,32,65,38],[75,36,65,42],[76,8,66,12],[77,8,67,12],[77,15,67,19,"initialUrl"],[77,25,67,29],[78,6,68,8],[78,7,68,9],[79,6,69,8,"subscribe"],[79,15,69,17],[79,17,69,19],[79,18,69,20],[79,19,69,21],[79,21,69,23,"linking_1"],[79,30,69,32],[79,31,69,33,"subscribe"],[79,40,69,42],[79,42,69,44,"nativeLinking"],[79,55,69,57],[79,57,69,59,"redirects"],[79,66,69,68],[79,67,69,69],[80,6,70,8,"getStateFromPath"],[80,22,70,24],[80,24,70,26],[80,33,70,8,"getStateFromPath"],[80,49,70,24,"getStateFromPath"],[80,50,70,27,"path"],[80,54,70,31],[80,56,70,33,"options"],[80,63,70,40],[80,65,70,45],[81,8,71,12],[81,15,71,19],[81,16,71,20],[81,17,71,21],[81,19,71,23,"linking_1"],[81,28,71,32],[81,29,71,33,"getStateFromPath"],[81,45,71,49],[81,47,71,51,"path"],[81,51,71,55],[81,53,71,57,"options"],[81,60,71,64],[81,62,71,66,"getRouteInfo"],[81,74,71,78],[81,75,71,79],[81,76,71,80],[81,77,71,81,"segments"],[81,85,71,89],[81,86,71,90],[82,6,72,8],[82,7,72,9],[83,6,73,8,"getPathFromState"],[83,22,73,24],[83,33,73,8,"getPathFromState"],[83,49,73,24,"getPathFromState"],[83,50,73,25,"state"],[83,55,73,30],[83,57,73,32,"options"],[83,64,73,39],[83,66,73,41],[84,8,73,41],[84,12,73,41,"_ref2"],[84,17,73,41],[84,19,73,41,"_ref3"],[84,24,73,41],[84,26,73,41,"_config$screens"],[84,41,73,41],[85,8,74,12],[85,16,74,12,"_ref2"],[85,21,74,12],[85,24,74,20],[85,25,74,21],[85,26,74,22],[85,28,74,24,"linking_1"],[85,37,74,33],[85,38,74,34,"getPathFromState"],[85,54,74,50],[85,56,74,52,"state"],[85,61,74,57],[85,63,74,57,"Object"],[85,69,74,57],[85,70,74,57,"assign"],[85,76,74,57],[85,81,75,19,"config"],[85,87,75,25],[85,89,76,19,"options"],[85,96,76,26],[86,10,77,16,"screens"],[86,17,77,23],[86,20,77,23,"_ref3"],[86,25,77,23],[86,29,77,23,"_config$screens"],[86,44,77,23],[86,47,77,25,"config"],[86,53,77,31],[86,54,77,32,"screens"],[86,61,77,39],[86,73,77,39,"_config$screens"],[86,88,77,39],[86,91,77,43,"options"],[86,98,77,50],[86,118,77,43,"options"],[86,125,77,50],[86,126,77,52,"screens"],[86,133,77,59],[86,145,77,59,"_ref3"],[86,150,77,59],[86,153,77,63],[86,154,77,64],[87,8,77,65],[87,10,78,13],[87,11,78,14],[87,23,78,14,"_ref2"],[87,28,78,14],[87,31,78,18],[87,34,78,21],[88,6,79,8],[88,7,79,9],[89,6,80,8],[90,6,81,8],[91,6,82,8,"getActionFromState"],[91,24,82,26],[91,26,82,28,"native_1"],[91,34,82,36],[91,35,82,37,"getActionFromState"],[92,4,83,4],[92,5,83,5],[93,2,84,0],[94,0,84,1],[94,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getStateFromPath","getPathFromState"],"mappings":"AAA;ACU;CDS;AEC;cCM,oDD;QEa;qDCgB;yBDM;SFM;0BIE;SJE;QKC;SLM;CFK"},"hasCjsExports":true},"type":"js/module"}]}