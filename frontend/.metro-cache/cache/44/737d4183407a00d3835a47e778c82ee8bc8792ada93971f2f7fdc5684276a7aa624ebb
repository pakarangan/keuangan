{"dependencies":[{"name":"../Utilities/PolyfillFunctions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":25},"end":{"line":13,"column":66}}],"key":"HYclPKQCLeyfRj4pG+IgrzgyEZ8=","exportNames":["*"],"imports":1}},{"name":"../../src/private/webapis/microtasks/specs/NativeMicrotasks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":32,"column":6},"end":{"line":32,"column":76}}],"key":"I00kQUS2rmYjjzUykcEdCMhJxXM=","exportNames":["*"],"imports":1}},{"name":"./Timers/immediateShim","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":40,"column":10},"end":{"line":40,"column":43}},{"start":{"line":44,"column":10},"end":{"line":44,"column":43}}],"key":"Fjnk+V2fuSsXPECJrGpZ2hTjI1s=","exportNames":["*"],"imports":2}},{"name":"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":50,"column":6},"end":{"line":50,"column":82}},{"start":{"line":57,"column":6},"end":{"line":57,"column":82}}],"key":"vfnFdIg+LR1qIfPNPqpoFOL0lEI=","exportNames":["*"],"imports":2}},{"name":"./Timers/JSTimers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":76,"column":31},"end":{"line":76,"column":59}},{"start":{"line":98,"column":10},"end":{"line":98,"column":38}},{"start":{"line":102,"column":10},"end":{"line":102,"column":38}}],"key":"9ATwFhjB/ZZoZoAnTZ/jDe/5LMU=","exportNames":["*"],"imports":3}},{"name":"./Timers/queueMicrotask.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":90,"column":10},"end":{"line":90,"column":47}}],"key":"PbauGy8hrTkorkANPJQdDZMpWQM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _require = require(_dependencyMap[0], \"../Utilities/PolyfillFunctions\"),\n    polyfillGlobal = _require.polyfillGlobal;\n  if (__DEV__) {\n    if (typeof global.Promise !== 'function') {\n      console.error('Promise should exist before setting up timers.');\n    }\n  }\n  if (global.RN$Bridgeless === true) {\n    global.RN$enableMicrotasksInReact = true;\n    polyfillGlobal('queueMicrotask', function () {\n      return require(_dependencyMap[1], \"../../src/private/webapis/microtasks/specs/NativeMicrotasks\").default.queueMicrotask;\n    });\n    polyfillGlobal('setImmediate', function () {\n      return require(_dependencyMap[2], \"./Timers/immediateShim\").setImmediate;\n    });\n    polyfillGlobal('clearImmediate', function () {\n      return require(_dependencyMap[2], \"./Timers/immediateShim\").clearImmediate;\n    });\n    polyfillGlobal('requestIdleCallback', function () {\n      return require(_dependencyMap[3], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.requestIdleCallback;\n    });\n    polyfillGlobal('cancelIdleCallback', function () {\n      return require(_dependencyMap[3], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.cancelIdleCallback;\n    });\n  } else {\n    var defineLazyTimer = function defineLazyTimer(name) {\n      polyfillGlobal(name, function () {\n        return require(_dependencyMap[4], \"./Timers/JSTimers\").default[name];\n      });\n    };\n    defineLazyTimer('setTimeout');\n    defineLazyTimer('clearTimeout');\n    defineLazyTimer('setInterval');\n    defineLazyTimer('clearInterval');\n    defineLazyTimer('requestAnimationFrame');\n    defineLazyTimer('cancelAnimationFrame');\n    defineLazyTimer('requestIdleCallback');\n    defineLazyTimer('cancelIdleCallback');\n    polyfillGlobal('queueMicrotask', function () {\n      return require(_dependencyMap[5], \"./Timers/queueMicrotask.js\").default;\n    });\n    polyfillGlobal('setImmediate', function () {\n      return require(_dependencyMap[4], \"./Timers/JSTimers\").default.queueReactNativeMicrotask;\n    });\n    polyfillGlobal('clearImmediate', function () {\n      return require(_dependencyMap[4], \"./Timers/JSTimers\").default.clearReactNativeMicrotask;\n    });\n  }\n});","lineCount":52,"map":[[2,2,11,0],[2,14,11,12],[4,2,13,0],[4,6,13,0,"_require"],[4,14,13,0],[4,17,13,25,"require"],[4,24,13,32],[4,25,13,32,"_dependencyMap"],[4,39,13,32],[4,76,13,65],[4,77,13,66],[5,4,13,7,"polyfillGlobal"],[5,18,13,21],[5,21,13,21,"_require"],[5,29,13,21],[5,30,13,7,"polyfillGlobal"],[5,44,13,21],[6,2,15,0],[6,6,15,4,"__DEV__"],[6,13,15,11],[6,15,15,13],[7,4,16,2],[7,8,16,6],[7,15,16,13,"global"],[7,21,16,19],[7,22,16,20,"Promise"],[7,29,16,27],[7,34,16,32],[7,44,16,42],[7,46,16,44],[8,6,17,4,"console"],[8,13,17,11],[8,14,17,12,"error"],[8,19,17,17],[8,20,17,18],[8,68,17,66],[8,69,17,67],[9,4,18,2],[10,2,19,0],[11,2,22,0],[11,6,22,4,"global"],[11,12,22,10],[11,13,22,11,"RN$Bridgeless"],[11,26,22,24],[11,31,22,29],[11,35,22,33],[11,37,22,35],[12,4,27,2,"global"],[12,10,27,8],[12,11,27,9,"RN$enableMicrotasksInReact"],[12,37,27,35],[12,40,27,38],[12,44,27,42],[13,4,29,2,"polyfillGlobal"],[13,18,29,16],[13,19,30,4],[13,35,30,20],[13,37,31,4],[14,6,31,4],[14,13,32,6,"require"],[14,20,32,13],[14,21,32,13,"_dependencyMap"],[14,35,32,13],[14,101,32,75],[14,102,32,76],[14,103,33,9,"default"],[14,110,33,16],[14,111,33,17,"queueMicrotask"],[14,125,33,31],[15,4,33,31],[15,5,34,2],[15,6,34,3],[16,4,38,2,"polyfillGlobal"],[16,18,38,16],[16,19,39,4],[16,33,39,18],[16,35,40,4],[17,6,40,4],[17,13,40,10,"require"],[17,20,40,17],[17,21,40,17,"_dependencyMap"],[17,35,40,17],[17,64,40,42],[17,65,40,43],[17,66,40,44,"setImmediate"],[17,78,40,56],[18,4,40,56],[18,5,41,2],[18,6,41,3],[19,4,42,2,"polyfillGlobal"],[19,18,42,16],[19,19,43,4],[19,35,43,20],[19,37,44,4],[20,6,44,4],[20,13,44,10,"require"],[20,20,44,17],[20,21,44,17,"_dependencyMap"],[20,35,44,17],[20,64,44,42],[20,65,44,43],[20,66,44,44,"clearImmediate"],[20,80,44,58],[21,4,44,58],[21,5,45,2],[21,6,45,3],[22,4,47,2,"polyfillGlobal"],[22,18,47,16],[22,19,48,4],[22,40,48,25],[22,42,49,4],[23,6,49,4],[23,13,50,6,"require"],[23,20,50,13],[23,21,50,13,"_dependencyMap"],[23,35,50,13],[23,107,50,81],[23,108,50,82],[23,109,51,9,"default"],[23,116,51,16],[23,117,51,17,"requestIdleCallback"],[23,136,51,36],[24,4,51,36],[24,5,52,2],[24,6,52,3],[25,4,54,2,"polyfillGlobal"],[25,18,54,16],[25,19,55,4],[25,39,55,24],[25,41,56,4],[26,6,56,4],[26,13,57,6,"require"],[26,20,57,13],[26,21,57,13,"_dependencyMap"],[26,35,57,13],[26,107,57,81],[26,108,57,82],[26,109,58,9,"default"],[26,116,58,16],[26,117,58,17,"cancelIdleCallback"],[26,135,58,35],[27,4,58,35],[27,5,59,2],[27,6,59,3],[28,2,60,0],[28,3,60,1],[28,9,60,7],[29,4,65,2],[29,8,65,8,"defineLazyTimer"],[29,23,65,23],[29,26,65,26],[29,35,65,8,"defineLazyTimer"],[29,50,65,23,"defineLazyTimer"],[29,51,66,4,"name"],[29,55,74,20],[29,57,75,7],[30,6,76,4,"polyfillGlobal"],[30,20,76,18],[30,21,76,19,"name"],[30,25,76,23],[30,27,76,25],[31,8,76,25],[31,15,76,31,"require"],[31,22,76,38],[31,23,76,38,"_dependencyMap"],[31,37,76,38],[31,61,76,58],[31,62,76,59],[31,63,76,60,"default"],[31,70,76,67],[31,71,76,68,"name"],[31,75,76,72],[31,76,76,73],[32,6,76,73],[32,8,76,74],[33,4,77,2],[33,5,77,3],[34,4,78,2,"defineLazyTimer"],[34,19,78,17],[34,20,78,18],[34,32,78,30],[34,33,78,31],[35,4,79,2,"defineLazyTimer"],[35,19,79,17],[35,20,79,18],[35,34,79,32],[35,35,79,33],[36,4,80,2,"defineLazyTimer"],[36,19,80,17],[36,20,80,18],[36,33,80,31],[36,34,80,32],[37,4,81,2,"defineLazyTimer"],[37,19,81,17],[37,20,81,18],[37,35,81,33],[37,36,81,34],[38,4,82,2,"defineLazyTimer"],[38,19,82,17],[38,20,82,18],[38,43,82,41],[38,44,82,42],[39,4,83,2,"defineLazyTimer"],[39,19,83,17],[39,20,83,18],[39,42,83,40],[39,43,83,41],[40,4,84,2,"defineLazyTimer"],[40,19,84,17],[40,20,84,18],[40,41,84,39],[40,42,84,40],[41,4,85,2,"defineLazyTimer"],[41,19,85,17],[41,20,85,18],[41,40,85,38],[41,41,85,39],[42,4,88,2,"polyfillGlobal"],[42,18,88,16],[42,19,89,4],[42,35,89,20],[42,37,90,4],[43,6,90,4],[43,13,90,10,"require"],[43,20,90,17],[43,21,90,17,"_dependencyMap"],[43,35,90,17],[43,68,90,46],[43,69,90,47],[43,70,90,48,"default"],[43,77,90,55],[44,4,90,55],[44,5,91,2],[44,6,91,3],[45,4,96,2,"polyfillGlobal"],[45,18,96,16],[45,19,97,4],[45,33,97,18],[45,35,98,4],[46,6,98,4],[46,13,98,10,"require"],[46,20,98,17],[46,21,98,17,"_dependencyMap"],[46,35,98,17],[46,59,98,37],[46,60,98,38],[46,61,98,39,"default"],[46,68,98,46],[46,69,98,47,"queueReactNativeMicrotask"],[46,94,98,72],[47,4,98,72],[47,5,99,2],[47,6,99,3],[48,4,100,2,"polyfillGlobal"],[48,18,100,16],[48,19,101,4],[48,35,101,20],[48,37,102,4],[49,6,102,4],[49,13,102,10,"require"],[49,20,102,17],[49,21,102,17,"_dependencyMap"],[49,35,102,17],[49,59,102,37],[49,60,102,38],[49,61,102,39,"default"],[49,68,102,46],[49,69,102,47,"clearReactNativeMicrotask"],[49,94,102,72],[50,4,102,72],[50,5,103,2],[50,6,103,3],[51,2,104,0],[52,0,104,1],[52,3]],"functionMap":{"names":["<global>","polyfillGlobal$argument_1","defineLazyTimer"],"mappings":"AAA;IC8B;+BDE;ICO,oDD;ICI,sDD;ICK;oCDE;ICK;mCDE;0BEO;yBDW,gDC;GFC;ICa,mDD;ICQ,oED;ICI,oED"},"hasCjsExports":false},"type":"js/module"}]}