{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":66}}],"key":"HKAH228Ju0Kl+/iZZFVvHwdXEII=","exportNames":["*"],"imports":1}},{"name":"../../UTFSequence","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":44}}],"key":"W567LGfeb+S/8nkNG3ztIZ+5t/k=","exportNames":["*"],"imports":1}},{"name":"../../Utilities/stringifySafe","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":58}}],"key":"HIOISlXeitP2wbg1E8dZUtIWYyI=","exportNames":["*"],"imports":1}},{"name":"ansi-regex","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":35}}],"key":"KUULiKFnqjWNy0wY4RUnwKpe0lM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.hasComponentStack = hasComponentStack;\n  exports.parseInterpolation = parseInterpolation;\n  exports.parseComponentStack = parseComponentStack;\n  exports.parseLogBoxException = parseLogBoxException;\n  exports.withoutANSIColorStyles = withoutANSIColorStyles;\n  exports.parseLogBoxLog = parseLogBoxLog;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersToConsumableArray = require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\");\n  var _toConsumableArray = _interopDefault(_babelRuntimeHelpersToConsumableArray);\n  var _CoreDevtoolsParseErrorStack = require(_dependencyMap[2], \"../../Core/Devtools/parseErrorStack\");\n  var parseErrorStack = _interopDefault(_CoreDevtoolsParseErrorStack);\n  var _UTFSequence = require(_dependencyMap[3], \"../../UTFSequence\");\n  var UTFSequence = _interopDefault(_UTFSequence);\n  var _UtilitiesStringifySafe = require(_dependencyMap[4], \"../../Utilities/stringifySafe\");\n  var stringifySafe = _interopDefault(_UtilitiesStringifySafe);\n  var _ansiRegex = require(_dependencyMap[5], \"ansi-regex\");\n  var ansiRegex = _interopDefault(_ansiRegex);\n  var ANSI_REGEX = (0, ansiRegex.default)().source;\n  var RE_TRANSFORM_ERROR = /^TransformError /;\n  var RE_COMPONENT_STACK_LINE = /\\n {4}(in|at) /;\n  var RE_COMPONENT_STACK_LINE_GLOBAL = /\\n {4}(in|at) /g;\n  var RE_COMPONENT_STACK_LINE_OLD = / {4}in/;\n  var RE_COMPONENT_STACK_LINE_NEW = / {4}at/;\n  var RE_COMPONENT_STACK_LINE_STACK_FRAME = /@.*\\n/;\n  var RE_BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\n  var RE_COMPONENT_STACK_WITH_SOURCE = /(.*) \\(at (.*\\.(?:js|jsx|ts|tsx)):([\\d]+)\\)/;\n  var RE_COMPONENT_STACK_NO_SOURCE = /(.*) \\(created by .*\\)/;\n  var RE_BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*):? (?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?)(\\/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+?)\\n([ >]{2}[\\t-\\r 0-9\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+ \\|(?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+|\\x1B(?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+)/;\n  var RE_METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*) \\(([0-9]+):([0-9]+)\\)\\n\\n((?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+)/;\n  var RE_BABEL_CODE_FRAME_MARKER_PATTERN = new RegExp(['^', `(?:${ANSI_REGEX})*`, '>', `(?:${ANSI_REGEX})*`, ' +', '[0-9]+', ' \\\\|'].join(''), 'm');\n  function hasComponentStack(args) {\n    for (var arg of args) {\n      if (typeof arg === 'string' && isComponentStack(arg)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var SUBSTITUTION = UTFSequence.default.BOM + '%s';\n  function parseInterpolation(args) {\n    var categoryParts = [];\n    var contentParts = [];\n    var substitutionOffsets = [];\n    var remaining = (0, _toConsumableArray.default)(args);\n    if (typeof remaining[0] === 'string') {\n      var formatString = String(remaining.shift());\n      var formatStringParts = formatString.split('%s');\n      var substitutionCount = formatStringParts.length - 1;\n      var substitutions = remaining.splice(0, substitutionCount);\n      var categoryString = '';\n      var contentString = '';\n      var substitutionIndex = 0;\n      for (var formatStringPart of formatStringParts) {\n        categoryString += formatStringPart;\n        contentString += formatStringPart;\n        if (substitutionIndex < substitutionCount) {\n          if (substitutionIndex < substitutions.length) {\n            var substitution = typeof substitutions[substitutionIndex] === 'string' ? substitutions[substitutionIndex] : (0, stringifySafe.default)(substitutions[substitutionIndex]);\n            substitutionOffsets.push({\n              length: substitution.length,\n              offset: contentString.length\n            });\n            categoryString += SUBSTITUTION;\n            contentString += substitution;\n          } else {\n            substitutionOffsets.push({\n              length: 2,\n              offset: contentString.length\n            });\n            categoryString += '%s';\n            contentString += '%s';\n          }\n          substitutionIndex++;\n        }\n      }\n      categoryParts.push(categoryString);\n      contentParts.push(contentString);\n    }\n    var remainingArgs = remaining.map(function (arg) {\n      return typeof arg === 'string' ? arg : (0, stringifySafe.default)(arg);\n    });\n    categoryParts.push.apply(categoryParts, (0, _toConsumableArray.default)(remainingArgs));\n    contentParts.push.apply(contentParts, (0, _toConsumableArray.default)(remainingArgs));\n    return {\n      category: categoryParts.join(' '),\n      message: {\n        content: contentParts.join(' '),\n        substitutions: substitutionOffsets\n      }\n    };\n  }\n  function isComponentStack(consoleArgument) {\n    var isOldComponentStackFormat = RE_COMPONENT_STACK_LINE_OLD.test(consoleArgument);\n    var isNewComponentStackFormat = RE_COMPONENT_STACK_LINE_NEW.test(consoleArgument);\n    var isNewJSCComponentStackFormat = RE_COMPONENT_STACK_LINE_STACK_FRAME.test(consoleArgument);\n    return isOldComponentStackFormat || isNewComponentStackFormat || isNewJSCComponentStackFormat;\n  }\n  function parseComponentStack(message) {\n    var stack = (0, parseErrorStack.default)(message);\n    if (stack && stack.length > 0) {\n      return {\n        type: 'stack',\n        stack: stack.map(function (frame) {\n          return {\n            content: frame.methodName,\n            collapse: frame.collapse || false,\n            fileName: frame.file == null ? 'unknown' : frame.file,\n            location: {\n              column: frame.column == null ? -1 : frame.column,\n              row: frame.lineNumber == null ? -1 : frame.lineNumber\n            }\n          };\n        })\n      };\n    }\n    var legacyStack = message.split(RE_COMPONENT_STACK_LINE_GLOBAL).map(function (s) {\n      if (!s) {\n        return null;\n      }\n      var match = s.match(RE_COMPONENT_STACK_WITH_SOURCE);\n      if (match) {\n        var _match$slice = match.slice(1),\n          _match$slice2 = (0, _slicedToArray.default)(_match$slice, 3),\n          content = _match$slice2[0],\n          fileName = _match$slice2[1],\n          row = _match$slice2[2];\n        return {\n          content: content,\n          fileName: fileName,\n          location: {\n            column: -1,\n            row: parseInt(row, 10)\n          }\n        };\n      }\n      var matchWithoutSource = s.match(RE_COMPONENT_STACK_NO_SOURCE);\n      if (matchWithoutSource) {\n        return {\n          content: matchWithoutSource[1],\n          fileName: '',\n          location: null\n        };\n      }\n      return null;\n    }).filter(Boolean);\n    return {\n      type: 'legacy',\n      stack: legacyStack\n    };\n  }\n  function parseLogBoxException(error) {\n    var message = error.originalMessage != null ? error.originalMessage : 'Unknown';\n    var metroInternalError = message.match(RE_METRO_ERROR_FORMAT);\n    if (metroInternalError) {\n      var _metroInternalError$s = metroInternalError.slice(1),\n        _metroInternalError$s2 = (0, _slicedToArray.default)(_metroInternalError$s, 5),\n        content = _metroInternalError$s2[0],\n        fileName = _metroInternalError$s2[1],\n        row = _metroInternalError$s2[2],\n        column = _metroInternalError$s2[3],\n        codeFrame = _metroInternalError$s2[4];\n      return {\n        level: 'fatal',\n        type: 'Metro Error',\n        stack: [],\n        isComponentError: false,\n        componentStackType: 'legacy',\n        componentStack: [],\n        codeFrame: {\n          fileName: fileName,\n          location: {\n            row: parseInt(row, 10),\n            column: parseInt(column, 10)\n          },\n          content: codeFrame\n        },\n        message: {\n          content: content,\n          substitutions: []\n        },\n        category: `${fileName}-${row}-${column}`,\n        extraData: error.extraData\n      };\n    }\n    var babelTransformError = message.match(RE_BABEL_TRANSFORM_ERROR_FORMAT);\n    if (babelTransformError) {\n      var _babelTransformError$ = babelTransformError.slice(1),\n        _babelTransformError$2 = (0, _slicedToArray.default)(_babelTransformError$, 5),\n        _fileName = _babelTransformError$2[0],\n        _content = _babelTransformError$2[1],\n        _row = _babelTransformError$2[2],\n        _column = _babelTransformError$2[3],\n        _codeFrame = _babelTransformError$2[4];\n      return {\n        level: 'syntax',\n        stack: [],\n        isComponentError: false,\n        componentStackType: 'legacy',\n        componentStack: [],\n        codeFrame: {\n          fileName: _fileName,\n          location: {\n            row: parseInt(_row, 10),\n            column: parseInt(_column, 10)\n          },\n          content: _codeFrame\n        },\n        message: {\n          content: _content,\n          substitutions: []\n        },\n        category: `${_fileName}-${_row}-${_column}`,\n        extraData: error.extraData\n      };\n    }\n    if (RE_BABEL_CODE_FRAME_MARKER_PATTERN.test(message)) {\n      var babelCodeFrameError = message.match(RE_BABEL_CODE_FRAME_ERROR_FORMAT);\n      if (babelCodeFrameError) {\n        var _babelCodeFrameError$ = babelCodeFrameError.slice(1),\n          _babelCodeFrameError$2 = (0, _slicedToArray.default)(_babelCodeFrameError$, 3),\n          _fileName2 = _babelCodeFrameError$2[0],\n          _content2 = _babelCodeFrameError$2[1],\n          _codeFrame2 = _babelCodeFrameError$2[2];\n        return {\n          level: 'syntax',\n          stack: [],\n          isComponentError: false,\n          componentStackType: 'legacy',\n          componentStack: [],\n          codeFrame: {\n            fileName: _fileName2,\n            location: null,\n            content: _codeFrame2\n          },\n          message: {\n            content: _content2,\n            substitutions: []\n          },\n          category: `${_fileName2}-${1}-${1}`,\n          extraData: error.extraData\n        };\n      }\n    }\n    if (message.match(RE_TRANSFORM_ERROR)) {\n      return {\n        level: 'syntax',\n        stack: error.stack,\n        isComponentError: error.isComponentError,\n        componentStackType: 'legacy',\n        componentStack: [],\n        message: {\n          content: message,\n          substitutions: []\n        },\n        category: message,\n        extraData: error.extraData\n      };\n    }\n    var componentStack = error.componentStack;\n    if (error.isFatal || error.isComponentError) {\n      if (componentStack != null) {\n        var _parseComponentStack = parseComponentStack(componentStack),\n          type = _parseComponentStack.type,\n          stack = _parseComponentStack.stack;\n        return Object.assign({\n          level: 'fatal',\n          stack: error.stack,\n          isComponentError: error.isComponentError,\n          componentStackType: type,\n          componentStack: stack,\n          extraData: error.extraData\n        }, parseInterpolation([message]));\n      } else {\n        return Object.assign({\n          level: 'fatal',\n          stack: error.stack,\n          isComponentError: error.isComponentError,\n          componentStackType: 'legacy',\n          componentStack: [],\n          extraData: error.extraData\n        }, parseInterpolation([message]));\n      }\n    }\n    if (componentStack != null) {\n      var _parseComponentStack2 = parseComponentStack(componentStack),\n        _type = _parseComponentStack2.type,\n        _stack = _parseComponentStack2.stack;\n      return Object.assign({\n        level: 'error',\n        stack: error.stack,\n        isComponentError: error.isComponentError,\n        componentStackType: _type,\n        componentStack: _stack,\n        extraData: error.extraData\n      }, parseInterpolation([message]));\n    }\n    return Object.assign({\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      extraData: error.extraData\n    }, parseLogBoxLog([message]));\n  }\n  function withoutANSIColorStyles(message) {\n    if (typeof message !== 'string') {\n      return message;\n    }\n    return message.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '');\n  }\n  function parseLogBoxLog(args) {\n    var message = withoutANSIColorStyles(args[0]);\n    var argsWithoutComponentStack = [];\n    var componentStack = [];\n    var componentStackType = 'legacy';\n    if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {\n      var lastArg = args[args.length - 1];\n      if (typeof lastArg === 'string' && isComponentStack(lastArg)) {\n        argsWithoutComponentStack = args.slice(0, -1);\n        argsWithoutComponentStack[0] = message.slice(0, -2);\n        var _parseComponentStack3 = parseComponentStack(lastArg),\n          type = _parseComponentStack3.type,\n          stack = _parseComponentStack3.stack;\n        componentStack = stack;\n        componentStackType = type;\n      }\n    }\n    if (componentStack.length === 0 && argsWithoutComponentStack.length === 0) {\n      for (var arg of args) {\n        if (typeof arg === 'string' && isComponentStack(arg)) {\n          var messageEndIndex = arg.search(RE_COMPONENT_STACK_LINE);\n          if (messageEndIndex < 0) {\n            messageEndIndex = arg.search(/\\n/);\n          }\n          if (messageEndIndex > 0) {\n            argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n          }\n          var _parseComponentStack4 = parseComponentStack(arg),\n            _type2 = _parseComponentStack4.type,\n            _stack2 = _parseComponentStack4.stack;\n          componentStack = _stack2;\n          componentStackType = _type2;\n        } else {\n          argsWithoutComponentStack.push(arg);\n        }\n      }\n    }\n    return Object.assign({}, parseInterpolation(argsWithoutComponentStack), {\n      componentStack: componentStack,\n      componentStackType: componentStackType\n    });\n  }\n});","lineCount":364,"map":[[12,2,96,0,"exports"],[12,9,96,0],[12,10,96,0,"hasComponentStack"],[12,27,96,0],[12,30,96,0,"hasComponentStack"],[12,47,96,0],[13,2,139,0,"exports"],[13,9,139,0],[13,10,139,0,"parseInterpolation"],[13,28,139,0],[13,31,139,0,"parseInterpolation"],[13,49,139,0],[14,2,229,0,"exports"],[14,9,229,0],[14,10,229,0,"parseComponentStack"],[14,29,229,0],[14,32,229,0,"parseComponentStack"],[14,51,229,0],[15,2,287,0,"exports"],[15,9,287,0],[15,10,287,0,"parseLogBoxException"],[15,30,287,0],[15,33,287,0,"parseLogBoxException"],[15,53,287,0],[16,2,447,0,"exports"],[16,9,447,0],[16,10,447,0,"withoutANSIColorStyles"],[16,32,447,0],[16,35,447,0,"withoutANSIColorStyles"],[16,57,447,0],[17,2,459,0,"exports"],[17,9,459,0],[17,10,459,0,"parseLogBoxLog"],[17,24,459,0],[17,27,459,0,"parseLogBoxLog"],[17,41,459,0],[18,2,514,1],[18,6,514,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,514,1],[18,42,514,1,"require"],[18,49,514,1],[18,50,514,1,"_dependencyMap"],[18,64,514,1],[19,2,514,1],[19,6,514,1,"_slicedToArray"],[19,20,514,1],[19,23,514,1,"_interopDefault"],[19,38,514,1],[19,39,514,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,514,1],[20,2,514,1],[20,6,514,1,"_babelRuntimeHelpersToConsumableArray"],[20,43,514,1],[20,46,514,1,"require"],[20,53,514,1],[20,54,514,1,"_dependencyMap"],[20,68,514,1],[21,2,514,1],[21,6,514,1,"_toConsumableArray"],[21,24,514,1],[21,27,514,1,"_interopDefault"],[21,42,514,1],[21,43,514,1,"_babelRuntimeHelpersToConsumableArray"],[21,80,514,1],[22,2,14,0],[22,6,14,0,"_CoreDevtoolsParseErrorStack"],[22,34,14,0],[22,37,14,0,"require"],[22,44,14,0],[22,45,14,0,"_dependencyMap"],[22,59,14,0],[23,2,14,0],[23,6,14,0,"parseErrorStack"],[23,21,14,0],[23,24,14,0,"_interopDefault"],[23,39,14,0],[23,40,14,0,"_CoreDevtoolsParseErrorStack"],[23,68,14,0],[24,2,15,0],[24,6,15,0,"_UTFSequence"],[24,18,15,0],[24,21,15,0,"require"],[24,28,15,0],[24,29,15,0,"_dependencyMap"],[24,43,15,0],[25,2,15,0],[25,6,15,0,"UTFSequence"],[25,17,15,0],[25,20,15,0,"_interopDefault"],[25,35,15,0],[25,36,15,0,"_UTFSequence"],[25,48,15,0],[26,2,16,0],[26,6,16,0,"_UtilitiesStringifySafe"],[26,29,16,0],[26,32,16,0,"require"],[26,39,16,0],[26,40,16,0,"_dependencyMap"],[26,54,16,0],[27,2,16,0],[27,6,16,0,"stringifySafe"],[27,19,16,0],[27,22,16,0,"_interopDefault"],[27,37,16,0],[27,38,16,0,"_UtilitiesStringifySafe"],[27,61,16,0],[28,2,17,0],[28,6,17,0,"_ansiRegex"],[28,16,17,0],[28,19,17,0,"require"],[28,26,17,0],[28,27,17,0,"_dependencyMap"],[28,41,17,0],[29,2,17,0],[29,6,17,0,"ansiRegex"],[29,15,17,0],[29,18,17,0,"_interopDefault"],[29,33,17,0],[29,34,17,0,"_ansiRegex"],[29,44,17,0],[30,2,19,0],[30,6,19,6,"ANSI_REGEX"],[30,16,19,16],[30,19,19,19],[30,23,19,19,"ansiRegex"],[30,32,19,28],[30,33,19,28,"default"],[30,40,19,28],[30,42,19,29],[30,43,19,30],[30,44,19,31,"source"],[30,50,19,37],[31,2,21,0],[31,6,21,6,"RE_TRANSFORM_ERROR"],[31,24,21,24],[31,27,21,27],[31,45,21,45],[32,2,22,0],[32,6,22,6,"RE_COMPONENT_STACK_LINE"],[32,29,22,29],[32,32,22,32],[32,48,22,48],[33,2,23,0],[33,6,23,6,"RE_COMPONENT_STACK_LINE_GLOBAL"],[33,36,23,36],[33,39,23,39],[33,56,23,56],[34,2,24,0],[34,6,24,6,"RE_COMPONENT_STACK_LINE_OLD"],[34,33,24,33],[34,36,24,36],[34,44,24,44],[35,2,25,0],[35,6,25,6,"RE_COMPONENT_STACK_LINE_NEW"],[35,33,25,33],[35,36,25,36],[35,44,25,44],[36,2,26,0],[36,6,26,6,"RE_COMPONENT_STACK_LINE_STACK_FRAME"],[36,41,26,41],[36,44,26,44],[36,51,26,51],[37,2,36,0],[37,6,36,6,"RE_BABEL_TRANSFORM_ERROR_FORMAT"],[37,37,36,37],[37,40,37,2],[37,136,37,98],[38,2,44,0],[38,6,44,6,"RE_COMPONENT_STACK_WITH_SOURCE"],[38,36,44,36],[38,39,45,2],[38,84,45,47],[39,2,51,0],[39,6,51,6,"RE_COMPONENT_STACK_NO_SOURCE"],[39,34,51,34],[39,37,51,37],[39,61,51,61],[40,2,60,0],[40,6,60,6,"RE_BABEL_CODE_FRAME_ERROR_FORMAT"],[40,38,60,38],[40,41,62,2],[40,793,62,104],[41,2,72,0],[41,6,72,6,"RE_METRO_ERROR_FORMAT"],[41,27,72,27],[41,30,73,2],[41,482,73,95],[42,2,76,0],[42,6,76,6,"RE_BABEL_CODE_FRAME_MARKER_PATTERN"],[42,40,76,40],[42,43,76,43],[42,47,76,47,"RegExp"],[42,53,76,53],[42,54,77,2],[42,55,79,4],[42,58,79,7],[42,60,81,4],[42,66,81,10,"ANSI_REGEX"],[42,76,81,20],[42,80,81,24],[42,82,83,4],[42,85,83,7],[42,87,85,4],[42,93,85,10,"ANSI_REGEX"],[42,103,85,20],[42,107,85,24],[42,109,87,4],[42,113,87,8],[42,115,89,4],[42,123,89,12],[42,125,91,4],[42,131,91,10],[42,132,92,3],[42,133,92,4,"join"],[42,137,92,8],[42,138,92,9],[42,140,92,11],[42,141,92,12],[42,143,93,2],[42,146,94,0],[42,147,94,1],[43,2,96,7],[43,11,96,16,"hasComponentStack"],[43,28,96,33,"hasComponentStack"],[43,29,96,34,"args"],[43,33,96,61],[43,35,96,72],[44,4,97,2],[44,9,97,7],[44,13,97,13,"arg"],[44,16,97,16],[44,20,97,20,"args"],[44,24,97,24],[44,26,97,26],[45,6,98,4],[45,10,98,8],[45,17,98,15,"arg"],[45,20,98,18],[45,25,98,23],[45,33,98,31],[45,37,98,35,"isComponentStack"],[45,53,98,51],[45,54,98,52,"arg"],[45,57,98,55],[45,58,98,56],[45,60,98,58],[46,8,99,6],[46,15,99,13],[46,19,99,17],[47,6,100,4],[48,4,101,2],[49,4,102,2],[49,11,102,9],[49,16,102,14],[50,2,103,0],[51,2,137,0],[51,6,137,6,"SUBSTITUTION"],[51,18,137,18],[51,21,137,21,"UTFSequence"],[51,32,137,32],[51,33,137,32,"default"],[51,40,137,32],[51,41,137,33,"BOM"],[51,44,137,36],[51,47,137,39],[51,51,137,43],[52,2,139,7],[52,11,139,16,"parseInterpolation"],[52,29,139,34,"parseInterpolation"],[52,30,139,35,"args"],[52,34,139,62],[52,36,142,3],[53,4,143,2],[53,8,143,8,"categoryParts"],[53,21,143,21],[53,24,143,24],[53,26,143,26],[54,4,144,2],[54,8,144,8,"contentParts"],[54,20,144,20],[54,23,144,23],[54,25,144,25],[55,4,145,2],[55,8,145,8,"substitutionOffsets"],[55,27,145,27],[55,30,145,30],[55,32,145,32],[56,4,147,2],[56,8,147,8,"remaining"],[56,17,147,17],[56,24,147,17,"_toConsumableArray"],[56,42,147,17],[56,43,147,17,"default"],[56,50,147,17],[56,52,147,24,"args"],[56,56,147,28],[56,57,147,29],[57,4,148,2],[57,8,148,6],[57,15,148,13,"remaining"],[57,24,148,22],[57,25,148,23],[57,26,148,24],[57,27,148,25],[57,32,148,30],[57,40,148,38],[57,42,148,40],[58,6,149,4],[58,10,149,10,"formatString"],[58,22,149,22],[58,25,149,25,"String"],[58,31,149,31],[58,32,149,32,"remaining"],[58,41,149,41],[58,42,149,42,"shift"],[58,47,149,47],[58,48,149,48],[58,49,149,49],[58,50,149,50],[59,6,150,4],[59,10,150,10,"formatStringParts"],[59,27,150,27],[59,30,150,30,"formatString"],[59,42,150,42],[59,43,150,43,"split"],[59,48,150,48],[59,49,150,49],[59,53,150,53],[59,54,150,54],[60,6,151,4],[60,10,151,10,"substitutionCount"],[60,27,151,27],[60,30,151,30,"formatStringParts"],[60,47,151,47],[60,48,151,48,"length"],[60,54,151,54],[60,57,151,57],[60,58,151,58],[61,6,152,4],[61,10,152,10,"substitutions"],[61,23,152,23],[61,26,152,26,"remaining"],[61,35,152,35],[61,36,152,36,"splice"],[61,42,152,42],[61,43,152,43],[61,44,152,44],[61,46,152,46,"substitutionCount"],[61,63,152,63],[61,64,152,64],[62,6,154,4],[62,10,154,8,"categoryString"],[62,24,154,22],[62,27,154,25],[62,29,154,27],[63,6,155,4],[63,10,155,8,"contentString"],[63,23,155,21],[63,26,155,24],[63,28,155,26],[64,6,157,4],[64,10,157,8,"substitutionIndex"],[64,27,157,25],[64,30,157,28],[64,31,157,29],[65,6,158,4],[65,11,158,9],[65,15,158,15,"formatStringPart"],[65,31,158,31],[65,35,158,35,"formatStringParts"],[65,52,158,52],[65,54,158,54],[66,8,159,6,"categoryString"],[66,22,159,20],[66,26,159,24,"formatStringPart"],[66,42,159,40],[67,8,160,6,"contentString"],[67,21,160,19],[67,25,160,23,"formatStringPart"],[67,41,160,39],[68,8,162,6],[68,12,162,10,"substitutionIndex"],[68,29,162,27],[68,32,162,30,"substitutionCount"],[68,49,162,47],[68,51,162,49],[69,10,163,8],[69,14,163,12,"substitutionIndex"],[69,31,163,29],[69,34,163,32,"substitutions"],[69,47,163,45],[69,48,163,46,"length"],[69,54,163,52],[69,56,163,54],[70,12,167,10],[70,16,167,16,"substitution"],[70,28,167,28],[70,31,168,12],[70,38,168,19,"substitutions"],[70,51,168,32],[70,52,168,33,"substitutionIndex"],[70,69,168,50],[70,70,168,51],[70,75,168,56],[70,83,168,64],[70,86,169,16,"substitutions"],[70,99,169,29],[70,100,169,30,"substitutionIndex"],[70,117,169,47],[70,118,169,48],[70,121,170,16],[70,125,170,16,"stringifySafe"],[70,138,170,29],[70,139,170,29,"default"],[70,146,170,29],[70,148,170,30,"substitutions"],[70,161,170,43],[70,162,170,44,"substitutionIndex"],[70,179,170,61],[70,180,170,62],[70,181,170,63],[71,12,171,10,"substitutionOffsets"],[71,31,171,29],[71,32,171,30,"push"],[71,36,171,34],[71,37,171,35],[72,14,172,12,"length"],[72,20,172,18],[72,22,172,20,"substitution"],[72,34,172,32],[72,35,172,33,"length"],[72,41,172,39],[73,14,173,12,"offset"],[73,20,173,18],[73,22,173,20,"contentString"],[73,35,173,33],[73,36,173,34,"length"],[74,12,174,10],[74,13,174,11],[74,14,174,12],[75,12,176,10,"categoryString"],[75,26,176,24],[75,30,176,28,"SUBSTITUTION"],[75,42,176,40],[76,12,177,10,"contentString"],[76,25,177,23],[76,29,177,27,"substitution"],[76,41,177,39],[77,10,178,8],[77,11,178,9],[77,17,178,15],[78,12,179,10,"substitutionOffsets"],[78,31,179,29],[78,32,179,30,"push"],[78,36,179,34],[78,37,179,35],[79,14,180,12,"length"],[79,20,180,18],[79,22,180,20],[79,23,180,21],[80,14,181,12,"offset"],[80,20,181,18],[80,22,181,20,"contentString"],[80,35,181,33],[80,36,181,34,"length"],[81,12,182,10],[81,13,182,11],[81,14,182,12],[82,12,184,10,"categoryString"],[82,26,184,24],[82,30,184,28],[82,34,184,32],[83,12,185,10,"contentString"],[83,25,185,23],[83,29,185,27],[83,33,185,31],[84,10,186,8],[85,10,188,8,"substitutionIndex"],[85,27,188,25],[85,29,188,27],[86,8,189,6],[87,6,190,4],[88,6,192,4,"categoryParts"],[88,19,192,17],[88,20,192,18,"push"],[88,24,192,22],[88,25,192,23,"categoryString"],[88,39,192,37],[88,40,192,38],[89,6,193,4,"contentParts"],[89,18,193,16],[89,19,193,17,"push"],[89,23,193,21],[89,24,193,22,"contentString"],[89,37,193,35],[89,38,193,36],[90,4,194,2],[91,4,196,2],[91,8,196,8,"remainingArgs"],[91,21,196,21],[91,24,196,24,"remaining"],[91,33,196,33],[91,34,196,34,"map"],[91,37,196,37],[91,38,196,38],[91,48,196,38,"arg"],[91,51,196,41],[91,53,196,45],[92,6,200,4],[92,13,200,11],[92,20,200,18,"arg"],[92,23,200,21],[92,28,200,26],[92,36,200,34],[92,39,200,37,"arg"],[92,42,200,40],[92,45,200,43],[92,49,200,43,"stringifySafe"],[92,62,200,56],[92,63,200,56,"default"],[92,70,200,56],[92,72,200,57,"arg"],[92,75,200,60],[92,76,200,61],[93,4,201,2],[93,5,201,3],[93,6,201,4],[94,4,202,2,"categoryParts"],[94,17,202,15],[94,18,202,16,"push"],[94,22,202,20],[94,23,202,20,"apply"],[94,28,202,20],[94,29,202,2,"categoryParts"],[94,42,202,15],[94,48,202,15,"_toConsumableArray"],[94,66,202,15],[94,67,202,15,"default"],[94,74,202,15],[94,76,202,24,"remainingArgs"],[94,89,202,37],[94,91,202,38],[95,4,203,2,"contentParts"],[95,16,203,14],[95,17,203,15,"push"],[95,21,203,19],[95,22,203,19,"apply"],[95,27,203,19],[95,28,203,2,"contentParts"],[95,40,203,14],[95,46,203,14,"_toConsumableArray"],[95,64,203,14],[95,65,203,14,"default"],[95,72,203,14],[95,74,203,23,"remainingArgs"],[95,87,203,36],[95,89,203,37],[96,4,205,2],[96,11,205,9],[97,6,206,4,"category"],[97,14,206,12],[97,16,206,14,"categoryParts"],[97,29,206,27],[97,30,206,28,"join"],[97,34,206,32],[97,35,206,33],[97,38,206,36],[97,39,206,37],[98,6,207,4,"message"],[98,13,207,11],[98,15,207,13],[99,8,208,6,"content"],[99,15,208,13],[99,17,208,15,"contentParts"],[99,29,208,27],[99,30,208,28,"join"],[99,34,208,32],[99,35,208,33],[99,38,208,36],[99,39,208,37],[100,8,209,6,"substitutions"],[100,21,209,19],[100,23,209,21,"substitutionOffsets"],[101,6,210,4],[102,4,211,2],[102,5,211,3],[103,2,212,0],[104,2,214,0],[104,11,214,9,"isComponentStack"],[104,27,214,25,"isComponentStack"],[104,28,214,26,"consoleArgument"],[104,43,214,49],[104,45,214,51],[105,4,215,2],[105,8,215,8,"isOldComponentStackFormat"],[105,33,215,33],[105,36,216,4,"RE_COMPONENT_STACK_LINE_OLD"],[105,63,216,31],[105,64,216,32,"test"],[105,68,216,36],[105,69,216,37,"consoleArgument"],[105,84,216,52],[105,85,216,53],[106,4,217,2],[106,8,217,8,"isNewComponentStackFormat"],[106,33,217,33],[106,36,218,4,"RE_COMPONENT_STACK_LINE_NEW"],[106,63,218,31],[106,64,218,32,"test"],[106,68,218,36],[106,69,218,37,"consoleArgument"],[106,84,218,52],[106,85,218,53],[107,4,219,2],[107,8,219,8,"isNewJSCComponentStackFormat"],[107,36,219,36],[107,39,220,4,"RE_COMPONENT_STACK_LINE_STACK_FRAME"],[107,74,220,39],[107,75,220,40,"test"],[107,79,220,44],[107,80,220,45,"consoleArgument"],[107,95,220,60],[107,96,220,61],[108,4,222,2],[108,11,223,4,"isOldComponentStackFormat"],[108,36,223,29],[108,40,224,4,"isNewComponentStackFormat"],[108,65,224,29],[108,69,225,4,"isNewJSCComponentStackFormat"],[108,97,225,32],[109,2,227,0],[110,2,229,7],[110,11,229,16,"parseComponentStack"],[110,30,229,35,"parseComponentStack"],[110,31,229,36,"message"],[110,38,229,51],[110,40,232,2],[111,4,236,2],[111,8,236,8,"stack"],[111,13,236,13],[111,16,236,16],[111,20,236,16,"parseErrorStack"],[111,35,236,31],[111,36,236,31,"default"],[111,43,236,31],[111,45,236,32,"message"],[111,52,236,39],[111,53,236,40],[112,4,237,2],[112,8,237,6,"stack"],[112,13,237,11],[112,17,237,15,"stack"],[112,22,237,20],[112,23,237,21,"length"],[112,29,237,27],[112,32,237,30],[112,33,237,31],[112,35,237,33],[113,6,238,4],[113,13,238,11],[114,8,239,6,"type"],[114,12,239,10],[114,14,239,12],[114,21,239,19],[115,8,240,6,"stack"],[115,13,240,11],[115,15,240,13,"stack"],[115,20,240,18],[115,21,240,19,"map"],[115,24,240,22],[115,25,240,23],[115,35,240,23,"frame"],[115,40,240,28],[116,10,240,28],[116,17,240,33],[117,12,241,8,"content"],[117,19,241,15],[117,21,241,17,"frame"],[117,26,241,22],[117,27,241,23,"methodName"],[117,37,241,33],[118,12,242,8,"collapse"],[118,20,242,16],[118,22,242,18,"frame"],[118,27,242,23],[118,28,242,24,"collapse"],[118,36,242,32],[118,40,242,36],[118,45,242,41],[119,12,243,8,"fileName"],[119,20,243,16],[119,22,243,18,"frame"],[119,27,243,23],[119,28,243,24,"file"],[119,32,243,28],[119,36,243,32],[119,40,243,36],[119,43,243,39],[119,52,243,48],[119,55,243,51,"frame"],[119,60,243,56],[119,61,243,57,"file"],[119,65,243,61],[120,12,244,8,"location"],[120,20,244,16],[120,22,244,18],[121,14,245,10,"column"],[121,20,245,16],[121,22,245,18,"frame"],[121,27,245,23],[121,28,245,24,"column"],[121,34,245,30],[121,38,245,34],[121,42,245,38],[121,45,245,41],[121,46,245,42],[121,47,245,43],[121,50,245,46,"frame"],[121,55,245,51],[121,56,245,52,"column"],[121,62,245,58],[122,14,246,10,"row"],[122,17,246,13],[122,19,246,15,"frame"],[122,24,246,20],[122,25,246,21,"lineNumber"],[122,35,246,31],[122,39,246,35],[122,43,246,39],[122,46,246,42],[122,47,246,43],[122,48,246,44],[122,51,246,47,"frame"],[122,56,246,52],[122,57,246,53,"lineNumber"],[123,12,247,8],[124,10,248,6],[124,11,248,7],[125,8,248,7],[125,9,248,8],[126,6,249,4],[126,7,249,5],[127,4,250,2],[128,4,251,2],[128,8,251,8,"legacyStack"],[128,19,251,19],[128,22,251,22,"message"],[128,29,251,29],[128,30,252,5,"split"],[128,35,252,10],[128,36,252,11,"RE_COMPONENT_STACK_LINE_GLOBAL"],[128,66,252,41],[128,67,252,42],[128,68,253,5,"map"],[128,71,253,8],[128,72,253,9],[128,82,253,9,"s"],[128,83,253,10],[128,85,253,14],[129,6,254,6],[129,10,254,10],[129,11,254,11,"s"],[129,12,254,12],[129,14,254,14],[130,8,255,8],[130,15,255,15],[130,19,255,19],[131,6,256,6],[132,6,257,6],[132,10,257,12,"match"],[132,15,257,17],[132,18,257,20,"s"],[132,19,257,21],[132,20,257,22,"match"],[132,25,257,27],[132,26,257,28,"RE_COMPONENT_STACK_WITH_SOURCE"],[132,56,257,58],[132,57,257,59],[133,6,258,6],[133,10,258,10,"match"],[133,15,258,15],[133,17,258,17],[134,8,259,8],[134,12,259,8,"_match$slice"],[134,24,259,8],[134,27,259,39,"match"],[134,32,259,44],[134,33,259,45,"slice"],[134,38,259,50],[134,39,259,51],[134,40,259,52],[134,41,259,53],[135,10,259,53,"_match$slice2"],[135,23,259,53],[135,30,259,53,"_slicedToArray"],[135,44,259,53],[135,45,259,53,"default"],[135,52,259,53],[135,54,259,53,"_match$slice"],[135,66,259,53],[136,10,259,13,"content"],[136,17,259,20],[136,20,259,20,"_match$slice2"],[136,33,259,20],[137,10,259,22,"fileName"],[137,18,259,30],[137,21,259,30,"_match$slice2"],[137,34,259,30],[138,10,259,32,"row"],[138,13,259,35],[138,16,259,35,"_match$slice2"],[138,29,259,35],[139,8,260,8],[139,15,260,15],[140,10,261,10,"content"],[140,17,261,17],[140,19,261,10,"content"],[140,26,261,17],[141,10,262,10,"fileName"],[141,18,262,18],[141,20,262,10,"fileName"],[141,28,262,18],[142,10,263,10,"location"],[142,18,263,18],[142,20,263,20],[143,12,263,21,"column"],[143,18,263,27],[143,20,263,29],[143,21,263,30],[143,22,263,31],[144,12,263,33,"row"],[144,15,263,36],[144,17,263,38,"parseInt"],[144,25,263,46],[144,26,263,47,"row"],[144,29,263,50],[144,31,263,52],[144,33,263,54],[145,10,263,55],[146,8,264,8],[146,9,264,9],[147,6,265,6],[148,6,268,6],[148,10,268,12,"matchWithoutSource"],[148,28,268,30],[148,31,268,33,"s"],[148,32,268,34],[148,33,268,35,"match"],[148,38,268,40],[148,39,268,41,"RE_COMPONENT_STACK_NO_SOURCE"],[148,67,268,69],[148,68,268,70],[149,6,269,6],[149,10,269,10,"matchWithoutSource"],[149,28,269,28],[149,30,269,30],[150,8,270,8],[150,15,270,15],[151,10,271,10,"content"],[151,17,271,17],[151,19,271,19,"matchWithoutSource"],[151,37,271,37],[151,38,271,38],[151,39,271,39],[151,40,271,40],[152,10,272,10,"fileName"],[152,18,272,18],[152,20,272,20],[152,22,272,22],[153,10,273,10,"location"],[153,18,273,18],[153,20,273,20],[154,8,274,8],[154,9,274,9],[155,6,275,6],[156,6,277,6],[156,13,277,13],[156,17,277,17],[157,4,278,4],[157,5,278,5],[157,6,278,6],[157,7,279,5,"filter"],[157,13,279,11],[157,14,279,12,"Boolean"],[157,21,279,19],[157,22,279,20],[158,4,281,2],[158,11,281,9],[159,6,282,4,"type"],[159,10,282,8],[159,12,282,10],[159,20,282,18],[160,6,283,4,"stack"],[160,11,283,9],[160,13,283,11,"legacyStack"],[161,4,284,2],[161,5,284,3],[162,2,285,0],[163,2,287,7],[163,11,287,16,"parseLogBoxException"],[163,31,287,36,"parseLogBoxException"],[163,32,288,2,"error"],[163,37,288,30],[163,39,289,17],[164,4,290,2],[164,8,290,8,"message"],[164,15,290,15],[164,18,291,4,"error"],[164,23,291,9],[164,24,291,10,"originalMessage"],[164,39,291,25],[164,43,291,29],[164,47,291,33],[164,50,291,36,"error"],[164,55,291,41],[164,56,291,42,"originalMessage"],[164,71,291,57],[164,74,291,60],[164,83,291,69],[165,4,293,2],[165,8,293,8,"metroInternalError"],[165,26,293,26],[165,29,293,29,"message"],[165,36,293,36],[165,37,293,37,"match"],[165,42,293,42],[165,43,293,43,"RE_METRO_ERROR_FORMAT"],[165,64,293,64],[165,65,293,65],[166,4,294,2],[166,8,294,6,"metroInternalError"],[166,26,294,24],[166,28,294,26],[167,6,295,4],[167,10,295,4,"_metroInternalError$s"],[167,31,295,4],[167,34,296,6,"metroInternalError"],[167,52,296,24],[167,53,296,25,"slice"],[167,58,296,30],[167,59,296,31],[167,60,296,32],[167,61,296,33],[168,8,296,33,"_metroInternalError$s2"],[168,30,296,33],[168,37,296,33,"_slicedToArray"],[168,51,296,33],[168,52,296,33,"default"],[168,59,296,33],[168,61,296,33,"_metroInternalError$s"],[168,82,296,33],[169,8,295,11,"content"],[169,15,295,18],[169,18,295,18,"_metroInternalError$s2"],[169,40,295,18],[170,8,295,20,"fileName"],[170,16,295,28],[170,19,295,28,"_metroInternalError$s2"],[170,41,295,28],[171,8,295,30,"row"],[171,11,295,33],[171,14,295,33,"_metroInternalError$s2"],[171,36,295,33],[172,8,295,35,"column"],[172,14,295,41],[172,17,295,41,"_metroInternalError$s2"],[172,39,295,41],[173,8,295,43,"codeFrame"],[173,17,295,52],[173,20,295,52,"_metroInternalError$s2"],[173,42,295,52],[174,6,298,4],[174,13,298,11],[175,8,299,6,"level"],[175,13,299,11],[175,15,299,13],[175,22,299,20],[176,8,300,6,"type"],[176,12,300,10],[176,14,300,12],[176,27,300,25],[177,8,301,6,"stack"],[177,13,301,11],[177,15,301,13],[177,17,301,15],[178,8,302,6,"isComponentError"],[178,24,302,22],[178,26,302,24],[178,31,302,29],[179,8,303,6,"componentStackType"],[179,26,303,24],[179,28,303,26],[179,36,303,34],[180,8,304,6,"componentStack"],[180,22,304,20],[180,24,304,22],[180,26,304,24],[181,8,305,6,"codeFrame"],[181,17,305,15],[181,19,305,17],[182,10,306,8,"fileName"],[182,18,306,16],[182,20,306,8,"fileName"],[182,28,306,16],[183,10,307,8,"location"],[183,18,307,16],[183,20,307,18],[184,12,308,10,"row"],[184,15,308,13],[184,17,308,15,"parseInt"],[184,25,308,23],[184,26,308,24,"row"],[184,29,308,27],[184,31,308,29],[184,33,308,31],[184,34,308,32],[185,12,309,10,"column"],[185,18,309,16],[185,20,309,18,"parseInt"],[185,28,309,26],[185,29,309,27,"column"],[185,35,309,33],[185,37,309,35],[185,39,309,37],[186,10,310,8],[186,11,310,9],[187,10,311,8,"content"],[187,17,311,15],[187,19,311,17,"codeFrame"],[188,8,312,6],[188,9,312,7],[189,8,313,6,"message"],[189,15,313,13],[189,17,313,15],[190,10,314,8,"content"],[190,17,314,15],[190,19,314,8,"content"],[190,26,314,15],[191,10,315,8,"substitutions"],[191,23,315,21],[191,25,315,23],[192,8,316,6],[192,9,316,7],[193,8,317,6,"category"],[193,16,317,14],[193,18,317,16],[193,21,317,19,"fileName"],[193,29,317,27],[193,33,317,31,"row"],[193,36,317,34],[193,40,317,38,"column"],[193,46,317,44],[193,48,317,46],[194,8,318,6,"extraData"],[194,17,318,15],[194,19,318,17,"error"],[194,24,318,22],[194,25,318,23,"extraData"],[195,6,319,4],[195,7,319,5],[196,4,320,2],[197,4,322,2],[197,8,322,8,"babelTransformError"],[197,27,322,27],[197,30,322,30,"message"],[197,37,322,37],[197,38,322,38,"match"],[197,43,322,43],[197,44,322,44,"RE_BABEL_TRANSFORM_ERROR_FORMAT"],[197,75,322,75],[197,76,322,76],[198,4,323,2],[198,8,323,6,"babelTransformError"],[198,27,323,25],[198,29,323,27],[199,6,325,4],[199,10,325,4,"_babelTransformError$"],[199,31,325,4],[199,34,326,6,"babelTransformError"],[199,53,326,25],[199,54,326,26,"slice"],[199,59,326,31],[199,60,326,32],[199,61,326,33],[199,62,326,34],[200,8,326,34,"_babelTransformError$2"],[200,30,326,34],[200,37,326,34,"_slicedToArray"],[200,51,326,34],[200,52,326,34,"default"],[200,59,326,34],[200,61,326,34,"_babelTransformError$"],[200,82,326,34],[201,8,325,11,"fileName"],[201,17,325,19],[201,20,325,19,"_babelTransformError$2"],[201,42,325,19],[202,8,325,21,"content"],[202,16,325,28],[202,19,325,28,"_babelTransformError$2"],[202,41,325,28],[203,8,325,30,"row"],[203,12,325,33],[203,15,325,33,"_babelTransformError$2"],[203,37,325,33],[204,8,325,35,"column"],[204,15,325,41],[204,18,325,41,"_babelTransformError$2"],[204,40,325,41],[205,8,325,43,"codeFrame"],[205,18,325,52],[205,21,325,52,"_babelTransformError$2"],[205,43,325,52],[206,6,328,4],[206,13,328,11],[207,8,329,6,"level"],[207,13,329,11],[207,15,329,13],[207,23,329,21],[208,8,330,6,"stack"],[208,13,330,11],[208,15,330,13],[208,17,330,15],[209,8,331,6,"isComponentError"],[209,24,331,22],[209,26,331,24],[209,31,331,29],[210,8,332,6,"componentStackType"],[210,26,332,24],[210,28,332,26],[210,36,332,34],[211,8,333,6,"componentStack"],[211,22,333,20],[211,24,333,22],[211,26,333,24],[212,8,334,6,"codeFrame"],[212,17,334,15],[212,19,334,17],[213,10,335,8,"fileName"],[213,18,335,16],[213,20,335,8,"fileName"],[213,29,335,16],[214,10,336,8,"location"],[214,18,336,16],[214,20,336,18],[215,12,337,10,"row"],[215,15,337,13],[215,17,337,15,"parseInt"],[215,25,337,23],[215,26,337,24,"row"],[215,30,337,27],[215,32,337,29],[215,34,337,31],[215,35,337,32],[216,12,338,10,"column"],[216,18,338,16],[216,20,338,18,"parseInt"],[216,28,338,26],[216,29,338,27,"column"],[216,36,338,33],[216,38,338,35],[216,40,338,37],[217,10,339,8],[217,11,339,9],[218,10,340,8,"content"],[218,17,340,15],[218,19,340,17,"codeFrame"],[219,8,341,6],[219,9,341,7],[220,8,342,6,"message"],[220,15,342,13],[220,17,342,15],[221,10,343,8,"content"],[221,17,343,15],[221,19,343,8,"content"],[221,27,343,15],[222,10,344,8,"substitutions"],[222,23,344,21],[222,25,344,23],[223,8,345,6],[223,9,345,7],[224,8,346,6,"category"],[224,16,346,14],[224,18,346,16],[224,21,346,19,"fileName"],[224,30,346,27],[224,34,346,31,"row"],[224,38,346,34],[224,42,346,38,"column"],[224,49,346,44],[224,51,346,46],[225,8,347,6,"extraData"],[225,17,347,15],[225,19,347,17,"error"],[225,24,347,22],[225,25,347,23,"extraData"],[226,6,348,4],[226,7,348,5],[227,4,349,2],[228,4,353,2],[228,8,353,6,"RE_BABEL_CODE_FRAME_MARKER_PATTERN"],[228,42,353,40],[228,43,353,41,"test"],[228,47,353,45],[228,48,353,46,"message"],[228,55,353,53],[228,56,353,54],[228,58,353,56],[229,6,354,4],[229,10,354,10,"babelCodeFrameError"],[229,29,354,29],[229,32,354,32,"message"],[229,39,354,39],[229,40,354,40,"match"],[229,45,354,45],[229,46,354,46,"RE_BABEL_CODE_FRAME_ERROR_FORMAT"],[229,78,354,78],[229,79,354,79],[230,6,356,4],[230,10,356,8,"babelCodeFrameError"],[230,29,356,27],[230,31,356,29],[231,8,358,6],[231,12,358,6,"_babelCodeFrameError$"],[231,33,358,6],[231,36,358,45,"babelCodeFrameError"],[231,55,358,64],[231,56,358,65,"slice"],[231,61,358,70],[231,62,358,71],[231,63,358,72],[231,64,358,73],[232,10,358,73,"_babelCodeFrameError$2"],[232,32,358,73],[232,39,358,73,"_slicedToArray"],[232,53,358,73],[232,54,358,73,"default"],[232,61,358,73],[232,63,358,73,"_babelCodeFrameError$"],[232,84,358,73],[233,10,358,13,"fileName"],[233,20,358,21],[233,23,358,21,"_babelCodeFrameError$2"],[233,45,358,21],[234,10,358,23,"content"],[234,19,358,30],[234,22,358,30,"_babelCodeFrameError$2"],[234,44,358,30],[235,10,358,32,"codeFrame"],[235,21,358,41],[235,24,358,41,"_babelCodeFrameError$2"],[235,46,358,41],[236,8,359,6],[236,15,359,13],[237,10,360,8,"level"],[237,15,360,13],[237,17,360,15],[237,25,360,23],[238,10,361,8,"stack"],[238,15,361,13],[238,17,361,15],[238,19,361,17],[239,10,362,8,"isComponentError"],[239,26,362,24],[239,28,362,26],[239,33,362,31],[240,10,363,8,"componentStackType"],[240,28,363,26],[240,30,363,28],[240,38,363,36],[241,10,364,8,"componentStack"],[241,24,364,22],[241,26,364,24],[241,28,364,26],[242,10,365,8,"codeFrame"],[242,19,365,17],[242,21,365,19],[243,12,366,10,"fileName"],[243,20,366,18],[243,22,366,10,"fileName"],[243,32,366,18],[244,12,367,10,"location"],[244,20,367,18],[244,22,367,20],[244,26,367,24],[245,12,368,10,"content"],[245,19,368,17],[245,21,368,19,"codeFrame"],[246,10,369,8],[246,11,369,9],[247,10,370,8,"message"],[247,17,370,15],[247,19,370,17],[248,12,371,10,"content"],[248,19,371,17],[248,21,371,10,"content"],[248,30,371,17],[249,12,372,10,"substitutions"],[249,25,372,23],[249,27,372,25],[250,10,373,8],[250,11,373,9],[251,10,374,8,"category"],[251,18,374,16],[251,20,374,18],[251,23,374,21,"fileName"],[251,33,374,29],[251,37,374,33],[251,38,374,34],[251,42,374,38],[251,43,374,39],[251,45,374,41],[252,10,375,8,"extraData"],[252,19,375,17],[252,21,375,19,"error"],[252,26,375,24],[252,27,375,25,"extraData"],[253,8,376,6],[253,9,376,7],[254,6,377,4],[255,4,378,2],[256,4,380,2],[256,8,380,6,"message"],[256,15,380,13],[256,16,380,14,"match"],[256,21,380,19],[256,22,380,20,"RE_TRANSFORM_ERROR"],[256,40,380,38],[256,41,380,39],[256,43,380,41],[257,6,381,4],[257,13,381,11],[258,8,382,6,"level"],[258,13,382,11],[258,15,382,13],[258,23,382,21],[259,8,383,6,"stack"],[259,13,383,11],[259,15,383,13,"error"],[259,20,383,18],[259,21,383,19,"stack"],[259,26,383,24],[260,8,384,6,"isComponentError"],[260,24,384,22],[260,26,384,24,"error"],[260,31,384,29],[260,32,384,30,"isComponentError"],[260,48,384,46],[261,8,385,6,"componentStackType"],[261,26,385,24],[261,28,385,26],[261,36,385,34],[262,8,386,6,"componentStack"],[262,22,386,20],[262,24,386,22],[262,26,386,24],[263,8,387,6,"message"],[263,15,387,13],[263,17,387,15],[264,10,388,8,"content"],[264,17,388,15],[264,19,388,17,"message"],[264,26,388,24],[265,10,389,8,"substitutions"],[265,23,389,21],[265,25,389,23],[266,8,390,6],[266,9,390,7],[267,8,391,6,"category"],[267,16,391,14],[267,18,391,16,"message"],[267,25,391,23],[268,8,392,6,"extraData"],[268,17,392,15],[268,19,392,17,"error"],[268,24,392,22],[268,25,392,23,"extraData"],[269,6,393,4],[269,7,393,5],[270,4,394,2],[271,4,396,2],[271,8,396,8,"componentStack"],[271,22,396,22],[271,25,396,25,"error"],[271,30,396,30],[271,31,396,31,"componentStack"],[271,45,396,45],[272,4,397,2],[272,8,397,6,"error"],[272,13,397,11],[272,14,397,12,"isFatal"],[272,21,397,19],[272,25,397,23,"error"],[272,30,397,28],[272,31,397,29,"isComponentError"],[272,47,397,45],[272,49,397,47],[273,6,398,4],[273,10,398,8,"componentStack"],[273,24,398,22],[273,28,398,26],[273,32,398,30],[273,34,398,32],[274,8,399,6],[274,12,399,6,"_parseComponentStack"],[274,32,399,6],[274,35,399,28,"parseComponentStack"],[274,54,399,47],[274,55,399,48,"componentStack"],[274,69,399,62],[274,70,399,63],[275,10,399,13,"type"],[275,14,399,17],[275,17,399,17,"_parseComponentStack"],[275,37,399,17],[275,38,399,13,"type"],[275,42,399,17],[276,10,399,19,"stack"],[276,15,399,24],[276,18,399,24,"_parseComponentStack"],[276,38,399,24],[276,39,399,19,"stack"],[276,44,399,24],[277,8,400,6],[277,15,400,6,"Object"],[277,21,400,6],[277,22,400,6,"assign"],[277,28,400,6],[278,10,401,8,"level"],[278,15,401,13],[278,17,401,15],[278,24,401,22],[279,10,402,8,"stack"],[279,15,402,13],[279,17,402,15,"error"],[279,22,402,20],[279,23,402,21,"stack"],[279,28,402,26],[280,10,403,8,"isComponentError"],[280,26,403,24],[280,28,403,26,"error"],[280,33,403,31],[280,34,403,32,"isComponentError"],[280,50,403,48],[281,10,404,8,"componentStackType"],[281,28,404,26],[281,30,404,28,"type"],[281,34,404,32],[282,10,405,8,"componentStack"],[282,24,405,22],[282,26,405,24,"stack"],[282,31,405,29],[283,10,406,8,"extraData"],[283,19,406,17],[283,21,406,19,"error"],[283,26,406,24],[283,27,406,25,"extraData"],[284,8,406,34],[284,11,407,11,"parseInterpolation"],[284,29,407,29],[284,30,407,30],[284,31,407,31,"message"],[284,38,407,38],[284,39,407,39],[284,40,407,40],[285,6,409,4],[285,7,409,5],[285,13,409,11],[286,8,410,6],[286,15,410,6,"Object"],[286,21,410,6],[286,22,410,6,"assign"],[286,28,410,6],[287,10,411,8,"level"],[287,15,411,13],[287,17,411,15],[287,24,411,22],[288,10,412,8,"stack"],[288,15,412,13],[288,17,412,15,"error"],[288,22,412,20],[288,23,412,21,"stack"],[288,28,412,26],[289,10,413,8,"isComponentError"],[289,26,413,24],[289,28,413,26,"error"],[289,33,413,31],[289,34,413,32,"isComponentError"],[289,50,413,48],[290,10,414,8,"componentStackType"],[290,28,414,26],[290,30,414,28],[290,38,414,36],[291,10,415,8,"componentStack"],[291,24,415,22],[291,26,415,24],[291,28,415,26],[292,10,416,8,"extraData"],[292,19,416,17],[292,21,416,19,"error"],[292,26,416,24],[292,27,416,25,"extraData"],[293,8,416,34],[293,11,417,11,"parseInterpolation"],[293,29,417,29],[293,30,417,30],[293,31,417,31,"message"],[293,38,417,38],[293,39,417,39],[293,40,417,40],[294,6,419,4],[295,4,420,2],[296,4,422,2],[296,8,422,6,"componentStack"],[296,22,422,20],[296,26,422,24],[296,30,422,28],[296,32,422,30],[297,6,424,4],[297,10,424,4,"_parseComponentStack2"],[297,31,424,4],[297,34,424,26,"parseComponentStack"],[297,53,424,45],[297,54,424,46,"componentStack"],[297,68,424,60],[297,69,424,61],[298,8,424,11,"type"],[298,13,424,15],[298,16,424,15,"_parseComponentStack2"],[298,37,424,15],[298,38,424,11,"type"],[298,42,424,15],[299,8,424,17,"stack"],[299,14,424,22],[299,17,424,22,"_parseComponentStack2"],[299,38,424,22],[299,39,424,17,"stack"],[299,44,424,22],[300,6,425,4],[300,13,425,4,"Object"],[300,19,425,4],[300,20,425,4,"assign"],[300,26,425,4],[301,8,426,6,"level"],[301,13,426,11],[301,15,426,13],[301,22,426,20],[302,8,427,6,"stack"],[302,13,427,11],[302,15,427,13,"error"],[302,20,427,18],[302,21,427,19,"stack"],[302,26,427,24],[303,8,428,6,"isComponentError"],[303,24,428,22],[303,26,428,24,"error"],[303,31,428,29],[303,32,428,30,"isComponentError"],[303,48,428,46],[304,8,429,6,"componentStackType"],[304,26,429,24],[304,28,429,26,"type"],[304,33,429,30],[305,8,430,6,"componentStack"],[305,22,430,20],[305,24,430,22,"stack"],[305,30,430,27],[306,8,431,6,"extraData"],[306,17,431,15],[306,19,431,17,"error"],[306,24,431,22],[306,25,431,23,"extraData"],[307,6,431,32],[307,9,432,9,"parseInterpolation"],[307,27,432,27],[307,28,432,28],[307,29,432,29,"message"],[307,36,432,36],[307,37,432,37],[307,38,432,38],[308,4,434,2],[309,4,438,2],[309,11,438,2,"Object"],[309,17,438,2],[309,18,438,2,"assign"],[309,24,438,2],[310,6,439,4,"level"],[310,11,439,9],[310,13,439,11],[310,20,439,18],[311,6,440,4,"stack"],[311,11,440,9],[311,13,440,11,"error"],[311,18,440,16],[311,19,440,17,"stack"],[311,24,440,22],[312,6,441,4,"isComponentError"],[312,22,441,20],[312,24,441,22,"error"],[312,29,441,27],[312,30,441,28,"isComponentError"],[312,46,441,44],[313,6,442,4,"extraData"],[313,15,442,13],[313,17,442,15,"error"],[313,22,442,20],[313,23,442,21,"extraData"],[314,4,442,30],[314,7,443,7,"parseLogBoxLog"],[314,21,443,21],[314,22,443,22],[314,23,443,23,"message"],[314,30,443,30],[314,31,443,31],[314,32,443,32],[315,2,445,0],[316,2,447,7],[316,11,447,16,"withoutANSIColorStyles"],[316,33,447,38,"withoutANSIColorStyles"],[316,34,447,39,"message"],[316,41,447,53],[316,43,447,62],[317,4,448,2],[317,8,448,6],[317,15,448,13,"message"],[317,22,448,20],[317,27,448,25],[317,35,448,33],[317,37,448,35],[318,6,449,4],[318,13,449,11,"message"],[318,20,449,18],[319,4,450,2],[320,4,452,2],[320,11,452,9,"message"],[320,18,452,16],[320,19,452,17,"replace"],[320,26,452,24],[320,27,454,4],[320,104,454,81],[320,106,455,4],[320,108,456,2],[320,109,456,3],[321,2,457,0],[322,2,459,7],[322,11,459,16,"parseLogBoxLog"],[322,25,459,30,"parseLogBoxLog"],[322,26,459,31,"args"],[322,30,459,58],[322,32,464,2],[323,4,465,2],[323,8,465,8,"message"],[323,15,465,15],[323,18,465,18,"withoutANSIColorStyles"],[323,40,465,40],[323,41,465,41,"args"],[323,45,465,45],[323,46,465,46],[323,47,465,47],[323,48,465,48],[323,49,465,49],[324,4,466,2],[324,8,466,6,"argsWithoutComponentStack"],[324,33,466,45],[324,36,466,48],[324,38,466,50],[325,4,467,2],[325,8,467,6,"componentStack"],[325,22,467,36],[325,25,467,39],[325,27,467,41],[326,4,468,2],[326,8,468,6,"componentStackType"],[326,26,468,24],[326,29,468,27],[326,37,468,35],[327,4,471,2],[327,8,472,4],[327,15,472,11,"message"],[327,22,472,18],[327,27,472,23],[327,35,472,31],[327,39,473,4,"message"],[327,46,473,11],[327,47,473,12,"slice"],[327,52,473,17],[327,53,473,18],[327,54,473,19],[327,55,473,20],[327,56,473,21],[327,61,473,26],[327,65,473,30],[327,69,474,4,"args"],[327,73,474,8],[327,74,474,9,"length"],[327,80,474,15],[327,83,474,18],[327,84,474,19],[327,86,475,4],[328,6,476,4],[328,10,476,10,"lastArg"],[328,17,476,17],[328,20,476,20,"args"],[328,24,476,24],[328,25,476,25,"args"],[328,29,476,29],[328,30,476,30,"length"],[328,36,476,36],[328,39,476,39],[328,40,476,40],[328,41,476,41],[329,6,477,4],[329,10,477,8],[329,17,477,15,"lastArg"],[329,24,477,22],[329,29,477,27],[329,37,477,35],[329,41,477,39,"isComponentStack"],[329,57,477,55],[329,58,477,56,"lastArg"],[329,65,477,63],[329,66,477,64],[329,68,477,66],[330,8,478,6,"argsWithoutComponentStack"],[330,33,478,31],[330,36,478,34,"args"],[330,40,478,38],[330,41,478,39,"slice"],[330,46,478,44],[330,47,478,45],[330,48,478,46],[330,50,478,48],[330,51,478,49],[330,52,478,50],[330,53,478,51],[331,8,479,6,"argsWithoutComponentStack"],[331,33,479,31],[331,34,479,32],[331,35,479,33],[331,36,479,34],[331,39,479,37,"message"],[331,46,479,44],[331,47,479,45,"slice"],[331,52,479,50],[331,53,479,51],[331,54,479,52],[331,56,479,54],[331,57,479,55],[331,58,479,56],[331,59,479,57],[332,8,480,6],[332,12,480,6,"_parseComponentStack3"],[332,33,480,6],[332,36,480,28,"parseComponentStack"],[332,55,480,47],[332,56,480,48,"lastArg"],[332,63,480,55],[332,64,480,56],[333,10,480,13,"type"],[333,14,480,17],[333,17,480,17,"_parseComponentStack3"],[333,38,480,17],[333,39,480,13,"type"],[333,43,480,17],[334,10,480,19,"stack"],[334,15,480,24],[334,18,480,24,"_parseComponentStack3"],[334,39,480,24],[334,40,480,19,"stack"],[334,45,480,24],[335,8,481,6,"componentStack"],[335,22,481,20],[335,25,481,23,"stack"],[335,30,481,28],[336,8,482,6,"componentStackType"],[336,26,482,24],[336,29,482,27,"type"],[336,33,482,31],[337,6,483,4],[338,4,484,2],[339,4,486,2],[339,8,486,6,"componentStack"],[339,22,486,20],[339,23,486,21,"length"],[339,29,486,27],[339,34,486,32],[339,35,486,33],[339,39,486,37,"argsWithoutComponentStack"],[339,64,486,62],[339,65,486,63,"length"],[339,71,486,69],[339,76,486,74],[339,77,486,75],[339,79,486,77],[340,6,488,4],[340,11,488,9],[340,15,488,15,"arg"],[340,18,488,18],[340,22,488,22,"args"],[340,26,488,26],[340,28,488,28],[341,8,489,6],[341,12,489,10],[341,19,489,17,"arg"],[341,22,489,20],[341,27,489,25],[341,35,489,33],[341,39,489,37,"isComponentStack"],[341,55,489,53],[341,56,489,54,"arg"],[341,59,489,57],[341,60,489,58],[341,62,489,60],[342,10,491,8],[342,14,491,12,"messageEndIndex"],[342,29,491,27],[342,32,491,30,"arg"],[342,35,491,33],[342,36,491,34,"search"],[342,42,491,40],[342,43,491,41,"RE_COMPONENT_STACK_LINE"],[342,66,491,64],[342,67,491,65],[343,10,492,8],[343,14,492,12,"messageEndIndex"],[343,29,492,27],[343,32,492,30],[343,33,492,31],[343,35,492,33],[344,12,494,10,"messageEndIndex"],[344,27,494,25],[344,30,494,28,"arg"],[344,33,494,31],[344,34,494,32,"search"],[344,40,494,38],[344,41,494,39],[344,45,494,43],[344,46,494,44],[345,10,495,8],[346,10,496,8],[346,14,496,12,"messageEndIndex"],[346,29,496,27],[346,32,496,30],[346,33,496,31],[346,35,496,33],[347,12,497,10,"argsWithoutComponentStack"],[347,37,497,35],[347,38,497,36,"push"],[347,42,497,40],[347,43,497,41,"arg"],[347,46,497,44],[347,47,497,45,"slice"],[347,52,497,50],[347,53,497,51],[347,54,497,52],[347,56,497,54,"messageEndIndex"],[347,71,497,69],[347,72,497,70],[347,73,497,71],[348,10,498,8],[349,10,500,8],[349,14,500,8,"_parseComponentStack4"],[349,35,500,8],[349,38,500,30,"parseComponentStack"],[349,57,500,49],[349,58,500,50,"arg"],[349,61,500,53],[349,62,500,54],[350,12,500,15,"type"],[350,18,500,19],[350,21,500,19,"_parseComponentStack4"],[350,42,500,19],[350,43,500,15,"type"],[350,47,500,19],[351,12,500,21,"stack"],[351,19,500,26],[351,22,500,26,"_parseComponentStack4"],[351,43,500,26],[351,44,500,21,"stack"],[351,49,500,26],[352,10,501,8,"componentStack"],[352,24,501,22],[352,27,501,25,"stack"],[352,34,501,30],[353,10,502,8,"componentStackType"],[353,28,502,26],[353,31,502,29,"type"],[353,37,502,33],[354,8,503,6],[354,9,503,7],[354,15,503,13],[355,10,504,8,"argsWithoutComponentStack"],[355,35,504,33],[355,36,504,34,"push"],[355,40,504,38],[355,41,504,39,"arg"],[355,44,504,42],[355,45,504,43],[356,8,505,6],[357,6,506,4],[358,4,507,2],[359,4,509,2],[359,11,509,2,"Object"],[359,17,509,2],[359,18,509,2,"assign"],[359,24,509,2],[359,29,510,7,"parseInterpolation"],[359,47,510,25],[359,48,510,26,"argsWithoutComponentStack"],[359,73,510,51],[359,74,510,52],[360,6,511,4,"componentStack"],[360,20,511,18],[360,22,511,4,"componentStack"],[360,36,511,18],[361,6,512,4,"componentStackType"],[361,24,512,22],[361,26,512,4,"componentStackType"],[362,4,512,22],[363,2,514,0],[364,0,514,1],[364,3]],"functionMap":{"names":["<global>","hasComponentStack","parseInterpolation","remaining.map$argument_0","isComponentStack","parseComponentStack","stack.map$argument_0","message.split.map$argument_0","parseLogBoxException","withoutANSIColorStyles","parseLogBoxLog"],"mappings":"AAA;OC+F;CDO;OEoC;sCCyD;GDK;CFW;AIE;CJa;OKE;uBCW;QDQ;SEK;KFyB;CLO;OQE;CR8J;OSE;CTU;OUE"},"hasCjsExports":false},"type":"js/module"}]}