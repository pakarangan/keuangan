{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = assignStyle;\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  function filterUniqueArray(arr) {\n    return arr.filter(function (val, index) {\n      return arr.lastIndexOf(val) === index;\n    });\n  }\n  function assignStyle(base) {\n    for (var i = 0, len = arguments.length <= 1 ? 0 : arguments.length - 1; i < len; ++i) {\n      var style = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n      for (var property in style) {\n        var value = style[property];\n        var baseValue = base[property];\n        if (baseValue && value) {\n          if (Array.isArray(baseValue)) {\n            base[property] = filterUniqueArray(baseValue.concat(value));\n            continue;\n          }\n          if (Array.isArray(value)) {\n            base[property] = filterUniqueArray([baseValue].concat(_toConsumableArray(value)));\n            continue;\n          }\n          if (_typeof(value) === 'object') {\n            base[property] = assignStyle({}, baseValue, value);\n            continue;\n          }\n        }\n        base[property] = value;\n      }\n    }\n    return base;\n  }\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8],[7,19,6,17],[7,20,6,18],[7,23,6,21,"assignStyle"],[7,34,6,32],[8,2,8,0],[8,11,8,9,"_typeof"],[8,18,8,16,"_typeof"],[8,19,8,17,"obj"],[8,22,8,20],[8,24,8,22],[9,4,8,24],[9,29,8,49],[11,4,8,51],[11,8,8,55],[11,15,8,62,"Symbol"],[11,21,8,68],[11,26,8,73],[11,36,8,83],[11,40,8,87],[11,47,8,94,"Symbol"],[11,53,8,100],[11,54,8,101,"iterator"],[11,62,8,109],[11,67,8,114],[11,75,8,122],[11,77,8,124],[12,6,8,126,"_typeof"],[12,13,8,133],[12,16,8,136],[12,25,8,145,"_typeof"],[12,32,8,152,"_typeof"],[12,33,8,153,"obj"],[12,36,8,156],[12,38,8,158],[13,8,8,160],[13,15,8,167],[13,22,8,174,"obj"],[13,25,8,177],[14,6,8,179],[14,7,8,180],[15,4,8,182],[15,5,8,183],[15,11,8,189],[16,6,8,191,"_typeof"],[16,13,8,198],[16,16,8,201],[16,25,8,210,"_typeof"],[16,32,8,217,"_typeof"],[16,33,8,218,"obj"],[16,36,8,221],[16,38,8,223],[17,8,8,225],[17,15,8,232,"obj"],[17,18,8,235],[17,22,8,239],[17,29,8,246,"Symbol"],[17,35,8,252],[17,40,8,257],[17,50,8,267],[17,54,8,271,"obj"],[17,57,8,274],[17,58,8,275,"constructor"],[17,69,8,286],[17,74,8,291,"Symbol"],[17,80,8,297],[17,84,8,301,"obj"],[17,87,8,304],[17,92,8,309,"Symbol"],[17,98,8,315],[17,99,8,316,"prototype"],[17,108,8,325],[17,111,8,328],[17,119,8,336],[17,122,8,339],[17,129,8,346,"obj"],[17,132,8,349],[18,6,8,351],[18,7,8,352],[19,4,8,354],[20,4,8,356],[20,11,8,363,"_typeof"],[20,18,8,370],[20,19,8,371,"obj"],[20,22,8,374],[20,23,8,375],[21,2,8,377],[22,2,10,0],[22,11,10,9,"_toConsumableArray"],[22,29,10,27,"_toConsumableArray"],[22,30,10,28,"arr"],[22,33,10,31],[22,35,10,33],[23,4,10,35],[23,11,10,42,"_arrayWithoutHoles"],[23,29,10,60],[23,30,10,61,"arr"],[23,33,10,64],[23,34,10,65],[23,38,10,69,"_iterableToArray"],[23,54,10,85],[23,55,10,86,"arr"],[23,58,10,89],[23,59,10,90],[23,63,10,94,"_unsupportedIterableToArray"],[23,90,10,121],[23,91,10,122,"arr"],[23,94,10,125],[23,95,10,126],[23,99,10,130,"_nonIterableSpread"],[23,117,10,148],[23,118,10,149],[23,119,10,150],[24,2,10,152],[25,2,12,0],[25,11,12,9,"_nonIterableSpread"],[25,29,12,27,"_nonIterableSpread"],[25,30,12,27],[25,32,12,30],[26,4,12,32],[26,10,12,38],[26,14,12,42,"TypeError"],[26,23,12,51],[26,24,12,52],[26,158,12,186],[26,159,12,187],[27,2,12,189],[28,2,14,0],[28,11,14,9,"_unsupportedIterableToArray"],[28,38,14,36,"_unsupportedIterableToArray"],[28,39,14,37,"o"],[28,40,14,38],[28,42,14,40,"minLen"],[28,48,14,46],[28,50,14,48],[29,4,14,50],[29,8,14,54],[29,9,14,55,"o"],[29,10,14,56],[29,12,14,58],[30,4,14,66],[30,8,14,70],[30,15,14,77,"o"],[30,16,14,78],[30,21,14,83],[30,29,14,91],[30,31,14,93],[30,38,14,100,"_arrayLikeToArray"],[30,55,14,117],[30,56,14,118,"o"],[30,57,14,119],[30,59,14,121,"minLen"],[30,65,14,127],[30,66,14,128],[31,4,14,130],[31,8,14,134,"n"],[31,9,14,135],[31,12,14,138,"Object"],[31,18,14,144],[31,19,14,145,"prototype"],[31,28,14,154],[31,29,14,155,"toString"],[31,37,14,163],[31,38,14,164,"call"],[31,42,14,168],[31,43,14,169,"o"],[31,44,14,170],[31,45,14,171],[31,46,14,172,"slice"],[31,51,14,177],[31,52,14,178],[31,53,14,179],[31,55,14,181],[31,56,14,182],[31,57,14,183],[31,58,14,184],[32,4,14,186],[32,8,14,190,"n"],[32,9,14,191],[32,14,14,196],[32,22,14,204],[32,26,14,208,"o"],[32,27,14,209],[32,28,14,210,"constructor"],[32,39,14,221],[32,41,14,223,"n"],[32,42,14,224],[32,45,14,227,"o"],[32,46,14,228],[32,47,14,229,"constructor"],[32,58,14,240],[32,59,14,241,"name"],[32,63,14,245],[33,4,14,247],[33,8,14,251,"n"],[33,9,14,252],[33,14,14,257],[33,19,14,262],[33,23,14,266,"n"],[33,24,14,267],[33,29,14,272],[33,34,14,277],[33,36,14,279],[33,43,14,286,"Array"],[33,48,14,291],[33,49,14,292,"from"],[33,53,14,296],[33,54,14,297,"n"],[33,55,14,298],[33,56,14,299],[34,4,14,301],[34,8,14,305,"n"],[34,9,14,306],[34,14,14,311],[34,25,14,322],[34,29,14,326],[34,71,14,368],[34,72,14,369,"test"],[34,76,14,373],[34,77,14,374,"n"],[34,78,14,375],[34,79,14,376],[34,81,14,378],[34,88,14,385,"_arrayLikeToArray"],[34,105,14,402],[34,106,14,403,"o"],[34,107,14,404],[34,109,14,406,"minLen"],[34,115,14,412],[34,116,14,413],[35,2,14,415],[36,2,16,0],[36,11,16,9,"_iterableToArray"],[36,27,16,25,"_iterableToArray"],[36,28,16,26,"iter"],[36,32,16,30],[36,34,16,32],[37,4,16,34],[37,8,16,38],[37,15,16,45,"Symbol"],[37,21,16,51],[37,26,16,56],[37,37,16,67],[37,41,16,71,"Symbol"],[37,47,16,77],[37,48,16,78,"iterator"],[37,56,16,86],[37,60,16,90,"Object"],[37,66,16,96],[37,67,16,97,"iter"],[37,71,16,101],[37,72,16,102],[37,74,16,104],[37,81,16,111,"Array"],[37,86,16,116],[37,87,16,117,"from"],[37,91,16,121],[37,92,16,122,"iter"],[37,96,16,126],[37,97,16,127],[38,2,16,129],[39,2,18,0],[39,11,18,9,"_arrayWithoutHoles"],[39,29,18,27,"_arrayWithoutHoles"],[39,30,18,28,"arr"],[39,33,18,31],[39,35,18,33],[40,4,18,35],[40,8,18,39,"Array"],[40,13,18,44],[40,14,18,45,"isArray"],[40,21,18,52],[40,22,18,53,"arr"],[40,25,18,56],[40,26,18,57],[40,28,18,59],[40,35,18,66,"_arrayLikeToArray"],[40,52,18,83],[40,53,18,84,"arr"],[40,56,18,87],[40,57,18,88],[41,2,18,90],[42,2,20,0],[42,11,20,9,"_arrayLikeToArray"],[42,28,20,26,"_arrayLikeToArray"],[42,29,20,27,"arr"],[42,32,20,30],[42,34,20,32,"len"],[42,37,20,35],[42,39,20,37],[43,4,20,39],[43,8,20,43,"len"],[43,11,20,46],[43,15,20,50],[43,19,20,54],[43,23,20,58,"len"],[43,26,20,61],[43,29,20,64,"arr"],[43,32,20,67],[43,33,20,68,"length"],[43,39,20,74],[43,41,20,76,"len"],[43,44,20,79],[43,47,20,82,"arr"],[43,50,20,85],[43,51,20,86,"length"],[43,57,20,92],[44,4,20,94],[44,9,20,99],[44,13,20,103,"i"],[44,14,20,104],[44,17,20,107],[44,18,20,108],[44,20,20,110,"arr2"],[44,24,20,114],[44,27,20,117],[44,31,20,121,"Array"],[44,36,20,126],[44,37,20,127,"len"],[44,40,20,130],[44,41,20,131],[44,43,20,133,"i"],[44,44,20,134],[44,47,20,137,"len"],[44,50,20,140],[44,52,20,142,"i"],[44,53,20,143],[44,55,20,145],[44,57,20,147],[45,6,20,149,"arr2"],[45,10,20,153],[45,11,20,154,"i"],[45,12,20,155],[45,13,20,156],[45,16,20,159,"arr"],[45,19,20,162],[45,20,20,163,"i"],[45,21,20,164],[45,22,20,165],[46,4,20,167],[47,4,20,169],[47,11,20,176,"arr2"],[47,15,20,180],[48,2,20,182],[49,2,22,0],[49,11,22,9,"filterUniqueArray"],[49,28,22,26,"filterUniqueArray"],[49,29,22,27,"arr"],[49,32,22,30],[49,34,22,32],[50,4,23,2],[50,11,23,9,"arr"],[50,14,23,12],[50,15,23,13,"filter"],[50,21,23,19],[50,22,23,20],[50,32,23,30,"val"],[50,35,23,33],[50,37,23,35,"index"],[50,42,23,40],[50,44,23,42],[51,6,24,4],[51,13,24,11,"arr"],[51,16,24,14],[51,17,24,15,"lastIndexOf"],[51,28,24,26],[51,29,24,27,"val"],[51,32,24,30],[51,33,24,31],[51,38,24,36,"index"],[51,43,24,41],[52,4,25,2],[52,5,25,3],[52,6,25,4],[53,2,26,0],[54,2,28,0],[54,11,28,9,"assignStyle"],[54,22,28,20,"assignStyle"],[54,23,28,21,"base"],[54,27,28,25],[54,29,28,27],[55,4,29,2],[55,9,29,7],[55,13,29,11,"i"],[55,14,29,12],[55,17,29,15],[55,18,29,16],[55,20,29,18,"len"],[55,23,29,21],[55,26,29,24,"arguments"],[55,35,29,33],[55,36,29,34,"length"],[55,42,29,40],[55,46,29,44],[55,47,29,45],[55,50,29,48],[55,51,29,49],[55,54,29,52,"arguments"],[55,63,29,61],[55,64,29,62,"length"],[55,70,29,68],[55,73,29,71],[55,74,29,72],[55,76,29,74,"i"],[55,77,29,75],[55,80,29,78,"len"],[55,83,29,81],[55,85,29,83],[55,87,29,85,"i"],[55,88,29,86],[55,90,29,88],[56,6,30,4],[56,10,30,8,"style"],[56,15,30,13],[56,18,30,16,"i"],[56,19,30,17],[56,22,30,20],[56,23,30,21],[56,26,30,24],[56,27,30,25],[56,31,30,29,"arguments"],[56,40,30,38],[56,41,30,39,"length"],[56,47,30,45],[56,51,30,49,"i"],[56,52,30,50],[56,55,30,53],[56,56,30,54],[56,59,30,57,"undefined"],[56,68,30,66],[56,71,30,69,"arguments"],[56,80,30,78],[56,81,30,79,"i"],[56,82,30,80],[56,85,30,83],[56,86,30,84],[56,87,30,85],[57,6,32,4],[57,11,32,9],[57,15,32,13,"property"],[57,23,32,21],[57,27,32,25,"style"],[57,32,32,30],[57,34,32,32],[58,8,33,6],[58,12,33,10,"value"],[58,17,33,15],[58,20,33,18,"style"],[58,25,33,23],[58,26,33,24,"property"],[58,34,33,32],[58,35,33,33],[59,8,34,6],[59,12,34,10,"baseValue"],[59,21,34,19],[59,24,34,22,"base"],[59,28,34,26],[59,29,34,27,"property"],[59,37,34,35],[59,38,34,36],[60,8,36,6],[60,12,36,10,"baseValue"],[60,21,36,19],[60,25,36,23,"value"],[60,30,36,28],[60,32,36,30],[61,10,37,8],[61,14,37,12,"Array"],[61,19,37,17],[61,20,37,18,"isArray"],[61,27,37,25],[61,28,37,26,"baseValue"],[61,37,37,35],[61,38,37,36],[61,40,37,38],[62,12,38,10,"base"],[62,16,38,14],[62,17,38,15,"property"],[62,25,38,23],[62,26,38,24],[62,29,38,27,"filterUniqueArray"],[62,46,38,44],[62,47,38,45,"baseValue"],[62,56,38,54],[62,57,38,55,"concat"],[62,63,38,61],[62,64,38,62,"value"],[62,69,38,67],[62,70,38,68],[62,71,38,69],[63,12,39,10],[64,10,40,8],[65,10,42,8],[65,14,42,12,"Array"],[65,19,42,17],[65,20,42,18,"isArray"],[65,27,42,25],[65,28,42,26,"value"],[65,33,42,31],[65,34,42,32],[65,36,42,34],[66,12,43,10,"base"],[66,16,43,14],[66,17,43,15,"property"],[66,25,43,23],[66,26,43,24],[66,29,43,27,"filterUniqueArray"],[66,46,43,44],[66,47,43,45],[66,48,43,46,"baseValue"],[66,57,43,55],[66,58,43,56],[66,59,43,57,"concat"],[66,65,43,63],[66,66,43,64,"_toConsumableArray"],[66,84,43,82],[66,85,43,83,"value"],[66,90,43,88],[66,91,43,89],[66,92,43,90],[66,93,43,91],[67,12,44,10],[68,10,45,8],[69,10,47,8],[69,14,47,12,"_typeof"],[69,21,47,19],[69,22,47,20,"value"],[69,27,47,25],[69,28,47,26],[69,33,47,31],[69,41,47,39],[69,43,47,41],[70,12,48,10,"base"],[70,16,48,14],[70,17,48,15,"property"],[70,25,48,23],[70,26,48,24],[70,29,48,27,"assignStyle"],[70,40,48,38],[70,41,48,39],[70,42,48,40],[70,43,48,41],[70,45,48,43,"baseValue"],[70,54,48,52],[70,56,48,54,"value"],[70,61,48,59],[70,62,48,60],[71,12,49,10],[72,10,50,8],[73,8,51,6],[74,8,53,6,"base"],[74,12,53,10],[74,13,53,11,"property"],[74,21,53,19],[74,22,53,20],[74,25,53,23,"value"],[74,30,53,28],[75,6,54,4],[76,4,55,2],[77,4,57,2],[77,11,57,9,"base"],[77,15,57,13],[78,2,58,0],[79,0,58,1],[79,3]],"functionMap":{"names":["<global>","_typeof","_toConsumableArray","_nonIterableSpread","_unsupportedIterableToArray","_iterableToArray","_arrayWithoutHoles","_arrayLikeToArray","filterUniqueArray","arr.filter$argument_0","assignStyle"],"mappings":"AAA;ACO,0XD;AEE,yJF;AGE,8LH;AIE,gaJ;AKE,kIL;AME,2FN;AOE,uLP;AQE;oBCC;GDE;CRC;AUE"},"hasCjsExports":true},"type":"js/module"}]}