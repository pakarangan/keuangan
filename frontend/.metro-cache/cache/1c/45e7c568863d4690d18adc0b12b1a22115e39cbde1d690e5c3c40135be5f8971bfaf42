{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":44,"index":1095},"end":{"line":22,"column":91,"index":1142}}],"key":"F+ExrfS9dcoZxXJOBwTmx09hji8=","exportNames":["*"],"imports":1}},{"name":"./NativeAnimatedModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":51,"index":1196},"end":{"line":23,"column":84,"index":1229}}],"key":"+Uiju1ayDSkxBNHT6Hg9s/87gP4=","exportNames":["*"],"imports":1}},{"name":"./NativeAnimatedTurboModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":56,"index":1288},"end":{"line":24,"column":94,"index":1326}}],"key":"w3qEG1T0kn9gFtk0wLsEfWcs1qI=","exportNames":["*"],"imports":1}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":49,"index":1378},"end":{"line":25,"column":94,"index":1423}}],"key":"ye0o8QGJ/9CPVxeXi6X3EnpVRPw=","exportNames":["*"],"imports":1}},{"name":"../Utilities/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":39,"index":1465},"end":{"line":26,"column":71,"index":1497}}],"key":"4a+BOpVYP2jviYQTOV6MRNF0tRc=","exportNames":["*"],"imports":1}},{"name":"../ReactNative/ReactNativeFeatureFlags","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":54,"index":1554},"end":{"line":27,"column":103,"index":1603}}],"key":"GPF+GP2ribJjPJQcr24aFTcQMZc=","exportNames":["*"],"imports":1}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":40,"index":1646},"end":{"line":28,"column":69,"index":1675}}],"key":"ePiUN85REKH0vTLGPPDgdWgjFww=","exportNames":["*"],"imports":1}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":52,"index":1730},"end":{"line":29,"column":100,"index":1778}}],"key":"ccvGtF1CDmCzWjlRZvdTn4zIYBE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.API = void 0;\n  exports.addWhitelistedInterpolationParam = addWhitelistedInterpolationParam;\n  exports.addWhitelistedStyleProp = addWhitelistedStyleProp;\n  exports.addWhitelistedTransformProp = addWhitelistedTransformProp;\n  exports.assertNativeAnimatedModule = assertNativeAnimatedModule;\n  exports.default = void 0;\n  exports.generateNewAnimationId = generateNewAnimationId;\n  exports.generateNewNodeTag = generateNewNodeTag;\n  exports.isSupportedColorStyleProp = isSupportedColorStyleProp;\n  exports.isSupportedInterpolationParam = isSupportedInterpolationParam;\n  exports.isSupportedStyleProp = isSupportedStyleProp;\n  exports.isSupportedTransformProp = isSupportedTransformProp;\n  exports.shouldUseNativeDriver = shouldUseNativeDriver;\n  exports.transformDataType = transformDataType;\n  exports.validateInterpolation = validateInterpolation;\n  exports.validateStyles = validateStyles;\n  exports.validateTransform = validateTransform;\n  var _objectSpread2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread2\"));\n  var _NativeAnimatedModule = _interopRequireDefault(require(_dependencyMap[2], \"./NativeAnimatedModule\"));\n  var _NativeAnimatedTurboModule = _interopRequireDefault(require(_dependencyMap[3], \"./NativeAnimatedTurboModule\"));\n  var _NativeEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[5], \"../Utilities/Platform\"));\n  var _ReactNativeFeatureFlags = _interopRequireDefault(require(_dependencyMap[6], \"../ReactNative/ReactNativeFeatureFlags\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[7], \"fbjs/lib/invariant\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[8], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\n  var NativeAnimatedModule = _Platform.default.OS === 'ios' && global.RN$Bridgeless === true ? _NativeAnimatedTurboModule.default : _NativeAnimatedModule.default;\n  var __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\n  var __nativeAnimationIdCount = 1; /* used for started animations */\n\n  var nativeEventEmitter;\n  var waitingForQueuedOperations = new Set();\n  var queueOperations = false;\n  var queue = [];\n  // $FlowFixMe\n  var singleOpQueue = [];\n  var useSingleOpBatching = false;\n  _Platform.default.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && _ReactNativeFeatureFlags.default.animatedShouldUseSingleOp();\n  var flushQueueTimeout = null;\n  var eventListenerGetValueCallbacks = {};\n  var eventListenerAnimationFinishedCallbacks = {};\n  var globalEventEmitterGetValueListener = null;\n  var globalEventEmitterAnimationFinishedListener = null;\n  var nativeOps = useSingleOpBatching ? function () {\n    var apis = ['createAnimatedNode',\n    // 1\n    'updateAnimatedNodeConfig',\n    // 2\n    'getValue',\n    // 3\n    'startListeningToAnimatedNodeValue',\n    // 4\n    'stopListeningToAnimatedNodeValue',\n    // 5\n    'connectAnimatedNodes',\n    // 6\n    'disconnectAnimatedNodes',\n    // 7\n    'startAnimatingNode',\n    // 8\n    'stopAnimation',\n    // 9\n    'setAnimatedNodeValue',\n    // 10\n    'setAnimatedNodeOffset',\n    // 11\n    'flattenAnimatedNodeOffset',\n    // 12\n    'extractAnimatedNodeOffset',\n    // 13\n    'connectAnimatedNodeToView',\n    // 14\n    'disconnectAnimatedNodeFromView',\n    // 15\n    'restoreDefaultValues',\n    // 16\n    'dropAnimatedNode',\n    // 17\n    'addAnimatedEventToView',\n    // 18\n    'removeAnimatedEventFromView',\n    // 19\n    'addListener',\n    // 20\n    'removeListener' // 21\n    ];\n    return apis.reduce(function (acc, functionName, i) {\n      // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n      // $FlowFixMe[prop-missing]\n      acc[functionName] = i + 1;\n      return acc;\n    }, {});\n  }() : NativeAnimatedModule;\n\n  /**\n   * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n   * the native module methods, and automatic queue management on Android\n   */\n  var API = exports.API = {\n    getValue: function getValue(tag, saveValueCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.getValue, tag);\n      } else {\n        API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n      }\n    },\n    setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n      waitingForQueuedOperations.add(id);\n      queueOperations = true;\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n        clearTimeout(flushQueueTimeout);\n      }\n    },\n    unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n      waitingForQueuedOperations.delete(id);\n      if (waitingForQueuedOperations.size === 0) {\n        queueOperations = false;\n        API.disableQueue();\n      }\n    },\n    disableQueue: function disableQueue() {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush()) {\n        var prevTimeout = flushQueueTimeout;\n        clearImmediate(prevTimeout);\n        flushQueueTimeout = setImmediate(API.flushQueue);\n      } else {\n        API.flushQueue();\n      }\n    },\n    flushQueue: function flushQueue() {\n      /*\n      invariant(NativeAnimatedModule, 'Native animated module is not available');\n      flushQueueTimeout = null;\n       // Early returns before calling any APIs\n      if (useSingleOpBatching && singleOpQueue.length === 0) {\n        return;\n      }\n      if (!useSingleOpBatching && queue.length === 0) {\n        return;\n      }\n       if (useSingleOpBatching) {\n        // Set up event listener for callbacks if it's not set up\n        if (\n          !globalEventEmitterGetValueListener ||\n          !globalEventEmitterAnimationFinishedListener\n        ) {\n          setupGlobalEventEmitterListeners();\n        }\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule.queueAndExecuteBatchedOperations?.(singleOpQueue);\n        singleOpQueue.length = 0;\n      } else {\n        Platform.OS === 'android' && NativeAnimatedModule.startOperationBatch?.();\n        for (let q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n        Platform.OS === 'android' &&\n          NativeAnimatedModule.finishOperationBatch?.();\n      }\n      */\n    },\n    queueOperation: function queueOperation(fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (useSingleOpBatching) {\n        // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n        // $FlowFixMe: surprise, fn is actually a number\n        singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n        return;\n      }\n\n      // If queueing is explicitly on, *or* the queue has not yet\n      // been flushed, use the queue. This is to prevent operations\n      // from being executed out of order.\n      if (queueOperations || queue.length !== 0) {\n        queue.push(function () {\n          return fn.apply(void 0, args);\n        });\n      } else {\n        fn.apply(void 0, args);\n      }\n    },\n    createAnimatedNode: function createAnimatedNode(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n    },\n    updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      //if (nativeOps.updateAnimatedNodeConfig) {\n      //  API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n      //}\n    },\n    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n    },\n    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n    },\n    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n    },\n    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n    },\n    startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config);\n      } else {\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n      }\n    },\n    stopAnimation: function stopAnimation(animationId) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopAnimation, animationId);\n    },\n    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n    },\n    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n    },\n    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n    },\n    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n    },\n    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n    },\n    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n    },\n    restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      // Backwards compat with older native runtimes, can be removed later.\n      if (nativeOps.restoreDefaultValues != null) {\n        API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n      }\n    },\n    dropAnimatedNode: function dropAnimatedNode(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.dropAnimatedNode, tag);\n    },\n    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n    },\n    removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n    }\n  };\n  function setupGlobalEventEmitterListeners() {\n    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', function (params) {\n      var tag = params.tag;\n      var callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    });\n    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n      var animationId = params.animationId;\n      var callback = eventListenerAnimationFinishedCallbacks[animationId];\n      if (!callback) {\n        return;\n      }\n      callback(params);\n      delete eventListenerAnimationFinishedCallbacks[animationId];\n    });\n  }\n\n  /**\n   * Styles allowed by the native animated implementation.\n   *\n   * In general native animated implementation should support any numeric or color property that\n   * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n   */\n  var SUPPORTED_COLOR_STYLES = {\n    backgroundColor: true,\n    borderBottomColor: true,\n    borderColor: true,\n    borderEndColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderStartColor: true,\n    borderTopColor: true,\n    color: true,\n    tintColor: true\n  };\n  var SUPPORTED_STYLES = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, SUPPORTED_COLOR_STYLES), {}, {\n    borderBottomEndRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomStartRadius: true,\n    borderRadius: true,\n    borderTopEndRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderTopStartRadius: true,\n    elevation: true,\n    opacity: true,\n    transform: true,\n    zIndex: true,\n    /* ios styles */\n    shadowOpacity: true,\n    shadowRadius: true,\n    /* legacy android transform properties */\n    scaleX: true,\n    scaleY: true,\n    translateX: true,\n    translateY: true\n  });\n  var SUPPORTED_TRANSFORMS = {\n    translateX: true,\n    translateY: true,\n    scale: true,\n    scaleX: true,\n    scaleY: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    perspective: true\n  };\n  var SUPPORTED_INTERPOLATION_PARAMS = {\n    inputRange: true,\n    outputRange: true,\n    extrapolate: true,\n    extrapolateRight: true,\n    extrapolateLeft: true\n  };\n  function addWhitelistedStyleProp(prop) {\n    SUPPORTED_STYLES[prop] = true;\n  }\n  function addWhitelistedTransformProp(prop) {\n    SUPPORTED_TRANSFORMS[prop] = true;\n  }\n  function addWhitelistedInterpolationParam(param) {\n    SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n  }\n  function isSupportedColorStyleProp(prop) {\n    return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedStyleProp(prop) {\n    return SUPPORTED_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedTransformProp(prop) {\n    return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n  }\n  function isSupportedInterpolationParam(param) {\n    return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n  }\n  function validateTransform(configs) {\n    configs.forEach(function (config) {\n      if (!isSupportedTransformProp(config.property)) {\n        throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n      }\n    });\n  }\n  function validateStyles(styles) {\n    for (var _key2 in styles) {\n      if (!isSupportedStyleProp(_key2)) {\n        throw new Error(\"Style property '\" + _key2 + \"' is not supported by native animated module\");\n      }\n    }\n  }\n  function validateInterpolation(config) {\n    for (var _key3 in config) {\n      if (!isSupportedInterpolationParam(_key3)) {\n        throw new Error(\"Interpolation property '\" + _key3 + \"' is not supported by native animated module\");\n      }\n    }\n  }\n  function generateNewNodeTag() {\n    return __nativeAnimatedNodeTagCount++;\n  }\n  function generateNewAnimationId() {\n    return __nativeAnimationIdCount++;\n  }\n  function assertNativeAnimatedModule() {\n    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');\n  }\n  var _warnedMissingNativeAnimated = false;\n  function shouldUseNativeDriver(config) {\n    if (config.useNativeDriver == null) {\n      console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n    }\n    if (config.useNativeDriver === true && !NativeAnimatedModule) {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n      return false;\n    }\n    return config.useNativeDriver || false;\n  }\n  function transformDataType(value) {\n    // Change the string type to number type so we can reuse the same logic in\n    // iOS and Android platform\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (/deg$/.test(value)) {\n      var degrees = parseFloat(value) || 0;\n      var radians = degrees * Math.PI / 180.0;\n      return radians;\n    } else {\n      return value;\n    }\n  }\n  var _default = exports.default = {\n    API: API,\n    isSupportedColorStyleProp: isSupportedColorStyleProp,\n    isSupportedStyleProp: isSupportedStyleProp,\n    isSupportedTransformProp: isSupportedTransformProp,\n    isSupportedInterpolationParam: isSupportedInterpolationParam,\n    addWhitelistedStyleProp: addWhitelistedStyleProp,\n    addWhitelistedTransformProp: addWhitelistedTransformProp,\n    addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n    validateStyles: validateStyles,\n    validateTransform: validateTransform,\n    validateInterpolation: validateInterpolation,\n    generateNewNodeTag: generateNewNodeTag,\n    generateNewAnimationId: generateNewAnimationId,\n    assertNativeAnimatedModule: assertNativeAnimatedModule,\n    shouldUseNativeDriver: shouldUseNativeDriver,\n    transformDataType: transformDataType,\n    // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppresion\n    // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppresion\n    get nativeEventEmitter() {\n      if (!nativeEventEmitter) {\n        nativeEventEmitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);\n      }\n      return nativeEventEmitter;\n    }\n  };\n});","lineCount":484,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,38,3,36],[4,39,3,36,"_dependencyMap"],[4,53,3,36],[4,104,3,83],[4,105,3,84],[4,106,3,85,"default"],[4,113,3,92],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"__esModule"],[5,20,4,18],[5,23,4,21],[5,27,4,25],[6,2,5,0,"exports"],[6,9,5,7],[6,10,5,8,"API"],[6,13,5,11],[6,16,5,14],[6,21,5,19],[6,22,5,20],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"addWhitelistedInterpolationParam"],[7,42,6,40],[7,45,6,43,"addWhitelistedInterpolationParam"],[7,77,6,75],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"addWhitelistedStyleProp"],[8,33,7,31],[8,36,7,34,"addWhitelistedStyleProp"],[8,59,7,57],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"addWhitelistedTransformProp"],[9,37,8,35],[9,40,8,38,"addWhitelistedTransformProp"],[9,67,8,65],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"assertNativeAnimatedModule"],[10,36,9,34],[10,39,9,37,"assertNativeAnimatedModule"],[10,65,9,63],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"default"],[11,17,10,15],[11,20,10,18],[11,25,10,23],[11,26,10,24],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"generateNewAnimationId"],[12,32,11,30],[12,35,11,33,"generateNewAnimationId"],[12,57,11,55],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"generateNewNodeTag"],[13,28,12,26],[13,31,12,29,"generateNewNodeTag"],[13,49,12,47],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"isSupportedColorStyleProp"],[14,35,13,33],[14,38,13,36,"isSupportedColorStyleProp"],[14,63,13,61],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"isSupportedInterpolationParam"],[15,39,14,37],[15,42,14,40,"isSupportedInterpolationParam"],[15,71,14,69],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"isSupportedStyleProp"],[16,30,15,28],[16,33,15,31,"isSupportedStyleProp"],[16,53,15,51],[17,2,16,0,"exports"],[17,9,16,7],[17,10,16,8,"isSupportedTransformProp"],[17,34,16,32],[17,37,16,35,"isSupportedTransformProp"],[17,61,16,59],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"shouldUseNativeDriver"],[18,31,17,29],[18,34,17,32,"shouldUseNativeDriver"],[18,55,17,53],[19,2,18,0,"exports"],[19,9,18,7],[19,10,18,8,"transformDataType"],[19,27,18,25],[19,30,18,28,"transformDataType"],[19,47,18,45],[20,2,19,0,"exports"],[20,9,19,7],[20,10,19,8,"validateInterpolation"],[20,31,19,29],[20,34,19,32,"validateInterpolation"],[20,55,19,53],[21,2,20,0,"exports"],[21,9,20,7],[21,10,20,8,"validateStyles"],[21,24,20,22],[21,27,20,25,"validateStyles"],[21,41,20,39],[22,2,21,0,"exports"],[22,9,21,7],[22,10,21,8,"validateTransform"],[22,27,21,25],[22,30,21,28,"validateTransform"],[22,47,21,45],[23,2,22,0],[23,6,22,4,"_objectSpread2"],[23,20,22,18],[23,23,22,21,"_interopRequireDefault"],[23,45,22,43],[23,46,22,44,"require"],[23,53,22,51],[23,54,22,51,"_dependencyMap"],[23,68,22,51],[23,111,22,90],[23,112,22,91],[23,113,22,92],[24,2,23,0],[24,6,23,4,"_NativeAnimatedModule"],[24,27,23,25],[24,30,23,28,"_interopRequireDefault"],[24,52,23,50],[24,53,23,51,"require"],[24,60,23,58],[24,61,23,58,"_dependencyMap"],[24,75,23,58],[24,104,23,83],[24,105,23,84],[24,106,23,85],[25,2,24,0],[25,6,24,4,"_NativeAnimatedTurboModule"],[25,32,24,30],[25,35,24,33,"_interopRequireDefault"],[25,57,24,55],[25,58,24,56,"require"],[25,65,24,63],[25,66,24,63,"_dependencyMap"],[25,80,24,63],[25,114,24,93],[25,115,24,94],[25,116,24,95],[26,2,25,0],[26,6,25,4,"_NativeEventEmitter"],[26,25,25,23],[26,28,25,26,"_interopRequireDefault"],[26,50,25,48],[26,51,25,49,"require"],[26,58,25,56],[26,59,25,56,"_dependencyMap"],[26,73,25,56],[26,114,25,93],[26,115,25,94],[26,116,25,95],[27,2,26,0],[27,6,26,4,"_Platform"],[27,15,26,13],[27,18,26,16,"_interopRequireDefault"],[27,40,26,38],[27,41,26,39,"require"],[27,48,26,46],[27,49,26,46,"_dependencyMap"],[27,63,26,46],[27,91,26,70],[27,92,26,71],[27,93,26,72],[28,2,27,0],[28,6,27,4,"_ReactNativeFeatureFlags"],[28,30,27,28],[28,33,27,31,"_interopRequireDefault"],[28,55,27,53],[28,56,27,54,"require"],[28,63,27,61],[28,64,27,61,"_dependencyMap"],[28,78,27,61],[28,123,27,102],[28,124,27,103],[28,125,27,104],[29,2,28,0],[29,6,28,4,"_invariant"],[29,16,28,14],[29,19,28,17,"_interopRequireDefault"],[29,41,28,39],[29,42,28,40,"require"],[29,49,28,47],[29,50,28,47,"_dependencyMap"],[29,64,28,47],[29,89,28,68],[29,90,28,69],[29,91,28,70],[30,2,29,0],[30,6,29,4,"_RCTDeviceEventEmitter"],[30,28,29,26],[30,31,29,29,"_interopRequireDefault"],[30,53,29,51],[30,54,29,52,"require"],[30,61,29,59],[30,62,29,59,"_dependencyMap"],[30,76,29,59],[30,120,29,99],[30,121,29,100],[30,122,29,101],[31,2,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[41,2,40,0],[42,2,41,0],[42,6,41,4,"NativeAnimatedModule"],[42,26,41,24],[42,29,41,27,"_Platform"],[42,38,41,36],[42,39,41,37,"default"],[42,46,41,44],[42,47,41,45,"OS"],[42,49,41,47],[42,54,41,52],[42,59,41,57],[42,63,41,61,"global"],[42,69,41,67],[42,70,41,68,"RN$Bridgeless"],[42,83,41,81],[42,88,41,86],[42,92,41,90],[42,95,41,93,"_NativeAnimatedTurboModule"],[42,121,41,119],[42,122,41,120,"default"],[42,129,41,127],[42,132,41,130,"_NativeAnimatedModule"],[42,153,41,151],[42,154,41,152,"default"],[42,161,41,159],[43,2,42,0],[43,6,42,4,"__nativeAnimatedNodeTagCount"],[43,34,42,32],[43,37,42,35],[43,38,42,36],[43,39,42,37],[43,40,42,38],[44,2,43,0],[44,6,43,4,"__nativeAnimationIdCount"],[44,30,43,28],[44,33,43,31],[44,34,43,32],[44,35,43,33],[44,36,43,34],[46,2,45,0],[46,6,45,4,"nativeEventEmitter"],[46,24,45,22],[47,2,46,0],[47,6,46,4,"waitingForQueuedOperations"],[47,32,46,30],[47,35,46,33],[47,39,46,37,"Set"],[47,42,46,40],[47,43,46,41],[47,44,46,42],[48,2,47,0],[48,6,47,4,"queueOperations"],[48,21,47,19],[48,24,47,22],[48,29,47,27],[49,2,48,0],[49,6,48,4,"queue"],[49,11,48,9],[49,14,48,12],[49,16,48,14],[50,2,49,0],[51,2,50,0],[51,6,50,4,"singleOpQueue"],[51,19,50,17],[51,22,50,20],[51,24,50,22],[52,2,51,0],[52,6,51,4,"useSingleOpBatching"],[52,25,51,23],[52,28,51,26],[52,33,51,31],[53,2,52,0,"_Platform"],[53,11,52,9],[53,12,52,10,"default"],[53,19,52,17],[53,20,52,18,"OS"],[53,22,52,20],[53,27,52,25],[53,36,52,34],[53,40,52,38],[53,41,52,39],[53,43,52,41,"NativeAnimatedModule"],[53,63,52,61],[53,67,52,65],[53,71,52,69],[53,75,52,73,"NativeAnimatedModule"],[53,95,52,93],[53,96,52,94,"queueAndExecuteBatchedOperations"],[53,128,52,126],[53,129,52,127],[53,133,52,131,"_ReactNativeFeatureFlags"],[53,157,52,155],[53,158,52,156,"default"],[53,165,52,163],[53,166,52,164,"animatedShouldUseSingleOp"],[53,191,52,189],[53,192,52,190],[53,193,52,191],[54,2,53,0],[54,6,53,4,"flushQueueTimeout"],[54,23,53,21],[54,26,53,24],[54,30,53,28],[55,2,54,0],[55,6,54,4,"eventListenerGetValueCallbacks"],[55,36,54,34],[55,39,54,37],[55,40,54,38],[55,41,54,39],[56,2,55,0],[56,6,55,4,"eventListenerAnimationFinishedCallbacks"],[56,45,55,43],[56,48,55,46],[56,49,55,47],[56,50,55,48],[57,2,56,0],[57,6,56,4,"globalEventEmitterGetValueListener"],[57,40,56,38],[57,43,56,41],[57,47,56,45],[58,2,57,0],[58,6,57,4,"globalEventEmitterAnimationFinishedListener"],[58,49,57,47],[58,52,57,50],[58,56,57,54],[59,2,58,0],[59,6,58,4,"nativeOps"],[59,15,58,13],[59,18,58,16,"useSingleOpBatching"],[59,37,58,35],[59,40,58,38],[59,52,58,50],[60,4,59,2],[60,8,59,6,"apis"],[60,12,59,10],[60,15,59,13],[60,16,59,14],[60,36,59,34],[61,4,60,2],[62,4,61,2],[62,30,61,28],[63,4,62,2],[64,4,63,2],[64,14,63,12],[65,4,64,2],[66,4,65,2],[66,39,65,37],[67,4,66,2],[68,4,67,2],[68,38,67,36],[69,4,68,2],[70,4,69,2],[70,26,69,24],[71,4,70,2],[72,4,71,2],[72,29,71,27],[73,4,72,2],[74,4,73,2],[74,24,73,22],[75,4,74,2],[76,4,75,2],[76,19,75,17],[77,4,76,2],[78,4,77,2],[78,26,77,24],[79,4,78,2],[80,4,79,2],[80,27,79,25],[81,4,80,2],[82,4,81,2],[82,31,81,29],[83,4,82,2],[84,4,83,2],[84,31,83,29],[85,4,84,2],[86,4,85,2],[86,31,85,29],[87,4,86,2],[88,4,87,2],[88,36,87,34],[89,4,88,2],[90,4,89,2],[90,26,89,24],[91,4,90,2],[92,4,91,2],[92,22,91,20],[93,4,92,2],[94,4,93,2],[94,28,93,26],[95,4,94,2],[96,4,95,2],[96,33,95,31],[97,4,96,2],[98,4,97,2],[98,17,97,15],[99,4,98,2],[100,4,99,2],[100,20,99,18],[100,21,99,19],[101,4,99,19],[101,5,100,3],[102,4,101,2],[102,11,101,9,"apis"],[102,15,101,13],[102,16,101,14,"reduce"],[102,22,101,20],[102,23,101,21],[102,33,101,22,"acc"],[102,36,101,25],[102,38,101,27,"functionName"],[102,50,101,39],[102,52,101,41,"i"],[102,53,101,42],[102,55,101,47],[103,6,102,4],[104,6,103,4],[105,6,104,4,"acc"],[105,9,104,7],[105,10,104,8,"functionName"],[105,22,104,20],[105,23,104,21],[105,26,104,24,"i"],[105,27,104,25],[105,30,104,28],[105,31,104,29],[106,6,105,4],[106,13,105,11,"acc"],[106,16,105,14],[107,4,106,2],[107,5,106,3],[107,7,106,5],[107,8,106,6],[107,9,106,7],[107,10,106,8],[108,2,107,0],[108,3,107,1],[108,4,107,2],[108,5,107,3],[108,8,107,6,"NativeAnimatedModule"],[108,28,107,26],[110,2,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,2,113,0],[114,6,113,4,"API"],[114,9,113,7],[114,12,113,10,"exports"],[114,19,113,17],[114,20,113,18,"API"],[114,23,113,21],[114,26,113,24],[115,4,114,2,"getValue"],[115,12,114,10],[115,14,114,12],[115,23,114,21,"getValue"],[115,31,114,29,"getValue"],[115,32,114,30,"tag"],[115,35,114,33],[115,37,114,35,"saveValueCallback"],[115,54,114,52],[115,56,114,54],[116,6,115,4],[116,7,115,5],[116,8,115,6],[116,10,115,8,"_invariant"],[116,20,115,18],[116,21,115,19,"default"],[116,28,115,26],[116,30,115,28,"nativeOps"],[116,39,115,37],[116,41,115,39],[116,82,115,80],[116,83,115,81],[117,6,116,4],[117,10,116,8,"useSingleOpBatching"],[117,29,116,27],[117,31,116,29],[118,8,117,6],[118,12,117,10,"saveValueCallback"],[118,29,117,27],[118,31,117,29],[119,10,118,8,"eventListenerGetValueCallbacks"],[119,40,118,38],[119,41,118,39,"tag"],[119,44,118,42],[119,45,118,43],[119,48,118,46,"saveValueCallback"],[119,65,118,63],[120,8,119,6],[121,8,120,6],[122,8,121,6,"API"],[122,11,121,9],[122,12,121,10,"queueOperation"],[122,26,121,24],[122,27,121,25,"nativeOps"],[122,36,121,34],[122,37,121,35,"getValue"],[122,45,121,43],[122,47,121,45,"tag"],[122,50,121,48],[122,51,121,49],[123,6,122,4],[123,7,122,5],[123,13,122,11],[124,8,123,6,"API"],[124,11,123,9],[124,12,123,10,"queueOperation"],[124,26,123,24],[124,27,123,25,"nativeOps"],[124,36,123,34],[124,37,123,35,"getValue"],[124,45,123,43],[124,47,123,45,"tag"],[124,50,123,48],[124,52,123,50,"saveValueCallback"],[124,69,123,67],[124,70,123,68],[125,6,124,4],[126,4,125,2],[126,5,125,3],[127,4,126,2,"setWaitingForIdentifier"],[127,27,126,25],[127,29,126,27],[127,38,126,36,"setWaitingForIdentifier"],[127,61,126,59,"setWaitingForIdentifier"],[127,62,126,60,"id"],[127,64,126,62],[127,66,126,64],[128,6,127,4,"waitingForQueuedOperations"],[128,32,127,30],[128,33,127,31,"add"],[128,36,127,34],[128,37,127,35,"id"],[128,39,127,37],[128,40,127,38],[129,6,128,4,"queueOperations"],[129,21,128,19],[129,24,128,22],[129,28,128,26],[130,6,129,4],[130,10,129,8,"_ReactNativeFeatureFlags"],[130,34,129,32],[130,35,129,33,"default"],[130,42,129,40],[130,43,129,41,"animatedShouldDebounceQueueFlush"],[130,75,129,73],[130,76,129,74],[130,77,129,75],[130,81,129,79,"flushQueueTimeout"],[130,98,129,96],[130,100,129,98],[131,8,130,6,"clearTimeout"],[131,20,130,18],[131,21,130,19,"flushQueueTimeout"],[131,38,130,36],[131,39,130,37],[132,6,131,4],[133,4,132,2],[133,5,132,3],[134,4,133,2,"unsetWaitingForIdentifier"],[134,29,133,27],[134,31,133,29],[134,40,133,38,"unsetWaitingForIdentifier"],[134,65,133,63,"unsetWaitingForIdentifier"],[134,66,133,64,"id"],[134,68,133,66],[134,70,133,68],[135,6,134,4,"waitingForQueuedOperations"],[135,32,134,30],[135,33,134,31,"delete"],[135,39,134,37],[135,40,134,38,"id"],[135,42,134,40],[135,43,134,41],[136,6,135,4],[136,10,135,8,"waitingForQueuedOperations"],[136,36,135,34],[136,37,135,35,"size"],[136,41,135,39],[136,46,135,44],[136,47,135,45],[136,49,135,47],[137,8,136,6,"queueOperations"],[137,23,136,21],[137,26,136,24],[137,31,136,29],[138,8,137,6,"API"],[138,11,137,9],[138,12,137,10,"disableQueue"],[138,24,137,22],[138,25,137,23],[138,26,137,24],[139,6,138,4],[140,4,139,2],[140,5,139,3],[141,4,140,2,"disableQueue"],[141,16,140,14],[141,18,140,16],[141,27,140,25,"disableQueue"],[141,39,140,37,"disableQueue"],[141,40,140,37],[141,42,140,40],[142,6,141,4],[142,7,141,5],[142,8,141,6],[142,10,141,8,"_invariant"],[142,20,141,18],[142,21,141,19,"default"],[142,28,141,26],[142,30,141,28,"nativeOps"],[142,39,141,37],[142,41,141,39],[142,82,141,80],[142,83,141,81],[143,6,142,4],[143,10,142,8,"_ReactNativeFeatureFlags"],[143,34,142,32],[143,35,142,33,"default"],[143,42,142,40],[143,43,142,41,"animatedShouldDebounceQueueFlush"],[143,75,142,73],[143,76,142,74],[143,77,142,75],[143,79,142,77],[144,8,143,6],[144,12,143,10,"prevTimeout"],[144,23,143,21],[144,26,143,24,"flushQueueTimeout"],[144,43,143,41],[145,8,144,6,"clearImmediate"],[145,22,144,20],[145,23,144,21,"prevTimeout"],[145,34,144,32],[145,35,144,33],[146,8,145,6,"flushQueueTimeout"],[146,25,145,23],[146,28,145,26,"setImmediate"],[146,40,145,38],[146,41,145,39,"API"],[146,44,145,42],[146,45,145,43,"flushQueue"],[146,55,145,53],[146,56,145,54],[147,6,146,4],[147,7,146,5],[147,13,146,11],[148,8,147,6,"API"],[148,11,147,9],[148,12,147,10,"flushQueue"],[148,22,147,20],[148,23,147,21],[148,24,147,22],[149,6,148,4],[150,4,149,2],[150,5,149,3],[151,4,150,2,"flushQueue"],[151,14,150,12],[151,16,150,14],[151,25,150,23,"flushQueue"],[151,35,150,33,"flushQueue"],[151,36,150,33],[151,38,150,36],[152,6,151,4],[153,0,152,0],[154,0,153,0],[155,0,154,0],[156,0,155,0],[157,0,156,0],[158,0,157,0],[159,0,158,0],[160,0,159,0],[161,0,160,0],[162,0,161,0],[163,0,162,0],[164,0,163,0],[165,0,164,0],[166,0,165,0],[167,0,166,0],[168,0,167,0],[169,0,168,0],[170,0,169,0],[171,0,170,0],[172,0,171,0],[173,0,172,0],[174,0,173,0],[175,0,174,0],[176,0,175,0],[177,0,176,0],[178,0,177,0],[179,0,178,0],[180,0,179,0],[181,0,180,0],[182,0,181,0],[183,0,182,0],[184,0,183,0],[185,0,184,0],[186,4,151,4],[186,5,185,3],[187,4,186,2,"queueOperation"],[187,18,186,16],[187,20,186,18],[187,29,186,27,"queueOperation"],[187,43,186,41,"queueOperation"],[187,44,186,42,"fn"],[187,46,186,44],[187,48,186,46],[188,6,187,4],[188,11,187,9],[188,15,187,13,"_len"],[188,19,187,17],[188,22,187,20,"arguments"],[188,31,187,29],[188,32,187,30,"length"],[188,38,187,36],[188,40,187,38,"args"],[188,44,187,42],[188,47,187,45],[188,51,187,49,"Array"],[188,56,187,54],[188,57,187,55,"_len"],[188,61,187,59],[188,64,187,62],[188,65,187,63],[188,68,187,66,"_len"],[188,72,187,70],[188,75,187,73],[188,76,187,74],[188,79,187,77],[188,80,187,78],[188,81,187,79],[188,83,187,81,"_key"],[188,87,187,85],[188,90,187,88],[188,91,187,89],[188,93,187,91,"_key"],[188,97,187,95],[188,100,187,98,"_len"],[188,104,187,102],[188,106,187,104,"_key"],[188,110,187,108],[188,112,187,110],[188,114,187,112],[189,8,188,6,"args"],[189,12,188,10],[189,13,188,11,"_key"],[189,17,188,15],[189,20,188,18],[189,21,188,19],[189,22,188,20],[189,25,188,23,"arguments"],[189,34,188,32],[189,35,188,33,"_key"],[189,39,188,37],[189,40,188,38],[190,6,189,4],[191,6,190,4],[191,10,190,8,"useSingleOpBatching"],[191,29,190,27],[191,31,190,29],[192,8,191,6],[193,8,192,6],[194,8,193,6,"singleOpQueue"],[194,21,193,19],[194,22,193,20,"push"],[194,26,193,24],[194,27,193,24,"apply"],[194,32,193,24],[194,33,193,6,"singleOpQueue"],[194,46,193,19],[194,49,193,25,"fn"],[194,51,193,27],[194,53,193,27,"concat"],[194,59,193,27],[194,60,193,32,"args"],[194,64,193,36],[194,66,193,37],[195,8,194,6],[196,6,195,4],[198,6,197,4],[199,6,198,4],[200,6,199,4],[201,6,200,4],[201,10,200,8,"queueOperations"],[201,25,200,23],[201,29,200,27,"queue"],[201,34,200,32],[201,35,200,33,"length"],[201,41,200,39],[201,46,200,44],[201,47,200,45],[201,49,200,47],[202,8,201,6,"queue"],[202,13,201,11],[202,14,201,12,"push"],[202,18,201,16],[202,19,201,17],[203,10,201,17],[203,17,201,23,"fn"],[203,19,201,25],[203,20,201,25,"apply"],[203,25,201,25],[203,34,201,29,"args"],[203,38,201,33],[203,39,201,34],[204,8,201,34],[204,10,201,35],[205,6,202,4],[205,7,202,5],[205,13,202,11],[206,8,203,6,"fn"],[206,10,203,8],[206,11,203,8,"apply"],[206,16,203,8],[206,25,203,12,"args"],[206,29,203,16],[206,30,203,17],[207,6,204,4],[208,4,205,2],[208,5,205,3],[209,4,206,2,"createAnimatedNode"],[209,22,206,20],[209,24,206,22],[209,33,206,31,"createAnimatedNode"],[209,51,206,49,"createAnimatedNode"],[209,52,206,50,"tag"],[209,55,206,53],[209,57,206,55,"config"],[209,63,206,61],[209,65,206,63],[210,6,207,4],[210,7,207,5],[210,8,207,6],[210,10,207,8,"_invariant"],[210,20,207,18],[210,21,207,19,"default"],[210,28,207,26],[210,30,207,28,"nativeOps"],[210,39,207,37],[210,41,207,39],[210,82,207,80],[210,83,207,81],[211,6,208,4,"API"],[211,9,208,7],[211,10,208,8,"queueOperation"],[211,24,208,22],[211,25,208,23,"nativeOps"],[211,34,208,32],[211,35,208,33,"createAnimatedNode"],[211,53,208,51],[211,55,208,53,"tag"],[211,58,208,56],[211,60,208,58,"config"],[211,66,208,64],[211,67,208,65],[212,4,209,2],[212,5,209,3],[213,4,210,2,"updateAnimatedNodeConfig"],[213,28,210,26],[213,30,210,28],[213,39,210,37,"updateAnimatedNodeConfig"],[213,63,210,61,"updateAnimatedNodeConfig"],[213,64,210,62,"tag"],[213,67,210,65],[213,69,210,67,"config"],[213,75,210,73],[213,77,210,75],[214,6,211,4],[214,7,211,5],[214,8,211,6],[214,10,211,8,"_invariant"],[214,20,211,18],[214,21,211,19,"default"],[214,28,211,26],[214,30,211,28,"nativeOps"],[214,39,211,37],[214,41,211,39],[214,82,211,80],[214,83,211,81],[215,6,212,4],[216,6,213,4],[217,6,214,4],[218,4,215,2],[218,5,215,3],[219,4,216,2,"startListeningToAnimatedNodeValue"],[219,37,216,35],[219,39,216,37],[219,48,216,46,"startListeningToAnimatedNodeValue"],[219,81,216,79,"startListeningToAnimatedNodeValue"],[219,82,216,80,"tag"],[219,85,216,83],[219,87,216,85],[220,6,217,4],[220,7,217,5],[220,8,217,6],[220,10,217,8,"_invariant"],[220,20,217,18],[220,21,217,19,"default"],[220,28,217,26],[220,30,217,28,"nativeOps"],[220,39,217,37],[220,41,217,39],[220,82,217,80],[220,83,217,81],[221,6,218,4,"API"],[221,9,218,7],[221,10,218,8,"queueOperation"],[221,24,218,22],[221,25,218,23,"nativeOps"],[221,34,218,32],[221,35,218,33,"startListeningToAnimatedNodeValue"],[221,68,218,66],[221,70,218,68,"tag"],[221,73,218,71],[221,74,218,72],[222,4,219,2],[222,5,219,3],[223,4,220,2,"stopListeningToAnimatedNodeValue"],[223,36,220,34],[223,38,220,36],[223,47,220,45,"stopListeningToAnimatedNodeValue"],[223,79,220,77,"stopListeningToAnimatedNodeValue"],[223,80,220,78,"tag"],[223,83,220,81],[223,85,220,83],[224,6,221,4],[224,7,221,5],[224,8,221,6],[224,10,221,8,"_invariant"],[224,20,221,18],[224,21,221,19,"default"],[224,28,221,26],[224,30,221,28,"nativeOps"],[224,39,221,37],[224,41,221,39],[224,82,221,80],[224,83,221,81],[225,6,222,4,"API"],[225,9,222,7],[225,10,222,8,"queueOperation"],[225,24,222,22],[225,25,222,23,"nativeOps"],[225,34,222,32],[225,35,222,33,"stopListeningToAnimatedNodeValue"],[225,67,222,65],[225,69,222,67,"tag"],[225,72,222,70],[225,73,222,71],[226,4,223,2],[226,5,223,3],[227,4,224,2,"connectAnimatedNodes"],[227,24,224,22],[227,26,224,24],[227,35,224,33,"connectAnimatedNodes"],[227,55,224,53,"connectAnimatedNodes"],[227,56,224,54,"parentTag"],[227,65,224,63],[227,67,224,65,"childTag"],[227,75,224,73],[227,77,224,75],[228,6,225,4],[228,7,225,5],[228,8,225,6],[228,10,225,8,"_invariant"],[228,20,225,18],[228,21,225,19,"default"],[228,28,225,26],[228,30,225,28,"nativeOps"],[228,39,225,37],[228,41,225,39],[228,82,225,80],[228,83,225,81],[229,6,226,4,"API"],[229,9,226,7],[229,10,226,8,"queueOperation"],[229,24,226,22],[229,25,226,23,"nativeOps"],[229,34,226,32],[229,35,226,33,"connectAnimatedNodes"],[229,55,226,53],[229,57,226,55,"parentTag"],[229,66,226,64],[229,68,226,66,"childTag"],[229,76,226,74],[229,77,226,75],[230,4,227,2],[230,5,227,3],[231,4,228,2,"disconnectAnimatedNodes"],[231,27,228,25],[231,29,228,27],[231,38,228,36,"disconnectAnimatedNodes"],[231,61,228,59,"disconnectAnimatedNodes"],[231,62,228,60,"parentTag"],[231,71,228,69],[231,73,228,71,"childTag"],[231,81,228,79],[231,83,228,81],[232,6,229,4],[232,7,229,5],[232,8,229,6],[232,10,229,8,"_invariant"],[232,20,229,18],[232,21,229,19,"default"],[232,28,229,26],[232,30,229,28,"nativeOps"],[232,39,229,37],[232,41,229,39],[232,82,229,80],[232,83,229,81],[233,6,230,4,"API"],[233,9,230,7],[233,10,230,8,"queueOperation"],[233,24,230,22],[233,25,230,23,"nativeOps"],[233,34,230,32],[233,35,230,33,"disconnectAnimatedNodes"],[233,58,230,56],[233,60,230,58,"parentTag"],[233,69,230,67],[233,71,230,69,"childTag"],[233,79,230,77],[233,80,230,78],[234,4,231,2],[234,5,231,3],[235,4,232,2,"startAnimatingNode"],[235,22,232,20],[235,24,232,22],[235,33,232,31,"startAnimatingNode"],[235,51,232,49,"startAnimatingNode"],[235,52,232,50,"animationId"],[235,63,232,61],[235,65,232,63,"nodeTag"],[235,72,232,70],[235,74,232,72,"config"],[235,80,232,78],[235,82,232,80,"endCallback"],[235,93,232,91],[235,95,232,93],[236,6,233,4],[236,7,233,5],[236,8,233,6],[236,10,233,8,"_invariant"],[236,20,233,18],[236,21,233,19,"default"],[236,28,233,26],[236,30,233,28,"nativeOps"],[236,39,233,37],[236,41,233,39],[236,82,233,80],[236,83,233,81],[237,6,234,4],[237,10,234,8,"useSingleOpBatching"],[237,29,234,27],[237,31,234,29],[238,8,235,6],[238,12,235,10,"endCallback"],[238,23,235,21],[238,25,235,23],[239,10,236,8,"eventListenerAnimationFinishedCallbacks"],[239,49,236,47],[239,50,236,48,"animationId"],[239,61,236,59],[239,62,236,60],[239,65,236,63,"endCallback"],[239,76,236,74],[240,8,237,6],[241,8,238,6],[242,8,239,6,"API"],[242,11,239,9],[242,12,239,10,"queueOperation"],[242,26,239,24],[242,27,239,25,"nativeOps"],[242,36,239,34],[242,37,239,35,"startAnimatingNode"],[242,55,239,53],[242,57,239,55,"animationId"],[242,68,239,66],[242,70,239,68,"nodeTag"],[242,77,239,75],[242,79,239,77,"config"],[242,85,239,83],[242,86,239,84],[243,6,240,4],[243,7,240,5],[243,13,240,11],[244,8,241,6,"API"],[244,11,241,9],[244,12,241,10,"queueOperation"],[244,26,241,24],[244,27,241,25,"nativeOps"],[244,36,241,34],[244,37,241,35,"startAnimatingNode"],[244,55,241,53],[244,57,241,55,"animationId"],[244,68,241,66],[244,70,241,68,"nodeTag"],[244,77,241,75],[244,79,241,77,"config"],[244,85,241,83],[244,87,241,85,"endCallback"],[244,98,241,96],[244,99,241,97],[245,6,242,4],[246,4,243,2],[246,5,243,3],[247,4,244,2,"stopAnimation"],[247,17,244,15],[247,19,244,17],[247,28,244,26,"stopAnimation"],[247,41,244,39,"stopAnimation"],[247,42,244,40,"animationId"],[247,53,244,51],[247,55,244,53],[248,6,245,4],[248,7,245,5],[248,8,245,6],[248,10,245,8,"_invariant"],[248,20,245,18],[248,21,245,19,"default"],[248,28,245,26],[248,30,245,28,"nativeOps"],[248,39,245,37],[248,41,245,39],[248,82,245,80],[248,83,245,81],[249,6,246,4,"API"],[249,9,246,7],[249,10,246,8,"queueOperation"],[249,24,246,22],[249,25,246,23,"nativeOps"],[249,34,246,32],[249,35,246,33,"stopAnimation"],[249,48,246,46],[249,50,246,48,"animationId"],[249,61,246,59],[249,62,246,60],[250,4,247,2],[250,5,247,3],[251,4,248,2,"setAnimatedNodeValue"],[251,24,248,22],[251,26,248,24],[251,35,248,33,"setAnimatedNodeValue"],[251,55,248,53,"setAnimatedNodeValue"],[251,56,248,54,"nodeTag"],[251,63,248,61],[251,65,248,63,"value"],[251,70,248,68],[251,72,248,70],[252,6,249,4],[252,7,249,5],[252,8,249,6],[252,10,249,8,"_invariant"],[252,20,249,18],[252,21,249,19,"default"],[252,28,249,26],[252,30,249,28,"nativeOps"],[252,39,249,37],[252,41,249,39],[252,82,249,80],[252,83,249,81],[253,6,250,4,"API"],[253,9,250,7],[253,10,250,8,"queueOperation"],[253,24,250,22],[253,25,250,23,"nativeOps"],[253,34,250,32],[253,35,250,33,"setAnimatedNodeValue"],[253,55,250,53],[253,57,250,55,"nodeTag"],[253,64,250,62],[253,66,250,64,"value"],[253,71,250,69],[253,72,250,70],[254,4,251,2],[254,5,251,3],[255,4,252,2,"setAnimatedNodeOffset"],[255,25,252,23],[255,27,252,25],[255,36,252,34,"setAnimatedNodeOffset"],[255,57,252,55,"setAnimatedNodeOffset"],[255,58,252,56,"nodeTag"],[255,65,252,63],[255,67,252,65,"offset"],[255,73,252,71],[255,75,252,73],[256,6,253,4],[256,7,253,5],[256,8,253,6],[256,10,253,8,"_invariant"],[256,20,253,18],[256,21,253,19,"default"],[256,28,253,26],[256,30,253,28,"nativeOps"],[256,39,253,37],[256,41,253,39],[256,82,253,80],[256,83,253,81],[257,6,254,4,"API"],[257,9,254,7],[257,10,254,8,"queueOperation"],[257,24,254,22],[257,25,254,23,"nativeOps"],[257,34,254,32],[257,35,254,33,"setAnimatedNodeOffset"],[257,56,254,54],[257,58,254,56,"nodeTag"],[257,65,254,63],[257,67,254,65,"offset"],[257,73,254,71],[257,74,254,72],[258,4,255,2],[258,5,255,3],[259,4,256,2,"flattenAnimatedNodeOffset"],[259,29,256,27],[259,31,256,29],[259,40,256,38,"flattenAnimatedNodeOffset"],[259,65,256,63,"flattenAnimatedNodeOffset"],[259,66,256,64,"nodeTag"],[259,73,256,71],[259,75,256,73],[260,6,257,4],[260,7,257,5],[260,8,257,6],[260,10,257,8,"_invariant"],[260,20,257,18],[260,21,257,19,"default"],[260,28,257,26],[260,30,257,28,"nativeOps"],[260,39,257,37],[260,41,257,39],[260,82,257,80],[260,83,257,81],[261,6,258,4,"API"],[261,9,258,7],[261,10,258,8,"queueOperation"],[261,24,258,22],[261,25,258,23,"nativeOps"],[261,34,258,32],[261,35,258,33,"flattenAnimatedNodeOffset"],[261,60,258,58],[261,62,258,60,"nodeTag"],[261,69,258,67],[261,70,258,68],[262,4,259,2],[262,5,259,3],[263,4,260,2,"extractAnimatedNodeOffset"],[263,29,260,27],[263,31,260,29],[263,40,260,38,"extractAnimatedNodeOffset"],[263,65,260,63,"extractAnimatedNodeOffset"],[263,66,260,64,"nodeTag"],[263,73,260,71],[263,75,260,73],[264,6,261,4],[264,7,261,5],[264,8,261,6],[264,10,261,8,"_invariant"],[264,20,261,18],[264,21,261,19,"default"],[264,28,261,26],[264,30,261,28,"nativeOps"],[264,39,261,37],[264,41,261,39],[264,82,261,80],[264,83,261,81],[265,6,262,4,"API"],[265,9,262,7],[265,10,262,8,"queueOperation"],[265,24,262,22],[265,25,262,23,"nativeOps"],[265,34,262,32],[265,35,262,33,"extractAnimatedNodeOffset"],[265,60,262,58],[265,62,262,60,"nodeTag"],[265,69,262,67],[265,70,262,68],[266,4,263,2],[266,5,263,3],[267,4,264,2,"connectAnimatedNodeToView"],[267,29,264,27],[267,31,264,29],[267,40,264,38,"connectAnimatedNodeToView"],[267,65,264,63,"connectAnimatedNodeToView"],[267,66,264,64,"nodeTag"],[267,73,264,71],[267,75,264,73,"viewTag"],[267,82,264,80],[267,84,264,82],[268,6,265,4],[268,7,265,5],[268,8,265,6],[268,10,265,8,"_invariant"],[268,20,265,18],[268,21,265,19,"default"],[268,28,265,26],[268,30,265,28,"nativeOps"],[268,39,265,37],[268,41,265,39],[268,82,265,80],[268,83,265,81],[269,6,266,4,"API"],[269,9,266,7],[269,10,266,8,"queueOperation"],[269,24,266,22],[269,25,266,23,"nativeOps"],[269,34,266,32],[269,35,266,33,"connectAnimatedNodeToView"],[269,60,266,58],[269,62,266,60,"nodeTag"],[269,69,266,67],[269,71,266,69,"viewTag"],[269,78,266,76],[269,79,266,77],[270,4,267,2],[270,5,267,3],[271,4,268,2,"disconnectAnimatedNodeFromView"],[271,34,268,32],[271,36,268,34],[271,45,268,43,"disconnectAnimatedNodeFromView"],[271,75,268,73,"disconnectAnimatedNodeFromView"],[271,76,268,74,"nodeTag"],[271,83,268,81],[271,85,268,83,"viewTag"],[271,92,268,90],[271,94,268,92],[272,6,269,4],[272,7,269,5],[272,8,269,6],[272,10,269,8,"_invariant"],[272,20,269,18],[272,21,269,19,"default"],[272,28,269,26],[272,30,269,28,"nativeOps"],[272,39,269,37],[272,41,269,39],[272,82,269,80],[272,83,269,81],[273,6,270,4,"API"],[273,9,270,7],[273,10,270,8,"queueOperation"],[273,24,270,22],[273,25,270,23,"nativeOps"],[273,34,270,32],[273,35,270,33,"disconnectAnimatedNodeFromView"],[273,65,270,63],[273,67,270,65,"nodeTag"],[273,74,270,72],[273,76,270,74,"viewTag"],[273,83,270,81],[273,84,270,82],[274,4,271,2],[274,5,271,3],[275,4,272,2,"restoreDefaultValues"],[275,24,272,22],[275,26,272,24],[275,35,272,33,"restoreDefaultValues"],[275,55,272,53,"restoreDefaultValues"],[275,56,272,54,"nodeTag"],[275,63,272,61],[275,65,272,63],[276,6,273,4],[276,7,273,5],[276,8,273,6],[276,10,273,8,"_invariant"],[276,20,273,18],[276,21,273,19,"default"],[276,28,273,26],[276,30,273,28,"nativeOps"],[276,39,273,37],[276,41,273,39],[276,82,273,80],[276,83,273,81],[277,6,274,4],[278,6,275,4],[278,10,275,8,"nativeOps"],[278,19,275,17],[278,20,275,18,"restoreDefaultValues"],[278,40,275,38],[278,44,275,42],[278,48,275,46],[278,50,275,48],[279,8,276,6,"API"],[279,11,276,9],[279,12,276,10,"queueOperation"],[279,26,276,24],[279,27,276,25,"nativeOps"],[279,36,276,34],[279,37,276,35,"restoreDefaultValues"],[279,57,276,55],[279,59,276,57,"nodeTag"],[279,66,276,64],[279,67,276,65],[280,6,277,4],[281,4,278,2],[281,5,278,3],[282,4,279,2,"dropAnimatedNode"],[282,20,279,18],[282,22,279,20],[282,31,279,29,"dropAnimatedNode"],[282,47,279,45,"dropAnimatedNode"],[282,48,279,46,"tag"],[282,51,279,49],[282,53,279,51],[283,6,280,4],[283,7,280,5],[283,8,280,6],[283,10,280,8,"_invariant"],[283,20,280,18],[283,21,280,19,"default"],[283,28,280,26],[283,30,280,28,"nativeOps"],[283,39,280,37],[283,41,280,39],[283,82,280,80],[283,83,280,81],[284,6,281,4,"API"],[284,9,281,7],[284,10,281,8,"queueOperation"],[284,24,281,22],[284,25,281,23,"nativeOps"],[284,34,281,32],[284,35,281,33,"dropAnimatedNode"],[284,51,281,49],[284,53,281,51,"tag"],[284,56,281,54],[284,57,281,55],[285,4,282,2],[285,5,282,3],[286,4,283,2,"addAnimatedEventToView"],[286,26,283,24],[286,28,283,26],[286,37,283,35,"addAnimatedEventToView"],[286,59,283,57,"addAnimatedEventToView"],[286,60,283,58,"viewTag"],[286,67,283,65],[286,69,283,67,"eventName"],[286,78,283,76],[286,80,283,78,"eventMapping"],[286,92,283,90],[286,94,283,92],[287,6,284,4],[287,7,284,5],[287,8,284,6],[287,10,284,8,"_invariant"],[287,20,284,18],[287,21,284,19,"default"],[287,28,284,26],[287,30,284,28,"nativeOps"],[287,39,284,37],[287,41,284,39],[287,82,284,80],[287,83,284,81],[288,6,285,4,"API"],[288,9,285,7],[288,10,285,8,"queueOperation"],[288,24,285,22],[288,25,285,23,"nativeOps"],[288,34,285,32],[288,35,285,33,"addAnimatedEventToView"],[288,57,285,55],[288,59,285,57,"viewTag"],[288,66,285,64],[288,68,285,66,"eventName"],[288,77,285,75],[288,79,285,77,"eventMapping"],[288,91,285,89],[288,92,285,90],[289,4,286,2],[289,5,286,3],[290,4,287,2,"removeAnimatedEventFromView"],[290,31,287,29],[290,42,287,2,"removeAnimatedEventFromView"],[290,69,287,29,"removeAnimatedEventFromView"],[290,70,287,30,"viewTag"],[290,77,287,37],[290,79,287,39,"eventName"],[290,88,287,48],[290,90,287,50,"animatedNodeTag"],[290,105,287,65],[290,107,287,67],[291,6,288,4],[291,7,288,5],[291,8,288,6],[291,10,288,8,"_invariant"],[291,20,288,18],[291,21,288,19,"default"],[291,28,288,26],[291,30,288,28,"nativeOps"],[291,39,288,37],[291,41,288,39],[291,82,288,80],[291,83,288,81],[292,6,289,4,"API"],[292,9,289,7],[292,10,289,8,"queueOperation"],[292,24,289,22],[292,25,289,23,"nativeOps"],[292,34,289,32],[292,35,289,33,"removeAnimatedEventFromView"],[292,62,289,60],[292,64,289,62,"viewTag"],[292,71,289,69],[292,73,289,71,"eventName"],[292,82,289,80],[292,84,289,82,"animatedNodeTag"],[292,99,289,97],[292,100,289,98],[293,4,290,2],[294,2,291,0],[294,3,291,1],[295,2,292,0],[295,11,292,9,"setupGlobalEventEmitterListeners"],[295,43,292,41,"setupGlobalEventEmitterListeners"],[295,44,292,41],[295,46,292,44],[296,4,293,2,"globalEventEmitterGetValueListener"],[296,38,293,36],[296,41,293,39,"_RCTDeviceEventEmitter"],[296,63,293,61],[296,64,293,62,"default"],[296,71,293,69],[296,72,293,70,"addListener"],[296,83,293,81],[296,84,293,82],[296,116,293,114],[296,118,293,116],[296,128,293,126,"params"],[296,134,293,132],[296,136,293,134],[297,6,294,4],[297,10,294,8,"tag"],[297,13,294,11],[297,16,294,14,"params"],[297,22,294,20],[297,23,294,21,"tag"],[297,26,294,24],[298,6,295,4],[298,10,295,8,"callback"],[298,18,295,16],[298,21,295,19,"eventListenerGetValueCallbacks"],[298,51,295,49],[298,52,295,50,"tag"],[298,55,295,53],[298,56,295,54],[299,6,296,4],[299,10,296,8],[299,11,296,9,"callback"],[299,19,296,17],[299,21,296,19],[300,8,297,6],[301,6,298,4],[302,6,299,4,"callback"],[302,14,299,12],[302,15,299,13,"params"],[302,21,299,19],[302,22,299,20,"value"],[302,27,299,25],[302,28,299,26],[303,6,300,4],[303,13,300,11,"eventListenerGetValueCallbacks"],[303,43,300,41],[303,44,300,42,"tag"],[303,47,300,45],[303,48,300,46],[304,4,301,2],[304,5,301,3],[304,6,301,4],[305,4,302,2,"globalEventEmitterAnimationFinishedListener"],[305,47,302,45],[305,50,302,48,"_RCTDeviceEventEmitter"],[305,72,302,70],[305,73,302,71,"default"],[305,80,302,78],[305,81,302,79,"addListener"],[305,92,302,90],[305,93,302,91],[305,134,302,132],[305,136,302,134],[305,146,302,144,"params"],[305,152,302,150],[305,154,302,152],[306,6,303,4],[306,10,303,8,"animationId"],[306,21,303,19],[306,24,303,22,"params"],[306,30,303,28],[306,31,303,29,"animationId"],[306,42,303,40],[307,6,304,4],[307,10,304,8,"callback"],[307,18,304,16],[307,21,304,19,"eventListenerAnimationFinishedCallbacks"],[307,60,304,58],[307,61,304,59,"animationId"],[307,72,304,70],[307,73,304,71],[308,6,305,4],[308,10,305,8],[308,11,305,9,"callback"],[308,19,305,17],[308,21,305,19],[309,8,306,6],[310,6,307,4],[311,6,308,4,"callback"],[311,14,308,12],[311,15,308,13,"params"],[311,21,308,19],[311,22,308,20],[312,6,309,4],[312,13,309,11,"eventListenerAnimationFinishedCallbacks"],[312,52,309,50],[312,53,309,51,"animationId"],[312,64,309,62],[312,65,309,63],[313,4,310,2],[313,5,310,3],[313,6,310,4],[314,2,311,0],[316,2,313,0],[317,0,314,0],[318,0,315,0],[319,0,316,0],[320,0,317,0],[321,0,318,0],[322,2,319,0],[322,6,319,4,"SUPPORTED_COLOR_STYLES"],[322,28,319,26],[322,31,319,29],[323,4,320,2,"backgroundColor"],[323,19,320,17],[323,21,320,19],[323,25,320,23],[324,4,321,2,"borderBottomColor"],[324,21,321,19],[324,23,321,21],[324,27,321,25],[325,4,322,2,"borderColor"],[325,15,322,13],[325,17,322,15],[325,21,322,19],[326,4,323,2,"borderEndColor"],[326,18,323,16],[326,20,323,18],[326,24,323,22],[327,4,324,2,"borderLeftColor"],[327,19,324,17],[327,21,324,19],[327,25,324,23],[328,4,325,2,"borderRightColor"],[328,20,325,18],[328,22,325,20],[328,26,325,24],[329,4,326,2,"borderStartColor"],[329,20,326,18],[329,22,326,20],[329,26,326,24],[330,4,327,2,"borderTopColor"],[330,18,327,16],[330,20,327,18],[330,24,327,22],[331,4,328,2,"color"],[331,9,328,7],[331,11,328,9],[331,15,328,13],[332,4,329,2,"tintColor"],[332,13,329,11],[332,15,329,13],[333,2,330,0],[333,3,330,1],[334,2,331,0],[334,6,331,4,"SUPPORTED_STYLES"],[334,22,331,20],[334,25,331,23],[334,26,331,24],[334,27,331,25],[334,29,331,27,"_objectSpread2"],[334,43,331,41],[334,44,331,42,"default"],[334,51,331,49],[334,53,331,51],[334,54,331,52],[334,55,331,53],[334,57,331,55,"_objectSpread2"],[334,71,331,69],[334,72,331,70,"default"],[334,79,331,77],[334,81,331,79],[334,82,331,80],[334,83,331,81],[334,85,331,83,"SUPPORTED_COLOR_STYLES"],[334,107,331,105],[334,108,331,106],[334,110,331,108],[334,111,331,109],[334,112,331,110],[334,114,331,112],[335,4,332,2,"borderBottomEndRadius"],[335,25,332,23],[335,27,332,25],[335,31,332,29],[336,4,333,2,"borderBottomLeftRadius"],[336,26,333,24],[336,28,333,26],[336,32,333,30],[337,4,334,2,"borderBottomRightRadius"],[337,27,334,25],[337,29,334,27],[337,33,334,31],[338,4,335,2,"borderBottomStartRadius"],[338,27,335,25],[338,29,335,27],[338,33,335,31],[339,4,336,2,"borderRadius"],[339,16,336,14],[339,18,336,16],[339,22,336,20],[340,4,337,2,"borderTopEndRadius"],[340,22,337,20],[340,24,337,22],[340,28,337,26],[341,4,338,2,"borderTopLeftRadius"],[341,23,338,21],[341,25,338,23],[341,29,338,27],[342,4,339,2,"borderTopRightRadius"],[342,24,339,22],[342,26,339,24],[342,30,339,28],[343,4,340,2,"borderTopStartRadius"],[343,24,340,22],[343,26,340,24],[343,30,340,28],[344,4,341,2,"elevation"],[344,13,341,11],[344,15,341,13],[344,19,341,17],[345,4,342,2,"opacity"],[345,11,342,9],[345,13,342,11],[345,17,342,15],[346,4,343,2,"transform"],[346,13,343,11],[346,15,343,13],[346,19,343,17],[347,4,344,2,"zIndex"],[347,10,344,8],[347,12,344,10],[347,16,344,14],[348,4,345,2],[349,4,346,2,"shadowOpacity"],[349,17,346,15],[349,19,346,17],[349,23,346,21],[350,4,347,2,"shadowRadius"],[350,16,347,14],[350,18,347,16],[350,22,347,20],[351,4,348,2],[352,4,349,2,"scaleX"],[352,10,349,8],[352,12,349,10],[352,16,349,14],[353,4,350,2,"scaleY"],[353,10,350,8],[353,12,350,10],[353,16,350,14],[354,4,351,2,"translateX"],[354,14,351,12],[354,16,351,14],[354,20,351,18],[355,4,352,2,"translateY"],[355,14,352,12],[355,16,352,14],[356,2,353,0],[356,3,353,1],[356,4,353,2],[357,2,354,0],[357,6,354,4,"SUPPORTED_TRANSFORMS"],[357,26,354,24],[357,29,354,27],[358,4,355,2,"translateX"],[358,14,355,12],[358,16,355,14],[358,20,355,18],[359,4,356,2,"translateY"],[359,14,356,12],[359,16,356,14],[359,20,356,18],[360,4,357,2,"scale"],[360,9,357,7],[360,11,357,9],[360,15,357,13],[361,4,358,2,"scaleX"],[361,10,358,8],[361,12,358,10],[361,16,358,14],[362,4,359,2,"scaleY"],[362,10,359,8],[362,12,359,10],[362,16,359,14],[363,4,360,2,"rotate"],[363,10,360,8],[363,12,360,10],[363,16,360,14],[364,4,361,2,"rotateX"],[364,11,361,9],[364,13,361,11],[364,17,361,15],[365,4,362,2,"rotateY"],[365,11,362,9],[365,13,362,11],[365,17,362,15],[366,4,363,2,"rotateZ"],[366,11,363,9],[366,13,363,11],[366,17,363,15],[367,4,364,2,"perspective"],[367,15,364,13],[367,17,364,15],[368,2,365,0],[368,3,365,1],[369,2,366,0],[369,6,366,4,"SUPPORTED_INTERPOLATION_PARAMS"],[369,36,366,34],[369,39,366,37],[370,4,367,2,"inputRange"],[370,14,367,12],[370,16,367,14],[370,20,367,18],[371,4,368,2,"outputRange"],[371,15,368,13],[371,17,368,15],[371,21,368,19],[372,4,369,2,"extrapolate"],[372,15,369,13],[372,17,369,15],[372,21,369,19],[373,4,370,2,"extrapolateRight"],[373,20,370,18],[373,22,370,20],[373,26,370,24],[374,4,371,2,"extrapolateLeft"],[374,19,371,17],[374,21,371,19],[375,2,372,0],[375,3,372,1],[376,2,373,0],[376,11,373,9,"addWhitelistedStyleProp"],[376,34,373,32,"addWhitelistedStyleProp"],[376,35,373,33,"prop"],[376,39,373,37],[376,41,373,39],[377,4,374,2,"SUPPORTED_STYLES"],[377,20,374,18],[377,21,374,19,"prop"],[377,25,374,23],[377,26,374,24],[377,29,374,27],[377,33,374,31],[378,2,375,0],[379,2,376,0],[379,11,376,9,"addWhitelistedTransformProp"],[379,38,376,36,"addWhitelistedTransformProp"],[379,39,376,37,"prop"],[379,43,376,41],[379,45,376,43],[380,4,377,2,"SUPPORTED_TRANSFORMS"],[380,24,377,22],[380,25,377,23,"prop"],[380,29,377,27],[380,30,377,28],[380,33,377,31],[380,37,377,35],[381,2,378,0],[382,2,379,0],[382,11,379,9,"addWhitelistedInterpolationParam"],[382,43,379,41,"addWhitelistedInterpolationParam"],[382,44,379,42,"param"],[382,49,379,47],[382,51,379,49],[383,4,380,2,"SUPPORTED_INTERPOLATION_PARAMS"],[383,34,380,32],[383,35,380,33,"param"],[383,40,380,38],[383,41,380,39],[383,44,380,42],[383,48,380,46],[384,2,381,0],[385,2,382,0],[385,11,382,9,"isSupportedColorStyleProp"],[385,36,382,34,"isSupportedColorStyleProp"],[385,37,382,35,"prop"],[385,41,382,39],[385,43,382,41],[386,4,383,2],[386,11,383,9,"SUPPORTED_COLOR_STYLES"],[386,33,383,31],[386,34,383,32,"hasOwnProperty"],[386,48,383,46],[386,49,383,47,"prop"],[386,53,383,51],[386,54,383,52],[387,2,384,0],[388,2,385,0],[388,11,385,9,"isSupportedStyleProp"],[388,31,385,29,"isSupportedStyleProp"],[388,32,385,30,"prop"],[388,36,385,34],[388,38,385,36],[389,4,386,2],[389,11,386,9,"SUPPORTED_STYLES"],[389,27,386,25],[389,28,386,26,"hasOwnProperty"],[389,42,386,40],[389,43,386,41,"prop"],[389,47,386,45],[389,48,386,46],[390,2,387,0],[391,2,388,0],[391,11,388,9,"isSupportedTransformProp"],[391,35,388,33,"isSupportedTransformProp"],[391,36,388,34,"prop"],[391,40,388,38],[391,42,388,40],[392,4,389,2],[392,11,389,9,"SUPPORTED_TRANSFORMS"],[392,31,389,29],[392,32,389,30,"hasOwnProperty"],[392,46,389,44],[392,47,389,45,"prop"],[392,51,389,49],[392,52,389,50],[393,2,390,0],[394,2,391,0],[394,11,391,9,"isSupportedInterpolationParam"],[394,40,391,38,"isSupportedInterpolationParam"],[394,41,391,39,"param"],[394,46,391,44],[394,48,391,46],[395,4,392,2],[395,11,392,9,"SUPPORTED_INTERPOLATION_PARAMS"],[395,41,392,39],[395,42,392,40,"hasOwnProperty"],[395,56,392,54],[395,57,392,55,"param"],[395,62,392,60],[395,63,392,61],[396,2,393,0],[397,2,394,0],[397,11,394,9,"validateTransform"],[397,28,394,26,"validateTransform"],[397,29,394,27,"configs"],[397,36,394,34],[397,38,394,36],[398,4,395,2,"configs"],[398,11,395,9],[398,12,395,10,"forEach"],[398,19,395,17],[398,20,395,18],[398,30,395,18,"config"],[398,36,395,24],[398,38,395,28],[399,6,396,4],[399,10,396,8],[399,11,396,9,"isSupportedTransformProp"],[399,35,396,33],[399,36,396,34,"config"],[399,42,396,40],[399,43,396,41,"property"],[399,51,396,49],[399,52,396,50],[399,54,396,52],[400,8,397,6],[400,14,397,12],[400,18,397,16,"Error"],[400,23,397,21],[400,24,397,22],[400,36,397,34],[400,39,397,37,"config"],[400,45,397,43],[400,46,397,44,"property"],[400,54,397,52],[400,57,397,55],[400,103,397,101],[400,104,397,102],[401,6,398,4],[402,4,399,2],[402,5,399,3],[402,6,399,4],[403,2,400,0],[404,2,401,0],[404,11,401,9,"validateStyles"],[404,25,401,23,"validateStyles"],[404,26,401,24,"styles"],[404,32,401,30],[404,34,401,32],[405,4,402,2],[405,9,402,7],[405,13,402,11,"_key2"],[405,18,402,16],[405,22,402,20,"styles"],[405,28,402,26],[405,30,402,28],[406,6,403,4],[406,10,403,8],[406,11,403,9,"isSupportedStyleProp"],[406,31,403,29],[406,32,403,30,"_key2"],[406,37,403,35],[406,38,403,36],[406,40,403,38],[407,8,404,6],[407,14,404,12],[407,18,404,16,"Error"],[407,23,404,21],[407,24,404,22],[407,42,404,40],[407,45,404,43,"_key2"],[407,50,404,48],[407,53,404,51],[407,99,404,97],[407,100,404,98],[408,6,405,4],[409,4,406,2],[410,2,407,0],[411,2,408,0],[411,11,408,9,"validateInterpolation"],[411,32,408,30,"validateInterpolation"],[411,33,408,31,"config"],[411,39,408,37],[411,41,408,39],[412,4,409,2],[412,9,409,7],[412,13,409,11,"_key3"],[412,18,409,16],[412,22,409,20,"config"],[412,28,409,26],[412,30,409,28],[413,6,410,4],[413,10,410,8],[413,11,410,9,"isSupportedInterpolationParam"],[413,40,410,38],[413,41,410,39,"_key3"],[413,46,410,44],[413,47,410,45],[413,49,410,47],[414,8,411,6],[414,14,411,12],[414,18,411,16,"Error"],[414,23,411,21],[414,24,411,22],[414,50,411,48],[414,53,411,51,"_key3"],[414,58,411,56],[414,61,411,59],[414,107,411,105],[414,108,411,106],[415,6,412,4],[416,4,413,2],[417,2,414,0],[418,2,415,0],[418,11,415,9,"generateNewNodeTag"],[418,29,415,27,"generateNewNodeTag"],[418,30,415,27],[418,32,415,30],[419,4,416,2],[419,11,416,9,"__nativeAnimatedNodeTagCount"],[419,39,416,37],[419,41,416,39],[420,2,417,0],[421,2,418,0],[421,11,418,9,"generateNewAnimationId"],[421,33,418,31,"generateNewAnimationId"],[421,34,418,31],[421,36,418,34],[422,4,419,2],[422,11,419,9,"__nativeAnimationIdCount"],[422,35,419,33],[422,37,419,35],[423,2,420,0],[424,2,421,0],[424,11,421,9,"assertNativeAnimatedModule"],[424,37,421,35,"assertNativeAnimatedModule"],[424,38,421,35],[424,40,421,38],[425,4,422,2],[425,5,422,3],[425,6,422,4],[425,8,422,6,"_invariant"],[425,18,422,16],[425,19,422,17,"default"],[425,26,422,24],[425,28,422,26,"NativeAnimatedModule"],[425,48,422,46],[425,50,422,48],[425,91,422,89],[425,92,422,90],[426,2,423,0],[427,2,424,0],[427,6,424,4,"_warnedMissingNativeAnimated"],[427,34,424,32],[427,37,424,35],[427,42,424,40],[428,2,425,0],[428,11,425,9,"shouldUseNativeDriver"],[428,32,425,30,"shouldUseNativeDriver"],[428,33,425,31,"config"],[428,39,425,37],[428,41,425,39],[429,4,426,2],[429,8,426,6,"config"],[429,14,426,12],[429,15,426,13,"useNativeDriver"],[429,30,426,28],[429,34,426,32],[429,38,426,36],[429,40,426,38],[430,6,427,4,"console"],[430,13,427,11],[430,14,427,12,"warn"],[430,18,427,16],[430,19,427,17],[430,87,427,85],[430,90,427,88],[430,146,427,144],[430,147,427,145],[431,4,428,2],[432,4,429,2],[432,8,429,6,"config"],[432,14,429,12],[432,15,429,13,"useNativeDriver"],[432,30,429,28],[432,35,429,33],[432,39,429,37],[432,43,429,41],[432,44,429,42,"NativeAnimatedModule"],[432,64,429,62],[432,66,429,64],[433,6,430,4],[433,10,430,8],[433,11,430,9,"_warnedMissingNativeAnimated"],[433,39,430,37],[433,41,430,39],[434,8,431,6,"console"],[434,15,431,13],[434,16,431,14,"warn"],[434,20,431,18],[434,21,431,19],[434,87,431,85],[434,90,431,88],[434,159,431,157],[434,162,431,160],[434,227,431,225],[434,230,431,228],[434,251,431,249],[434,254,431,252],[434,412,431,410],[434,413,431,411],[435,8,432,6,"_warnedMissingNativeAnimated"],[435,36,432,34],[435,39,432,37],[435,43,432,41],[436,6,433,4],[437,6,434,4],[437,13,434,11],[437,18,434,16],[438,4,435,2],[439,4,436,2],[439,11,436,9,"config"],[439,17,436,15],[439,18,436,16,"useNativeDriver"],[439,33,436,31],[439,37,436,35],[439,42,436,40],[440,2,437,0],[441,2,438,0],[441,11,438,9,"transformDataType"],[441,28,438,26,"transformDataType"],[441,29,438,27,"value"],[441,34,438,32],[441,36,438,34],[442,4,439,2],[443,4,440,2],[444,4,441,2],[444,8,441,6],[444,15,441,13,"value"],[444,20,441,18],[444,25,441,23],[444,33,441,31],[444,35,441,33],[445,6,442,4],[445,13,442,11,"value"],[445,18,442,16],[446,4,443,2],[447,4,444,2],[447,8,444,6],[447,14,444,12],[447,15,444,13,"test"],[447,19,444,17],[447,20,444,18,"value"],[447,25,444,23],[447,26,444,24],[447,28,444,26],[448,6,445,4],[448,10,445,8,"degrees"],[448,17,445,15],[448,20,445,18,"parseFloat"],[448,30,445,28],[448,31,445,29,"value"],[448,36,445,34],[448,37,445,35],[448,41,445,39],[448,42,445,40],[449,6,446,4],[449,10,446,8,"radians"],[449,17,446,15],[449,20,446,18,"degrees"],[449,27,446,25],[449,30,446,28,"Math"],[449,34,446,32],[449,35,446,33,"PI"],[449,37,446,35],[449,40,446,38],[449,45,446,43],[450,6,447,4],[450,13,447,11,"radians"],[450,20,447,18],[451,4,448,2],[451,5,448,3],[451,11,448,9],[452,6,449,4],[452,13,449,11,"value"],[452,18,449,16],[453,4,450,2],[454,2,451,0],[455,2,452,0],[455,6,452,4,"_default"],[455,14,452,12],[455,17,452,15,"exports"],[455,24,452,22],[455,25,452,23,"default"],[455,32,452,30],[455,35,452,33],[456,4,453,2,"API"],[456,7,453,5],[456,9,453,2,"API"],[456,12,453,5],[457,4,454,2,"isSupportedColorStyleProp"],[457,29,454,27],[457,31,454,2,"isSupportedColorStyleProp"],[457,56,454,27],[458,4,455,2,"isSupportedStyleProp"],[458,24,455,22],[458,26,455,2,"isSupportedStyleProp"],[458,46,455,22],[459,4,456,2,"isSupportedTransformProp"],[459,28,456,26],[459,30,456,2,"isSupportedTransformProp"],[459,54,456,26],[460,4,457,2,"isSupportedInterpolationParam"],[460,33,457,31],[460,35,457,2,"isSupportedInterpolationParam"],[460,64,457,31],[461,4,458,2,"addWhitelistedStyleProp"],[461,27,458,25],[461,29,458,2,"addWhitelistedStyleProp"],[461,52,458,25],[462,4,459,2,"addWhitelistedTransformProp"],[462,31,459,29],[462,33,459,2,"addWhitelistedTransformProp"],[462,60,459,29],[463,4,460,2,"addWhitelistedInterpolationParam"],[463,36,460,34],[463,38,460,2,"addWhitelistedInterpolationParam"],[463,70,460,34],[464,4,461,2,"validateStyles"],[464,18,461,16],[464,20,461,2,"validateStyles"],[464,34,461,16],[465,4,462,2,"validateTransform"],[465,21,462,19],[465,23,462,2,"validateTransform"],[465,40,462,19],[466,4,463,2,"validateInterpolation"],[466,25,463,23],[466,27,463,2,"validateInterpolation"],[466,48,463,23],[467,4,464,2,"generateNewNodeTag"],[467,22,464,20],[467,24,464,2,"generateNewNodeTag"],[467,42,464,20],[468,4,465,2,"generateNewAnimationId"],[468,26,465,24],[468,28,465,2,"generateNewAnimationId"],[468,50,465,24],[469,4,466,2,"assertNativeAnimatedModule"],[469,30,466,28],[469,32,466,2,"assertNativeAnimatedModule"],[469,58,466,28],[470,4,467,2,"shouldUseNativeDriver"],[470,25,467,23],[470,27,467,2,"shouldUseNativeDriver"],[470,48,467,23],[471,4,468,2,"transformDataType"],[471,21,468,19],[471,23,468,2,"transformDataType"],[471,40,468,19],[472,4,469,2],[473,4,470,2],[474,4,471,2],[474,8,471,6,"nativeEventEmitter"],[474,26,471,24,"nativeEventEmitter"],[474,27,471,24],[474,29,471,27],[475,6,472,4],[475,10,472,8],[475,11,472,9,"nativeEventEmitter"],[475,29,472,27],[475,31,472,29],[476,8,473,6,"nativeEventEmitter"],[476,26,473,24],[476,29,473,27],[476,33,473,31,"_NativeEventEmitter"],[476,52,473,50],[476,53,473,51,"default"],[476,60,473,58],[477,8,474,6],[478,8,475,6],[479,8,476,6,"_Platform"],[479,17,476,15],[479,18,476,16,"default"],[479,25,476,23],[479,26,476,24,"OS"],[479,28,476,26],[479,33,476,31],[479,38,476,36],[479,41,476,39],[479,45,476,43],[479,48,476,46,"NativeAnimatedModule"],[479,68,476,66],[479,69,476,67],[480,6,477,4],[481,6,478,4],[481,13,478,11,"nativeEventEmitter"],[481,31,478,29],[482,4,479,2],[483,2,480,0],[483,3,480,1],[484,0,480,2],[484,3]],"functionMap":{"names":["<global>","<anonymous>","apis.reduce$argument_0","getValue","setWaitingForIdentifier","unsetWaitingForIdentifier","disableQueue","flushQueue","queueOperation","queue.push$argument_0","createAnimatedNode","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","disconnectAnimatedNodes","startAnimatingNode","stopAnimation","setAnimatedNodeValue","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","exports.API.removeAnimatedEventFromView","setupGlobalEventEmitterListeners","_RCTDeviceEventEmitter._default.addListener$argument_1","addWhitelistedStyleProp","addWhitelistedTransformProp","addWhitelistedInterpolationParam","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs.forEach$argument_0","validateStyles","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","transformDataType","exports._default.get__nativeEventEmitter"],"mappings":"AAA;sCCyD;qBC2C;GDK;CDC;YGO;GHW;2BIC;GJM;6BKC;GLM;gBMC;GNS;cOC;GPmC;kBQC;iBCe,iBD;GRI;sBUC;GVG;4BWC;GXK;qCYC;GZG;oCaC;GbG;wBcC;GdG;2BeC;GfG;sBgBC;GhBW;iBiBC;GjBG;wBkBC;GlBG;yBmBC;GnBG;6BoBC;GpBG;6BqBC;GrBG;6BsBC;GtBG;kCuBC;GvBG;wBwBC;GxBM;oByBC;GzBG;0B0BC;G1BG;E2BC;G3BG;A4BE;oHCC;GDQ;sICC;GDQ;C5BC;A8B8D;C9BE;A+BC;C/BE;AgCC;ChCE;AiCC;CjCE;AkCC;ClCE;AmCC;CnCE;AoCC;CpCE;AqCC;kBCC;GDI;CrCC;AuCC;CvCM;AwCC;CxCM;AyCC;CzCE;A0CC;C1CE;A2CC;C3CE;A4CE;C5CY;A6CC;C7Ca;E8CoB;G9CQ"},"hasCjsExports":true},"type":"js/module"}]}