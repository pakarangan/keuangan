{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getPathFromState = getPathFromState;\n  var _babelRuntimeHelpersToConsumableArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _toConsumableArray = _interopDefault(_babelRuntimeHelpersToConsumableArray);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _queryString = require(_dependencyMap[2], \"query-string\");\n  var queryString = _interopNamespace(_queryString);\n  var _getPatternPartsJs = require(_dependencyMap[3], \"./getPatternParts.js\");\n  var _validatePathConfigJs = require(_dependencyMap[4], \"./validatePathConfig.js\");\n  var _getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return _getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = function getNormalizedConfigs(options) {\n    if (!(options != null && options.screens)) return {};\n    var cached = cachedNormalizedConfigs.get(options == null ? void 0 : options.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = _getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _parts2;\n          var _options = currentOptions[route.name];\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(function (_ref4) {\n            var _options$stringify$ke, _options$stringify;\n            var _ref5 = (0, _slicedToArray.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            if (value === undefined) {\n              if (_options) {\n                var _options$parts;\n                var optional = (_options$parts = _options.parts) == null || (_options$parts = _options$parts.find(function (part) {\n                  return part.param === key;\n                })) == null ? void 0 : _options$parts.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            var stringify = (_options$stringify$ke = _options == null || (_options$stringify = _options.stringify) == null ? void 0 : _options$stringify[key]) != null ? _options$stringify$ke : String;\n            return [key, stringify(value)];\n          }).filter(function (entry) {\n            return entry != null;\n          }));\n          if ((_parts2 = parts) != null && _parts2.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _parts3;\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = Object.assign({}, currentParams);\n            (_parts3 = parts\n            // eslint-disable-next-line no-loop-func\n            ) == null || _parts3.forEach(function (_ref6) {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        var _parts;\n        path += (_parts = parts) == null ? void 0 : _parts.map(function (_ref) {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, function (char) {\n              return encodeURIComponent(char);\n            });\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(function (_ref2) {\n          var _ref3 = (0, _slicedToArray.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options != null && options.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = function createConfigItem(config, parentParts) {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts4 = (0, _getPatternPartsJs.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [].concat((0, _toConsumableArray.default)(parentParts), (0, _toConsumableArray.default)(_parts4))\n        };\n      }\n      return {\n        parts: _parts4\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [].concat((0, _toConsumableArray.default)(parentParts || []), (0, _toConsumableArray.default)(config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : [])) : config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts: parts,\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, parts) {\n    return Object.fromEntries(Object.entries(options).map(function (_ref7) {\n      var _ref8 = (0, _slicedToArray.default)(_ref7, 2),\n        name = _ref8[0],\n        c = _ref8[1];\n      var result = createConfigItem(c, parts);\n      return [name, result];\n    }));\n  };\n});","lineCount":291,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13],[16,10,1,13,"d"],[16,11,1,13],[16,14,1,13,"Object"],[16,20,1,13],[16,21,1,13,"getOwnPropertyDescriptor"],[16,45,1,13],[16,46,1,13,"e"],[16,47,1,13],[16,49,1,13,"k"],[16,50,1,13],[17,6,1,13,"Object"],[17,12,1,13],[17,13,1,13,"defineProperty"],[17,27,1,13],[17,28,1,13,"n"],[17,29,1,13],[17,31,1,13,"k"],[17,32,1,13],[17,34,1,13,"d"],[17,35,1,13],[17,36,1,13,"get"],[17,39,1,13],[17,42,1,13,"d"],[17,43,1,13],[18,8,1,13,"enumerable"],[18,18,1,13],[19,8,1,13,"get"],[19,11,1,13],[19,22,1,13,"get"],[19,23,1,13],[20,10,1,13],[20,17,1,13,"e"],[20,18,1,13],[20,19,1,13,"k"],[20,20,1,13],[21,8,1,13],[22,6,1,13],[23,4,1,13],[24,4,1,13,"n"],[24,5,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,16,1,13,"e"],[24,17,1,13],[25,4,1,13],[25,11,1,13,"n"],[25,12,1,13],[26,2,1,13],[27,2,52,0,"exports"],[27,9,52,0],[27,10,52,0,"getPathFromState"],[27,26,52,0],[27,29,52,0,"getPathFromState"],[27,45,52,0],[28,2,203,1],[28,6,203,1,"_babelRuntimeHelpersToConsumableArray"],[28,43,203,1],[28,46,203,1,"require"],[28,53,203,1],[28,54,203,1,"_dependencyMap"],[28,68,203,1],[29,2,203,1],[29,6,203,1,"_toConsumableArray"],[29,24,203,1],[29,27,203,1,"_interopDefault"],[29,42,203,1],[29,43,203,1,"_babelRuntimeHelpersToConsumableArray"],[29,80,203,1],[30,2,203,1],[30,6,203,1,"_babelRuntimeHelpersSlicedToArray"],[30,39,203,1],[30,42,203,1,"require"],[30,49,203,1],[30,50,203,1,"_dependencyMap"],[30,64,203,1],[31,2,203,1],[31,6,203,1,"_slicedToArray"],[31,20,203,1],[31,23,203,1,"_interopDefault"],[31,38,203,1],[31,39,203,1,"_babelRuntimeHelpersSlicedToArray"],[31,72,203,1],[32,2,3,0],[32,6,3,0,"_queryString"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,0],[33,6,3,0,"queryString"],[33,17,3,0],[33,20,3,0,"_interopNamespace"],[33,37,3,0],[33,38,3,0,"_queryString"],[33,50,3,0],[34,2,4,0],[34,6,4,0,"_getPatternPartsJs"],[34,24,4,0],[34,27,4,0,"require"],[34,34,4,0],[34,35,4,0,"_dependencyMap"],[34,49,4,0],[35,2,5,0],[35,6,5,0,"_validatePathConfigJs"],[35,27,5,0],[35,30,5,0,"require"],[35,37,5,0],[35,38,5,0,"_dependencyMap"],[35,52,5,0],[36,2,6,0],[36,6,6,6,"getActiveRoute"],[36,21,6,20],[36,24,6,23],[36,33,6,6,"getActiveRoute"],[36,47,6,20,"getActiveRoute"],[36,48,6,23,"state"],[36,53,6,28],[36,55,6,32],[37,4,7,2],[37,8,7,8,"route"],[37,13,7,13],[37,16,7,16],[37,23,7,23,"state"],[37,28,7,28],[37,29,7,29,"index"],[37,34,7,34],[37,39,7,39],[37,47,7,47],[37,50,7,50,"state"],[37,55,7,55],[37,56,7,56,"routes"],[37,62,7,62],[37,63,7,63,"state"],[37,68,7,68],[37,69,7,69,"index"],[37,74,7,74],[37,75,7,75],[37,78,7,78,"state"],[37,83,7,83],[37,84,7,84,"routes"],[37,90,7,90],[37,91,7,91,"state"],[37,96,7,96],[37,97,7,97,"routes"],[37,103,7,103],[37,104,7,104,"length"],[37,110,7,110],[37,113,7,113],[37,114,7,114],[37,115,7,115],[38,4,8,2],[38,8,8,6,"route"],[38,13,8,11],[38,14,8,12,"state"],[38,19,8,17],[38,21,8,19],[39,6,9,4],[39,13,9,11,"getActiveRoute"],[39,28,9,25],[39,29,9,26,"route"],[39,34,9,31],[39,35,9,32,"state"],[39,40,9,37],[39,41,9,38],[40,4,10,2],[41,4,11,2],[41,11,11,9,"route"],[41,16,11,14],[42,2,12,0],[42,3,12,1],[43,2,13,0],[43,6,13,6,"cachedNormalizedConfigs"],[43,29,13,29],[43,32,13,32],[43,36,13,36,"WeakMap"],[43,43,13,43],[43,44,13,44],[43,45,13,45],[44,2,14,0],[44,6,14,6,"getNormalizedConfigs"],[44,26,14,26],[44,29,14,29],[44,38,14,6,"getNormalizedConfigs"],[44,58,14,26,"getNormalizedConfigs"],[44,59,14,29,"options"],[44,66,14,36],[44,68,14,40],[45,4,15,2],[45,8,15,6],[45,10,15,7,"options"],[45,17,15,14],[45,29,15,7,"options"],[45,36,15,14],[45,37,15,16,"screens"],[45,44,15,23],[45,47,15,25],[45,54,15,32],[45,55,15,33],[45,56,15,34],[46,4,16,2],[46,8,16,8,"cached"],[46,14,16,14],[46,17,16,17,"cachedNormalizedConfigs"],[46,40,16,40],[46,41,16,41,"get"],[46,44,16,44],[46,45,16,45,"options"],[46,52,16,52],[46,72,16,45,"options"],[46,79,16,52],[46,80,16,54,"screens"],[46,87,16,61],[46,88,16,62],[47,4,17,2],[47,8,17,6,"cached"],[47,14,17,12],[47,16,17,14],[47,23,17,21,"cached"],[47,29,17,27],[48,4,18,2],[48,8,18,8,"normalizedConfigs"],[48,25,18,25],[48,28,18,28,"createNormalizedConfigs"],[48,51,18,51],[48,52,18,52,"options"],[48,59,18,59],[48,60,18,60,"screens"],[48,67,18,67],[48,68,18,68],[49,4,19,2,"cachedNormalizedConfigs"],[49,27,19,25],[49,28,19,26,"set"],[49,31,19,29],[49,32,19,30,"options"],[49,39,19,37],[49,40,19,38,"screens"],[49,47,19,45],[49,49,19,47,"normalizedConfigs"],[49,66,19,64],[49,67,19,65],[50,4,20,2],[50,11,20,9,"normalizedConfigs"],[50,28,20,26],[51,2,21,0],[51,3,21,1],[53,2,23,0],[54,0,24,0],[55,0,25,0],[56,0,26,0],[57,0,27,0],[58,0,28,0],[59,0,29,0],[60,0,30,0],[61,0,31,0],[62,0,32,0],[63,0,33,0],[64,0,34,0],[65,0,35,0],[66,0,36,0],[67,0,37,0],[68,0,38,0],[69,0,39,0],[70,0,40,0],[71,0,41,0],[72,0,42,0],[73,0,43,0],[74,0,44,0],[75,0,45,0],[76,0,46,0],[77,0,47,0],[78,0,48,0],[79,0,49,0],[80,0,50,0],[81,0,51,0],[82,2,52,7],[82,11,52,16,"getPathFromState"],[82,27,52,32,"getPathFromState"],[82,28,52,33,"state"],[82,33,52,38],[82,35,52,40,"options"],[82,42,52,47],[82,44,52,49],[83,4,53,2],[83,8,53,6,"state"],[83,13,53,11],[83,17,53,15],[83,21,53,19],[83,23,53,21],[84,6,54,4],[84,12,54,10,"Error"],[84,17,54,15],[84,18,54,16],[84,26,54,24,"String"],[84,32,54,30],[84,33,54,31,"state"],[84,38,54,36],[84,39,54,37],[84,104,54,102],[84,105,54,103],[85,4,55,2],[86,4,56,2],[86,8,56,6,"options"],[86,15,56,13],[86,17,56,15],[87,6,57,4],[87,10,57,4,"validatePathConfig"],[87,31,57,22],[87,32,57,22,"validatePathConfig"],[87,50,57,22],[87,52,57,23,"options"],[87,59,57,30],[87,60,57,31],[88,4,58,2],[89,4,59,2],[89,8,59,8,"configs"],[89,15,59,15],[89,18,59,18,"getNormalizedConfigs"],[89,38,59,38],[89,39,59,39,"options"],[89,46,59,46],[89,47,59,47],[90,4,60,2],[90,8,60,6,"path"],[90,12,60,10],[90,15,60,13],[90,18,60,16],[91,4,61,2],[91,8,61,6,"current"],[91,15,61,13],[91,18,61,16,"state"],[91,23,61,21],[92,4,62,2],[92,8,62,8,"allParams"],[92,17,62,17],[92,20,62,20],[92,21,62,21],[92,22,62,22],[93,4,62,23],[93,8,62,23,"_loop"],[93,13,62,23],[93,25,62,23,"_loop"],[93,31,62,23],[93,33,63,18],[94,6,64,4],[94,10,64,8,"index"],[94,15,64,13],[94,18,64,16],[94,25,64,23,"current"],[94,32,64,30],[94,33,64,31,"index"],[94,38,64,36],[94,43,64,41],[94,51,64,49],[94,54,64,52,"current"],[94,61,64,59],[94,62,64,60,"index"],[94,67,64,65],[94,70,64,68],[94,71,64,69],[95,6,65,4],[95,10,65,8,"route"],[95,15,65,13],[95,18,65,16,"current"],[95,25,65,23],[95,26,65,24,"routes"],[95,32,65,30],[95,33,65,31,"index"],[95,38,65,36],[95,39,65,37],[96,6,66,4],[96,10,66,8,"parts"],[96,15,66,13],[97,6,67,4],[97,10,67,8,"focusedParams"],[97,23,67,21],[98,6,68,4],[98,10,68,8,"currentOptions"],[98,24,68,22],[98,27,68,25,"configs"],[98,34,68,32],[99,6,69,4],[99,10,69,10,"focusedRoute"],[99,22,69,22],[99,25,69,25,"getActiveRoute"],[99,40,69,39],[99,41,69,40,"state"],[99,46,69,45],[99,47,69,46],[101,6,71,4],[102,6,72,4],[102,10,72,10,"nestedRouteNames"],[102,26,72,26],[102,29,72,29],[102,31,72,31],[103,6,73,4],[103,10,73,8,"hasNext"],[103,17,73,15],[103,20,73,18],[103,24,73,22],[104,6,73,23],[104,10,73,23,"_loop2"],[104,16,73,23],[104,28,73,23,"_loop2"],[104,35,73,23],[104,37,74,52],[105,8,75,6,"parts"],[105,13,75,11],[105,16,75,14,"currentOptions"],[105,30,75,28],[105,31,75,29,"route"],[105,36,75,34],[105,37,75,35,"name"],[105,41,75,39],[105,42,75,40],[105,43,75,41,"parts"],[105,48,75,46],[106,8,76,6,"nestedRouteNames"],[106,24,76,22],[106,25,76,23,"push"],[106,29,76,27],[106,30,76,28,"route"],[106,35,76,33],[106,36,76,34,"name"],[106,40,76,38],[106,41,76,39],[107,8,77,6],[107,12,77,10,"route"],[107,17,77,15],[107,18,77,16,"params"],[107,24,77,22],[107,26,77,24],[108,10,77,24],[108,14,77,24,"_parts2"],[108,21,77,24],[109,10,78,8],[109,14,78,14,"options"],[109,22,78,21],[109,25,78,24,"currentOptions"],[109,39,78,38],[109,40,78,39,"route"],[109,45,78,44],[109,46,78,45,"name"],[109,50,78,49],[109,51,78,50],[110,10,79,8],[110,14,79,14,"currentParams"],[110,27,79,27],[110,30,79,30,"Object"],[110,36,79,36],[110,37,79,37,"fromEntries"],[110,48,79,48],[110,49,79,49,"Object"],[110,55,79,55],[110,56,79,56,"entries"],[110,63,79,63],[110,64,79,64,"route"],[110,69,79,69],[110,70,79,70,"params"],[110,76,79,76],[110,77,79,77],[110,78,79,78,"map"],[110,81,79,81],[110,82,79,82],[110,92,79,82,"_ref4"],[110,97,79,82],[110,99,79,100],[111,12,79,100],[111,16,79,100,"_options$stringify$ke"],[111,37,79,100],[111,39,79,100,"_options$stringify"],[111,57,79,100],[112,12,79,100],[112,16,79,100,"_ref5"],[112,21,79,100],[112,28,79,100,"_slicedToArray"],[112,42,79,100],[112,43,79,100,"default"],[112,50,79,100],[112,52,79,100,"_ref4"],[112,57,79,100],[113,14,79,84,"key"],[113,17,79,87],[113,20,79,87,"_ref5"],[113,25,79,87],[114,14,79,89,"value"],[114,19,79,94],[114,22,79,94,"_ref5"],[114,27,79,94],[115,12,80,10],[115,16,80,14,"value"],[115,21,80,19],[115,26,80,24,"undefined"],[115,35,80,33],[115,37,80,35],[116,14,81,12],[116,18,81,16,"options"],[116,26,81,23],[116,28,81,25],[117,16,81,25],[117,20,81,25,"_options$parts"],[117,34,81,25],[118,16,82,14],[118,20,82,20,"optional"],[118,28,82,28],[118,32,82,28,"_options$parts"],[118,46,82,28],[118,49,82,31,"options"],[118,57,82,38],[118,58,82,39,"parts"],[118,63,82,44],[118,77,82,44,"_options$parts"],[118,91,82,44],[118,94,82,31,"_options$parts"],[118,108,82,31],[118,109,82,46,"find"],[118,113,82,50],[118,114,82,51],[118,124,82,51,"part"],[118,128,82,55],[119,18,82,55],[119,25,82,59,"part"],[119,29,82,63],[119,30,82,64,"param"],[119,35,82,69],[119,40,82,74,"key"],[119,43,82,77],[120,16,82,77],[120,18,82,78],[120,39,82,31,"_options$parts"],[120,53,82,31],[120,54,82,80,"optional"],[120,62,82,88],[121,16,83,14],[121,20,83,18,"optional"],[121,28,83,26],[121,30,83,28],[122,18,84,16],[122,25,84,23],[122,29,84,27],[123,16,85,14],[124,14,86,12],[124,15,86,13],[124,21,86,19],[125,16,87,14],[125,23,87,21],[125,27,87,25],[126,14,88,12],[127,12,89,10],[128,12,90,10],[128,16,90,16,"stringify"],[128,25,90,25],[128,29,90,25,"_options$stringify$ke"],[128,50,90,25],[128,53,90,28,"options"],[128,61,90,35],[128,74,90,35,"_options$stringify"],[128,92,90,35],[128,95,90,28,"options"],[128,103,90,35],[128,104,90,37,"stringify"],[128,113,90,46],[128,134,90,28,"_options$stringify"],[128,152,90,28],[128,153,90,49,"key"],[128,156,90,52],[128,157,90,53],[128,169,90,53,"_options$stringify$ke"],[128,190,90,53],[128,193,90,57,"String"],[128,199,90,63],[129,12,91,10],[129,19,91,17],[129,20,91,18,"key"],[129,23,91,21],[129,25,91,23,"stringify"],[129,34,91,32],[129,35,91,33,"value"],[129,40,91,38],[129,41,91,39],[129,42,91,40],[130,10,92,8],[130,11,92,9],[130,12,92,10],[130,13,92,11,"filter"],[130,19,92,17],[130,20,92,18],[130,30,92,18,"entry"],[130,35,92,23],[131,12,92,23],[131,19,92,27,"entry"],[131,24,92,32],[131,28,92,36],[131,32,92,40],[132,10,92,40],[132,12,92,41],[132,13,92,42],[133,10,93,8],[133,15,93,8,"_parts2"],[133,22,93,8],[133,25,93,12,"parts"],[133,30,93,17],[133,43,93,12,"_parts2"],[133,50,93,12],[133,51,93,19,"length"],[133,57,93,25],[133,59,93,27],[134,12,94,10,"Object"],[134,18,94,16],[134,19,94,17,"assign"],[134,25,94,23],[134,26,94,24,"allParams"],[134,35,94,33],[134,37,94,35,"currentParams"],[134,50,94,48],[134,51,94,49],[135,10,95,8],[136,10,96,8],[136,14,96,12,"focusedRoute"],[136,26,96,24],[136,31,96,29,"route"],[136,36,96,34],[136,38,96,36],[137,12,96,36],[137,16,96,36,"_parts3"],[137,23,96,36],[138,12,97,10],[139,12,98,10],[140,12,99,10,"focusedParams"],[140,25,99,23],[140,28,99,23,"Object"],[140,34,99,23],[140,35,99,23,"assign"],[140,41,99,23],[140,46,100,15,"currentParams"],[140,59,100,28],[140,60,101,11],[141,12,102,10],[141,13,102,10,"_parts3"],[141,20,102,10],[141,23,102,10,"parts"],[142,12,103,10],[143,12,103,10],[143,25,102,10,"_parts3"],[143,32,102,10],[143,33,104,12,"forEach"],[143,40,104,19],[143,41,104,20],[143,51,104,20,"_ref6"],[143,56,104,20],[143,58,106,16],[144,14,106,16],[144,18,105,12,"param"],[144,23,105,17],[144,26,105,17,"_ref6"],[144,31,105,17],[144,32,105,12,"param"],[144,37,105,17],[145,14,107,12],[145,18,107,16,"param"],[145,23,107,21],[145,25,107,23],[146,16,108,14],[147,16,109,14],[147,20,109,18,"focusedParams"],[147,33,109,31],[147,35,109,33],[148,18,110,16],[149,18,111,16],[149,25,111,23,"focusedParams"],[149,38,111,36],[149,39,111,37,"param"],[149,44,111,42],[149,45,111,43],[150,16,112,14],[151,14,113,12],[152,12,114,10],[152,13,114,11],[152,14,114,12],[153,10,115,8],[154,8,116,6],[156,8,118,6],[157,8,119,6],[157,12,119,10],[157,13,119,11,"currentOptions"],[157,27,119,25],[157,28,119,26,"route"],[157,33,119,31],[157,34,119,32,"name"],[157,38,119,36],[157,39,119,37],[157,40,119,38,"screens"],[157,47,119,45],[157,51,119,49,"route"],[157,56,119,54],[157,57,119,55,"state"],[157,62,119,60],[157,67,119,65,"undefined"],[157,76,119,74],[157,78,119,76],[158,10,120,8,"hasNext"],[158,17,120,15],[158,20,120,18],[158,25,120,23],[159,8,121,6],[159,9,121,7],[159,15,121,13],[160,10,122,8,"index"],[160,15,122,13],[160,18,122,16],[160,25,122,23,"route"],[160,30,122,28],[160,31,122,29,"state"],[160,36,122,34],[160,37,122,35,"index"],[160,42,122,40],[160,47,122,45],[160,55,122,53],[160,58,122,56,"route"],[160,63,122,61],[160,64,122,62,"state"],[160,69,122,67],[160,70,122,68,"index"],[160,75,122,73],[160,78,122,76,"route"],[160,83,122,81],[160,84,122,82,"state"],[160,89,122,87],[160,90,122,88,"routes"],[160,96,122,94],[160,97,122,95,"length"],[160,103,122,101],[160,106,122,104],[160,107,122,105],[161,10,123,8],[161,14,123,14,"nextRoute"],[161,23,123,23],[161,26,123,26,"route"],[161,31,123,31],[161,32,123,32,"state"],[161,37,123,37],[161,38,123,38,"routes"],[161,44,123,44],[161,45,123,45,"index"],[161,50,123,50],[161,51,123,51],[162,10,124,8],[162,14,124,14,"nestedConfig"],[162,26,124,26],[162,29,124,29,"currentOptions"],[162,43,124,43],[162,44,124,44,"route"],[162,49,124,49],[162,50,124,50,"name"],[162,54,124,54],[162,55,124,55],[162,56,124,56,"screens"],[162,63,124,63],[164,10,126,8],[165,10,127,8],[165,14,127,12,"nestedConfig"],[165,26,127,24],[165,30,127,28,"nextRoute"],[165,39,127,37],[165,40,127,38,"name"],[165,44,127,42],[165,48,127,46,"nestedConfig"],[165,60,127,58],[165,62,127,60],[166,12,128,10,"route"],[166,17,128,15],[166,20,128,18,"nextRoute"],[166,29,128,27],[167,12,129,10,"currentOptions"],[167,26,129,24],[167,29,129,27,"nestedConfig"],[167,41,129,39],[168,10,130,8],[168,11,130,9],[168,17,130,15],[169,12,131,10],[170,12,132,10,"hasNext"],[170,19,132,17],[170,22,132,20],[170,27,132,25],[171,10,133,8],[172,8,134,6],[173,6,135,4],[173,7,135,5],[174,6,74,4],[174,13,74,11,"route"],[174,18,74,16],[174,19,74,17,"name"],[174,23,74,21],[174,27,74,25,"currentOptions"],[174,41,74,39],[174,45,74,43,"hasNext"],[174,52,74,50],[175,8,74,50,"_loop2"],[175,14,74,50],[176,6,74,50],[177,6,136,4],[177,10,136,8,"currentOptions"],[177,24,136,22],[177,25,136,23,"route"],[177,30,136,28],[177,31,136,29,"name"],[177,35,136,33],[177,36,136,34],[177,41,136,39,"undefined"],[177,50,136,48],[177,52,136,50],[178,8,136,50],[178,12,136,50,"_parts"],[178,18,136,50],[179,8,137,6,"path"],[179,12,137,10],[179,17,137,10,"_parts"],[179,23,137,10],[179,26,137,14,"parts"],[179,31,137,19],[179,52,137,14,"_parts"],[179,58,137,14],[179,59,137,21,"map"],[179,62,137,24],[179,63,137,25],[179,73,137,25,"_ref"],[179,77,137,25],[179,79,141,12],[180,10,141,12],[180,14,138,8,"segment"],[180,21,138,15],[180,24,138,15,"_ref"],[180,28,138,15],[180,29,138,8,"segment"],[180,36,138,15],[181,12,139,8,"param"],[181,17,139,13],[181,20,139,13,"_ref"],[181,24,139,13],[181,25,139,8,"param"],[181,30,139,13],[182,12,140,8,"optional"],[182,20,140,16],[182,23,140,16,"_ref"],[182,27,140,16],[182,28,140,8,"optional"],[182,36,140,16],[183,10,142,8],[184,10,143,8],[185,10,144,8],[186,10,145,8],[186,14,145,12,"segment"],[186,21,145,19],[186,26,145,24],[186,29,145,27],[186,31,145,29],[187,12,146,10],[187,19,146,17,"route"],[187,24,146,22],[187,25,146,23,"name"],[187,29,146,27],[188,10,147,8],[190,10,149,8],[191,10,150,8],[191,14,150,12,"param"],[191,19,150,17],[191,21,150,19],[192,12,151,10],[192,16,151,16,"value"],[192,21,151,21],[192,24,151,24,"allParams"],[192,33,151,33],[192,34,151,34,"param"],[192,39,151,39],[192,40,151,40],[193,12,152,10],[193,16,152,14,"value"],[193,21,152,19],[193,26,152,24,"undefined"],[193,35,152,33],[193,39,152,37,"optional"],[193,47,152,45],[193,49,152,47],[194,14,153,12],[195,14,154,12],[195,21,154,19],[195,23,154,21],[196,12,155,10],[198,12,157,10],[199,12,158,10],[200,12,159,10],[200,19,159,17,"String"],[200,25,159,23],[200,26,159,24,"value"],[200,31,159,29],[200,32,159,30],[200,33,159,31,"replace"],[200,40,159,38],[200,41,159,39],[200,74,159,72],[200,76,159,74],[200,86,159,74,"char"],[200,90,159,78],[201,14,159,78],[201,21,159,82,"encodeURIComponent"],[201,39,159,100],[201,40,159,101,"char"],[201,44,159,105],[201,45,159,106],[202,12,159,106],[202,14,159,107],[203,10,160,8],[204,10,161,8],[204,17,161,15,"encodeURIComponent"],[204,35,161,33],[204,36,161,34,"segment"],[204,43,161,41],[204,44,161,42],[205,8,162,6],[205,9,162,7],[205,10,162,8],[205,11,162,9,"join"],[205,15,162,13],[205,16,162,14],[205,19,162,17],[205,20,162,18],[206,6,163,4],[206,7,163,5],[206,13,163,11],[207,8,164,6,"path"],[207,12,164,10],[207,16,164,14,"encodeURIComponent"],[207,34,164,32],[207,35,164,33,"route"],[207,40,164,38],[207,41,164,39,"name"],[207,45,164,43],[207,46,164,44],[208,6,165,4],[209,6,166,4],[209,10,166,8],[209,11,166,9,"focusedParams"],[209,24,166,22],[209,28,166,26,"focusedRoute"],[209,40,166,38],[209,41,166,39,"params"],[209,47,166,45],[209,49,166,47],[210,8,167,6,"focusedParams"],[210,21,167,19],[210,24,167,22,"Object"],[210,30,167,28],[210,31,167,29,"fromEntries"],[210,42,167,40],[210,43,167,41,"Object"],[210,49,167,47],[210,50,167,48,"entries"],[210,57,167,55],[210,58,167,56,"focusedRoute"],[210,70,167,68],[210,71,167,69,"params"],[210,77,167,75],[210,78,167,76],[210,79,167,77,"map"],[210,82,167,80],[210,83,167,81],[210,93,167,81,"_ref2"],[210,98,167,81],[211,10,167,81],[211,14,167,81,"_ref3"],[211,19,167,81],[211,26,167,81,"_slicedToArray"],[211,40,167,81],[211,41,167,81,"default"],[211,48,167,81],[211,50,167,81,"_ref2"],[211,55,167,81],[212,12,167,83,"key"],[212,15,167,86],[212,18,167,86,"_ref3"],[212,23,167,86],[213,12,167,88,"value"],[213,17,167,93],[213,20,167,93,"_ref3"],[213,25,167,93],[214,10,167,93],[214,17,167,99],[214,18,167,100,"key"],[214,21,167,103],[214,23,167,105,"String"],[214,29,167,111],[214,30,167,112,"value"],[214,35,167,117],[214,36,167,118],[214,37,167,119],[215,8,167,119],[215,10,167,120],[215,11,167,121],[216,6,168,4],[217,6,169,4],[217,10,169,8,"route"],[217,15,169,13],[217,16,169,14,"state"],[217,21,169,19],[217,23,169,21],[218,8,170,6,"path"],[218,12,170,10],[218,16,170,14],[218,19,170,17],[219,6,171,4],[219,7,171,5],[219,13,171,11],[219,17,171,15,"focusedParams"],[219,30,171,28],[219,32,171,30],[220,8,172,6],[220,13,172,11],[220,17,172,17,"param"],[220,22,172,22],[220,26,172,26,"focusedParams"],[220,39,172,39],[220,41,172,41],[221,10,173,8],[221,14,173,12,"focusedParams"],[221,27,173,25],[221,28,173,26,"param"],[221,33,173,31],[221,34,173,32],[221,39,173,37],[221,50,173,48],[221,52,173,50],[222,12,174,10],[223,12,175,10],[223,19,175,17,"focusedParams"],[223,32,175,30],[223,33,175,31,"param"],[223,38,175,36],[223,39,175,37],[224,10,176,8],[225,8,177,6],[226,8,178,6],[226,12,178,12,"query"],[226,17,178,17],[226,20,178,20,"queryString"],[226,31,178,31],[226,32,178,32,"stringify"],[226,41,178,41],[226,42,178,42,"focusedParams"],[226,55,178,55],[226,57,178,57],[227,10,179,8,"sort"],[227,14,179,12],[227,16,179,14],[228,8,180,6],[228,9,180,7],[228,10,180,8],[229,8,181,6],[229,12,181,10,"query"],[229,17,181,15],[229,19,181,17],[230,10,182,8,"path"],[230,14,182,12],[230,18,182,16],[230,22,182,20,"query"],[230,27,182,25],[230,29,182,27],[231,8,183,6],[232,6,184,4],[233,6,185,4,"current"],[233,13,185,11],[233,16,185,14,"route"],[233,21,185,19],[233,22,185,20,"state"],[233,27,185,25],[234,4,186,2],[234,5,186,3],[235,4,63,2],[235,11,63,9,"current"],[235,18,63,16],[236,6,63,16,"_loop"],[236,11,63,16],[237,4,63,16],[239,4,188,2],[240,4,189,2],[240,8,189,6,"options"],[240,15,189,13],[240,27,189,6,"options"],[240,34,189,13],[240,35,189,15,"path"],[240,39,189,19],[240,41,189,21],[241,6,190,4,"path"],[241,10,190,8],[241,13,190,11],[241,16,190,14,"options"],[241,23,190,21],[241,24,190,22,"path"],[241,28,190,26],[241,32,190,30,"path"],[241,36,190,34],[241,38,190,36],[242,4,191,2],[244,4,193,2],[245,4,194,2,"path"],[245,8,194,6],[245,11,194,9,"path"],[245,15,194,13],[245,16,194,14,"replace"],[245,23,194,21],[245,24,194,22],[245,30,194,28],[245,32,194,30],[245,35,194,33],[245,36,194,34],[246,4,195,2,"path"],[246,8,195,6],[246,11,195,9,"path"],[246,15,195,13],[246,16,195,14,"length"],[246,22,195,20],[246,25,195,23],[246,26,195,24],[246,29,195,27,"path"],[246,33,195,31],[246,34,195,32,"replace"],[246,41,195,39],[246,42,195,40],[246,47,195,45],[246,49,195,47],[246,51,195,49],[246,52,195,50],[246,55,195,53,"path"],[246,59,195,57],[248,4,197,2],[249,4,198,2],[250,4,199,2],[250,8,199,6],[250,9,199,7,"path"],[250,13,199,11],[250,14,199,12,"startsWith"],[250,24,199,22],[250,25,199,23],[250,28,199,26],[250,29,199,27],[250,31,199,29],[251,6,200,4,"path"],[251,10,200,8],[251,13,200,11],[251,17,200,15,"path"],[251,21,200,19],[251,23,200,21],[252,4,201,2],[253,4,202,2],[253,11,202,9,"path"],[253,15,202,13],[254,2,203,0],[255,2,204,0],[255,6,204,6,"createConfigItem"],[255,22,204,22],[255,25,204,25],[255,34,204,6,"createConfigItem"],[255,50,204,22,"createConfigItem"],[255,51,204,26,"config"],[255,57,204,32],[255,59,204,34,"parentParts"],[255,70,204,45],[255,72,204,50],[256,4,205,2],[256,8,205,6],[256,15,205,13,"config"],[256,21,205,19],[256,26,205,24],[256,34,205,32],[256,36,205,34],[257,6,206,4],[258,6,207,4],[258,10,207,10,"parts"],[258,17,207,15],[258,20,207,18],[258,24,207,18,"getPatternParts"],[258,42,207,33],[258,43,207,33,"getPatternParts"],[258,58,207,33],[258,60,207,34,"config"],[258,66,207,40],[258,67,207,41],[259,6,208,4],[259,10,208,8,"parentParts"],[259,21,208,19],[259,23,208,21],[260,8,209,6],[260,15,209,13],[261,10,210,8,"parts"],[261,15,210,13],[261,20,210,13,"concat"],[261,26,210,13],[261,31,210,13,"_toConsumableArray"],[261,49,210,13],[261,50,210,13,"default"],[261,57,210,13],[261,59,210,19,"parentParts"],[261,70,210,30],[261,77,210,30,"_toConsumableArray"],[261,95,210,30],[261,96,210,30,"default"],[261,103,210,30],[261,105,210,35,"parts"],[261,112,210,40],[262,8,211,6],[262,9,211,7],[263,6,212,4],[264,6,213,4],[264,13,213,11],[265,8,214,6,"parts"],[265,13,214,11],[265,15,214,6,"parts"],[266,6,215,4],[266,7,215,5],[267,4,216,2],[268,4,217,2],[268,8,217,6,"config"],[268,14,217,12],[268,15,217,13,"exact"],[268,20,217,18],[268,24,217,22,"config"],[268,30,217,28],[268,31,217,29,"path"],[268,35,217,33],[268,40,217,38,"undefined"],[268,49,217,47],[268,51,217,49],[269,6,218,4],[269,12,218,10],[269,16,218,14,"Error"],[269,21,218,19],[269,22,218,20],[269,172,218,170],[269,173,218,171],[270,4,219,2],[272,4,221,2],[273,4,222,2],[274,4,223,2],[274,8,223,8,"parts"],[274,13,223,13],[274,16,223,16,"config"],[274,22,223,22],[274,23,223,23,"exact"],[274,28,223,28],[274,33,223,33],[274,37,223,37],[274,43,223,37,"concat"],[274,49,223,37],[274,54,223,37,"_toConsumableArray"],[274,72,223,37],[274,73,223,37,"default"],[274,80,223,37],[274,82,223,45,"parentParts"],[274,93,223,56],[274,97,223,60],[274,99,223,62],[274,106,223,62,"_toConsumableArray"],[274,124,223,62],[274,125,223,62,"default"],[274,132,223,62],[274,134,223,69,"config"],[274,140,223,75],[274,141,223,76,"path"],[274,145,223,80],[274,148,223,83],[274,152,223,83,"getPatternParts"],[274,170,223,98],[274,171,223,98,"getPatternParts"],[274,186,223,98],[274,188,223,99,"config"],[274,194,223,105],[274,195,223,106,"path"],[274,199,223,110],[274,200,223,111],[274,203,223,114],[274,205,223,116],[274,210,223,121,"config"],[274,216,223,127],[274,217,223,128,"path"],[274,221,223,132],[274,224,223,135],[274,228,223,135,"getPatternParts"],[274,246,223,150],[274,247,223,150,"getPatternParts"],[274,262,223,150],[274,264,223,151,"config"],[274,270,223,157],[274,271,223,158,"path"],[274,275,223,162],[274,276,223,163],[274,279,223,166,"undefined"],[274,288,223,175],[275,4,224,2],[275,8,224,8,"screens"],[275,15,224,15],[275,18,224,18,"config"],[275,24,224,24],[275,25,224,25,"screens"],[275,32,224,32],[275,35,224,35,"createNormalizedConfigs"],[275,58,224,58],[275,59,224,59,"config"],[275,65,224,65],[275,66,224,66,"screens"],[275,73,224,73],[275,75,224,75,"parts"],[275,80,224,80],[275,81,224,81],[275,84,224,84,"undefined"],[275,93,224,93],[276,4,225,2],[276,11,225,9],[277,6,226,4,"parts"],[277,11,226,9],[277,13,226,4,"parts"],[277,18,226,9],[278,6,227,4,"stringify"],[278,15,227,13],[278,17,227,15,"config"],[278,23,227,21],[278,24,227,22,"stringify"],[278,33,227,31],[279,6,228,4,"screens"],[279,13,228,11],[279,15,228,4,"screens"],[280,4,229,2],[280,5,229,3],[281,2,230,0],[281,3,230,1],[282,2,231,0],[282,6,231,6,"createNormalizedConfigs"],[282,29,231,29],[282,32,231,32],[282,41,231,6,"createNormalizedConfigs"],[282,64,231,29,"createNormalizedConfigs"],[282,65,231,33,"options"],[282,72,231,40],[282,74,231,42,"parts"],[282,79,231,47],[283,4,231,47],[283,11,231,52,"Object"],[283,17,231,58],[283,18,231,59,"fromEntries"],[283,29,231,70],[283,30,231,71,"Object"],[283,36,231,77],[283,37,231,78,"entries"],[283,44,231,85],[283,45,231,86,"options"],[283,52,231,93],[283,53,231,94],[283,54,231,95,"map"],[283,57,231,98],[283,58,231,99],[283,68,231,99,"_ref7"],[283,73,231,99],[283,75,231,114],[284,6,231,114],[284,10,231,114,"_ref8"],[284,15,231,114],[284,22,231,114,"_slicedToArray"],[284,36,231,114],[284,37,231,114,"default"],[284,44,231,114],[284,46,231,114,"_ref7"],[284,51,231,114],[285,8,231,101,"name"],[285,12,231,105],[285,15,231,105,"_ref8"],[285,20,231,105],[286,8,231,107,"c"],[286,9,231,108],[286,12,231,108,"_ref8"],[286,17,231,108],[287,6,232,2],[287,10,232,8,"result"],[287,16,232,14],[287,19,232,17,"createConfigItem"],[287,35,232,33],[287,36,232,34,"c"],[287,37,232,35],[287,39,232,37,"parts"],[287,44,232,42],[287,45,232,43],[288,6,233,2],[288,13,233,9],[288,14,233,10,"name"],[288,18,233,14],[288,20,233,16,"result"],[288,26,233,22],[288,27,233,23],[289,4,234,0],[289,5,234,1],[289,6,234,2],[289,7,234,3],[290,2,234,3],[291,0,234,4],[291,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;0ECsB,gCD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"},"hasCjsExports":false},"type":"js/module"}]}