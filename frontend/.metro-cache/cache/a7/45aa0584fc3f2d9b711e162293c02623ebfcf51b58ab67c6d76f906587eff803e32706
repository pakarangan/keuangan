{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":52,"index":113}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useEvent = useEvent;\n  exports.useEventListener = useEventListener;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  /**\n   * Type helper that infers the event name from the emitter's events map.\n   */\n\n  /**\n   * Type helper that infers the event listener from the emitter's events map.\n   */\n\n  /**\n   * Type helper that infers the first parameter of the event listener.\n   */\n\n  /**\n   * React hook that listens to events emitted by the given object. The returned value is an event parameter\n   * that gets updated whenever a new event is dispatched.\n   * @param eventEmitter An object that emits events. For example, a native module or shared object or an instance of [`EventEmitter`](#eventemitter).\n   * @param eventName Name of the event to listen to.\n   * @param initialValue An event parameter to use until the event is called for the first time.\n   * @returns A parameter of the event listener.\n   * @example\n   * ```tsx\n   * import { useEvent } from 'expo';\n   * import { VideoPlayer } from 'expo-video';\n   *\n   * export function PlayerStatus({ videoPlayer }: { videoPlayer: VideoPlayer }) {\n   *   const { status } = useEvent(videoPlayer, 'statusChange', { status: videoPlayer.status });\n   *\n   *   return <Text>{`Player status: ${status}`}</Text>;\n   * }\n   * ```\n   */\n  function useEvent(eventEmitter, eventName) {\n    var initialValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var _useState = (0, _react.useState)(initialValue),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n    var listener = function listener(event) {\n      return setEvent(event);\n    };\n    useEventListener(eventEmitter, eventName, listener);\n    return event;\n  }\n\n  /**\n   * React hook that listens to events emitted by the given object and calls the listener function whenever a new event is dispatched.\n   * The event listener is automatically added during the first render and removed when the component unmounts.\n   * @param eventEmitter An object that emits events. For example, a native module or shared object or an instance of [`EventEmitter`](#eventemitter).\n   * @param eventName Name of the event to listen to.\n   * @param listener A function to call when the event is dispatched.\n   * @example\n   * ```tsx\n   * import { useEventListener } from 'expo';\n   * import { useVideoPlayer, VideoView } from 'expo-video';\n   *\n   * export function VideoPlayerView() {\n   *   const player = useVideoPlayer(videoSource);\n   *\n   *   useEventListener(player, 'playingChange', ({ isPlaying }) => {\n   *     console.log('Player is playing:', isPlaying);\n   *   });\n   *\n   *   return <VideoView player={player} />;\n   * }\n   * ```\n   */\n  function useEventListener(eventEmitter, eventName, listener) {\n    // Always use the most recent version of the listener inside the effect,\n    // without memoization so the listeners don't have to be swapped with every render.\n    var listenerRef = (0, _react.useRef)(listener);\n    listenerRef.current = listener;\n    (0, _react.useEffect)(function () {\n      var callback = function callback() {\n        return listenerRef.current.apply(listenerRef, arguments);\n      };\n      var subscription = eventEmitter.addListener(eventName, callback);\n      return function () {\n        return subscription.remove();\n      };\n    }, [eventEmitter, eventName, listenerRef]);\n  }\n});","lineCount":98,"map":[[12,2,51,0,"exports"],[12,9,51,0],[12,10,51,0,"useEvent"],[12,18,51,0],[12,21,51,0,"useEvent"],[12,29,51,0],[13,2,93,0,"exports"],[13,9,93,0],[13,10,93,0,"useEventListener"],[13,26,93,0],[13,29,93,0,"useEventListener"],[13,45,93,0],[14,2,112,1],[14,6,112,1,"_babelRuntimeHelpersSlicedToArray"],[14,39,112,1],[14,42,112,1,"require"],[14,49,112,1],[14,50,112,1,"_dependencyMap"],[14,64,112,1],[15,2,112,1],[15,6,112,1,"_slicedToArray"],[15,20,112,1],[15,23,112,1,"_interopDefault"],[15,38,112,1],[15,39,112,1,"_babelRuntimeHelpersSlicedToArray"],[15,72,112,1],[16,2,2,0],[16,6,2,0,"_react"],[16,12,2,0],[16,15,2,0,"require"],[16,22,2,0],[16,23,2,0,"_dependencyMap"],[16,37,2,0],[17,2,6,0],[18,0,7,0],[19,0,8,0],[21,2,14,0],[22,0,15,0],[23,0,16,0],[25,2,22,0],[26,0,23,0],[27,0,24,0],[29,2,32,0],[30,0,33,0],[31,0,34,0],[32,0,35,0],[33,0,36,0],[34,0,37,0],[35,0,38,0],[36,0,39,0],[37,0,40,0],[38,0,41,0],[39,0,42,0],[40,0,43,0],[41,0,44,0],[42,0,45,0],[43,0,46,0],[44,0,47,0],[45,0,48,0],[46,0,49,0],[47,0,50,0],[48,2,51,7],[48,11,51,16,"useEvent"],[48,19,51,24,"useEvent"],[48,20,57,2,"eventEmitter"],[48,32,57,40],[48,34,58,2,"eventName"],[48,43,58,23],[48,45,60,54],[49,4,60,54],[49,8,59,2,"initialValue"],[49,20,59,36],[49,23,59,36,"arguments"],[49,32,59,36],[49,33,59,36,"length"],[49,39,59,36],[49,47,59,36,"arguments"],[49,56,59,36],[49,64,59,36,"undefined"],[49,73,59,36],[49,76,59,36,"arguments"],[49,85,59,36],[49,91,59,39],[49,95,59,43],[50,4,61,2],[50,8,61,2,"_useState"],[50,17,61,2],[50,20,61,28],[50,24,61,28,"useState"],[50,30,61,36],[50,31,61,36,"useState"],[50,39,61,36],[50,41,62,4,"initialValue"],[50,53,63,2],[50,54,63,3],[51,6,63,3,"_useState2"],[51,16,63,3],[51,23,63,3,"_slicedToArray"],[51,37,63,3],[51,38,63,3,"default"],[51,45,63,3],[51,47,63,3,"_useState"],[51,56,63,3],[52,6,61,9,"event"],[52,11,61,14],[52,14,61,14,"_useState2"],[52,24,61,14],[53,6,61,16,"setEvent"],[53,14,61,24],[53,17,61,24,"_useState2"],[53,27,61,24],[54,4,64,2],[54,8,64,8,"listener"],[54,16,64,16],[54,19,64,19],[54,28,64,8,"listener"],[54,36,64,16,"listener"],[54,37,64,20,"event"],[54,42,64,56],[55,6,64,56],[55,13,64,61,"setEvent"],[55,21,64,69],[55,22,64,70,"event"],[55,27,64,75],[55,28,64,76],[56,4,64,76],[57,4,66,2,"useEventListener"],[57,20,66,18],[57,21,66,19,"eventEmitter"],[57,33,66,31],[57,35,66,33,"eventName"],[57,44,66,42],[57,46,66,44,"listener"],[57,54,66,98],[57,55,66,99],[58,4,68,2],[58,11,68,9,"event"],[58,16,68,14],[59,2,69,0],[61,2,71,0],[62,0,72,0],[63,0,73,0],[64,0,74,0],[65,0,75,0],[66,0,76,0],[67,0,77,0],[68,0,78,0],[69,0,79,0],[70,0,80,0],[71,0,81,0],[72,0,82,0],[73,0,83,0],[74,0,84,0],[75,0,85,0],[76,0,86,0],[77,0,87,0],[78,0,88,0],[79,0,89,0],[80,0,90,0],[81,0,91,0],[82,0,92,0],[83,2,93,7],[83,11,93,16,"useEventListener"],[83,27,93,32,"useEventListener"],[83,28,97,2,"eventEmitter"],[83,40,97,40],[83,42,97,42,"eventName"],[83,51,97,63],[83,53,97,65,"listener"],[83,61,97,89],[83,63,97,97],[84,4,98,2],[85,4,99,2],[86,4,100,2],[86,8,100,8,"listenerRef"],[86,19,100,19],[86,22,100,22],[86,26,100,22,"useRef"],[86,32,100,28],[86,33,100,28,"useRef"],[86,39,100,28],[86,41,100,45,"listener"],[86,49,100,53],[86,50,100,54],[87,4,101,2,"listenerRef"],[87,15,101,13],[87,16,101,14,"current"],[87,23,101,21],[87,26,101,24,"listener"],[87,34,101,32],[88,4,103,2],[88,8,103,2,"useEffect"],[88,14,103,11],[88,15,103,11,"useEffect"],[88,24,103,11],[88,26,103,12],[88,38,103,18],[89,6,104,4],[89,10,104,10,"callback"],[89,18,104,18],[89,21,104,21],[89,30,104,10,"callback"],[89,38,104,18,"callback"],[89,39,104,18],[90,8,104,18],[90,15,104,41,"listenerRef"],[90,26,104,52],[90,27,104,53,"current"],[90,34,104,60],[90,35,104,60,"apply"],[90,40,104,60],[90,41,104,41,"listenerRef"],[90,52,104,52],[90,54,104,52,"arguments"],[90,63,104,68],[90,64,104,69],[91,6,104,69],[92,6,105,4],[92,10,105,10,"subscription"],[92,22,105,22],[92,25,105,25,"eventEmitter"],[92,37,105,37],[92,38,105,38,"addListener"],[92,49,105,49],[92,50,106,6,"eventName"],[92,59,106,15],[92,61,107,6,"callback"],[92,69,108,4],[92,70,108,5],[93,6,110,4],[93,13,110,11],[94,8,110,11],[94,15,110,17,"subscription"],[94,27,110,29],[94,28,110,30,"remove"],[94,34,110,36],[94,35,110,37],[94,36,110,38],[95,6,110,38],[96,4,111,2],[96,5,111,3],[96,7,111,5],[96,8,111,6,"eventEmitter"],[96,20,111,18],[96,22,111,20,"eventName"],[96,31,111,29],[96,33,111,31,"listenerRef"],[96,44,111,42],[96,45,111,43],[96,46,111,44],[97,2,112,0],[98,0,112,1],[98,3]],"functionMap":{"names":["<global>","useEvent","listener","useEventListener","useEffect$argument_0","callback","<anonymous>"],"mappings":"AAA;OCkD;mBCa,yDD;CDK;OGwB;YCU;qBCC,gDD;WEM,2BF;GDC;CHC"},"hasCjsExports":false},"type":"js/module"}]}