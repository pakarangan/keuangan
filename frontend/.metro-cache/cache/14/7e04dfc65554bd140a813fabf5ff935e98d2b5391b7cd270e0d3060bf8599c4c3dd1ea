{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":389},"end":{"line":11,"column":65,"index":454}}],"key":"+RxcUzp4ciHymeUULASNlv4i8Rk=","exportNames":["*"],"imports":1}},{"name":"pretty-format","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":455},"end":{"line":12,"column":54,"index":509}}],"key":"aXyG2GzrqNhJvIb2xvve/rJFBZA=","exportNames":["*"],"imports":1}},{"name":"./LoadingView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":511},"end":{"line":14,"column":40,"index":551}}],"key":"s9s4ribtctXRQH+3J26+63eGaRs=","exportNames":["*"],"imports":1}},{"name":"./error-overlay/LogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":552},"end":{"line":15,"column":44,"index":596}}],"key":"u1FnUfQ9dRX5CoqYWf/6NpeP41c=","exportNames":["*"],"imports":1}},{"name":"./getDevServer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":597},"end":{"line":16,"column":42,"index":639}}],"key":"WKfBgnKYQ+362ADqmV6Rh2L8YC4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _metroRuntimeSrcModulesHMRClient = require(_dependencyMap[1], \"metro-runtime/src/modules/HMRClient\");\n  var MetroHMRClient = _interopDefault(_metroRuntimeSrcModulesHMRClient);\n  var _prettyFormat = require(_dependencyMap[2], \"pretty-format\");\n  var prettyFormat = _interopDefault(_prettyFormat);\n  var _LoadingView = require(_dependencyMap[3], \"./LoadingView\");\n  var LoadingView = _interopDefault(_LoadingView);\n  var _errorOverlayLogBox = require(_dependencyMap[4], \"./error-overlay/LogBox\");\n  var LogBox = _interopDefault(_errorOverlayLogBox);\n  var _getDevServer2 = require(_dependencyMap[5], \"./getDevServer\");\n  var getDevServer = _interopDefault(_getDevServer2);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Based on this but with web support:\n   * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n   */\n\n  var pendingEntryPoints = [];\n\n  // @ts-expect-error: Account for multiple versions of pretty-format inside of a monorepo.\n  var prettyFormatFunc = typeof prettyFormat.default === 'function' ? prettyFormat.default : prettyFormat.default.default;\n  var hmrClient = null;\n  var hmrUnavailableReason = null;\n  var currentCompileErrorMessage = null;\n  var didConnect = false;\n  var pendingLogs = [];\n  function assert(foo, msg) {\n    if (!foo) throw new Error(msg);\n  }\n\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  var HMRClient = {\n    enable: function enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      var hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        LoadingView.default.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.default.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable: function disable() {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle: function registerBundle(requestUrl) {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log: function log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level: level,\n          platform: 'web',\n          mode: 'BRIDGE',\n          data: data.map(function (item) {\n            return typeof item === 'string' ? item : prettyFormatFunc(item, {\n              escapeString: true,\n              highlight: true,\n              maxDepth: 3,\n              min: true,\n              plugins: [_prettyFormat.plugins.ReactElement]\n            });\n          })\n        }));\n      } catch (_unused) {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup: function setup(_ref) {\n      var isEnabled = _ref.isEnabled;\n      assert(!hmrClient, 'Cannot initialize hmrClient twice');\n      var serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      var client = new MetroHMRClient.default(`${serverScheme}://${window.location.host}/hot`);\n      hmrClient = client;\n      var _getDevServer = (0, getDevServer.default)(),\n        fullBundleUrl = _getDevServer.fullBundleUrl;\n      pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl);\n      client.on('connection-error', function (e) {\n        var error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n        error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', function (_ref2) {\n        var isInitialUpdate = _ref2.isInitialUpdate;\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.default.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', function (_ref3) {\n        var isInitialUpdate = _ref3.isInitialUpdate;\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', function () {\n        LoadingView.default.hide();\n      });\n      client.on('error', function (data) {\n        LoadingView.default.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', function (closeEvent) {\n        LoadingView.default.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        var isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs();\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      // \"Bundle Splitting – Metro disconnected\"\n      window.location.reload();\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client == null || client.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs() {\n    try {\n      pendingLogs.forEach(function (_ref4) {\n        var _ref5 = (0, _slicedToArray.default)(_ref4, 2),\n          level = _ref5[0],\n          data = _ref5[1];\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    // TODO(EvanBacon): Error overlay for web.\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    var message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    var error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    // @ts-expect-error\n    error.preventSymbolication = true;\n    throw error;\n  }\n  var _default = HMRClient;\n});","lineCount":278,"map":[[12,2,320,0,"Object"],[12,8,320,0],[12,9,320,0,"defineProperty"],[12,23,320,0],[12,24,320,0,"exports"],[12,31,320,0],[13,4,320,0,"enumerable"],[13,14,320,0],[14,4,320,0,"get"],[14,7,320,0],[14,18,320,0,"get"],[14,19,320,0],[15,6,320,0],[15,13,320,0,"_default"],[15,21,320,0],[16,4,320,0],[17,2,320,0],[18,2,320,25],[18,6,320,25,"_babelRuntimeHelpersSlicedToArray"],[18,39,320,25],[18,42,320,25,"require"],[18,49,320,25],[18,50,320,25,"_dependencyMap"],[18,64,320,25],[19,2,320,25],[19,6,320,25,"_slicedToArray"],[19,20,320,25],[19,23,320,25,"_interopDefault"],[19,38,320,25],[19,39,320,25,"_babelRuntimeHelpersSlicedToArray"],[19,72,320,25],[20,2,11,0],[20,6,11,0,"_metroRuntimeSrcModulesHMRClient"],[20,38,11,0],[20,41,11,0,"require"],[20,48,11,0],[20,49,11,0,"_dependencyMap"],[20,63,11,0],[21,2,11,0],[21,6,11,0,"MetroHMRClient"],[21,20,11,0],[21,23,11,0,"_interopDefault"],[21,38,11,0],[21,39,11,0,"_metroRuntimeSrcModulesHMRClient"],[21,71,11,0],[22,2,12,0],[22,6,12,0,"_prettyFormat"],[22,19,12,0],[22,22,12,0,"require"],[22,29,12,0],[22,30,12,0,"_dependencyMap"],[22,44,12,0],[23,2,12,0],[23,6,12,0,"prettyFormat"],[23,18,12,0],[23,21,12,0,"_interopDefault"],[23,36,12,0],[23,37,12,0,"_prettyFormat"],[23,50,12,0],[24,2,14,0],[24,6,14,0,"_LoadingView"],[24,18,14,0],[24,21,14,0,"require"],[24,28,14,0],[24,29,14,0,"_dependencyMap"],[24,43,14,0],[25,2,14,0],[25,6,14,0,"LoadingView"],[25,17,14,0],[25,20,14,0,"_interopDefault"],[25,35,14,0],[25,36,14,0,"_LoadingView"],[25,48,14,0],[26,2,15,0],[26,6,15,0,"_errorOverlayLogBox"],[26,25,15,0],[26,28,15,0,"require"],[26,35,15,0],[26,36,15,0,"_dependencyMap"],[26,50,15,0],[27,2,15,0],[27,6,15,0,"LogBox"],[27,12,15,0],[27,15,15,0,"_interopDefault"],[27,30,15,0],[27,31,15,0,"_errorOverlayLogBox"],[27,50,15,0],[28,2,16,0],[28,6,16,0,"_getDevServer2"],[28,20,16,0],[28,23,16,0,"require"],[28,30,16,0],[28,31,16,0,"_dependencyMap"],[28,45,16,0],[29,2,16,0],[29,6,16,0,"getDevServer"],[29,18,16,0],[29,21,16,0,"_interopDefault"],[29,36,16,0],[29,37,16,0,"_getDevServer2"],[29,51,16,0],[30,2,1,0],[31,0,2,0],[32,0,3,0],[33,0,4,0],[34,0,5,0],[35,0,6,0],[36,0,7,0],[37,0,8,0],[38,0,9,0],[39,0,10,0],[41,2,18,0],[41,6,18,6,"pendingEntryPoints"],[41,24,18,34],[41,27,18,37],[41,29,18,39],[43,2,20,0],[44,2,21,0],[44,6,21,6,"prettyFormatFunc"],[44,22,21,22],[44,25,21,25],[44,32,21,32,"prettyFormat"],[44,44,21,44],[44,45,21,44,"default"],[44,52,21,44],[44,57,21,49],[44,67,21,59],[44,70,21,62,"prettyFormat"],[44,82,21,74],[44,83,21,74,"default"],[44,90,21,74],[44,93,21,77,"prettyFormat"],[44,105,21,89],[44,106,21,89,"default"],[44,113,21,89],[44,114,21,90,"default"],[44,121,21,97],[45,2,31,0],[45,6,31,4,"hmrClient"],[45,15,31,35],[45,18,31,38],[45,22,31,42],[46,2,32,0],[46,6,32,4,"hmrUnavailableReason"],[46,26,32,39],[46,29,32,42],[46,33,32,46],[47,2,33,0],[47,6,33,4,"currentCompileErrorMessage"],[47,32,33,45],[47,35,33,48],[47,39,33,52],[48,2,34,0],[48,6,34,4,"didConnect"],[48,16,34,23],[48,19,34,26],[48,24,34,31],[49,2,35,0],[49,6,35,6,"pendingLogs"],[49,17,35,38],[49,20,35,41],[49,22,35,43],[50,2,56,0],[50,11,56,9,"assert"],[50,17,56,15,"assert"],[50,18,56,16,"foo"],[50,21,56,24],[50,23,56,26,"msg"],[50,26,56,37],[50,28,56,52],[51,4,57,2],[51,8,57,6],[51,9,57,7,"foo"],[51,12,57,10],[51,14,57,12],[51,20,57,18],[51,24,57,22,"Error"],[51,29,57,27],[51,30,57,28,"msg"],[51,33,57,31],[51,34,57,32],[52,2,58,0],[54,2,60,0],[55,0,61,0],[56,0,62,0],[57,0,63,0],[58,2,64,0],[58,6,64,6,"HMRClient"],[58,15,64,41],[58,18,64,44],[59,4,65,2,"enable"],[59,10,65,8],[59,21,65,2,"enable"],[59,27,65,8,"enable"],[59,28,65,8],[59,30,65,11],[60,6,66,4],[60,10,66,8,"hmrUnavailableReason"],[60,30,66,28],[60,35,66,33],[60,39,66,37],[60,41,66,39],[61,8,67,6],[62,8,68,6],[63,8,69,6],[64,8,70,6],[65,8,71,6],[65,14,71,12],[65,18,71,16,"Error"],[65,23,71,21],[65,24,71,22,"hmrUnavailableReason"],[65,44,71,42],[65,45,71,43],[66,6,72,4],[67,6,74,4,"assert"],[67,12,74,10],[67,13,74,11,"hmrClient"],[67,22,74,20],[67,24,74,22],[67,69,74,67],[67,70,74,68],[69,6,76,4],[70,6,77,4],[71,6,78,4,"hmrClient"],[71,15,78,13],[71,16,78,14,"send"],[71,20,78,18],[71,21,78,19,"JSON"],[71,25,78,23],[71,26,78,24,"stringify"],[71,35,78,33],[71,36,78,34],[72,8,78,36,"type"],[72,12,78,40],[72,14,78,42],[73,6,78,55],[73,7,78,56],[73,8,78,57],[73,9,78,58],[75,6,80,4],[76,6,81,4],[77,6,82,4],[77,10,82,10,"hasUpdates"],[77,20,82,20],[77,23,82,23,"hmrClient"],[77,32,82,32],[77,33,82,34,"hasPendingUpdates"],[77,50,82,51],[77,51,82,52],[77,52,82,53],[78,6,84,4],[78,10,84,8,"hasUpdates"],[78,20,84,18],[78,22,84,20],[79,8,85,6,"LoadingView"],[79,19,85,17],[79,20,85,17,"default"],[79,27,85,17],[79,28,85,18,"showMessage"],[79,39,85,29],[79,40,85,30],[79,55,85,45],[79,57,85,47],[79,66,85,56],[79,67,85,57],[80,6,86,4],[81,6,87,4],[81,10,87,8],[82,8,88,6,"hmrClient"],[82,17,88,15],[82,18,88,16,"enable"],[82,24,88,22],[82,25,88,23],[82,26,88,24],[83,6,89,4],[83,7,89,5],[83,16,89,14],[84,8,90,6],[84,12,90,10,"hasUpdates"],[84,22,90,20],[84,24,90,22],[85,10,91,8,"LoadingView"],[85,21,91,19],[85,22,91,19,"default"],[85,29,91,19],[85,30,91,20,"hide"],[85,34,91,24],[85,35,91,25],[85,36,91,26],[86,8,92,6],[87,6,93,4],[89,6,95,4],[90,6,96,4],[91,6,97,4,"showCompileError"],[91,22,97,20],[91,23,97,21],[91,24,97,22],[92,4,98,2],[92,5,98,3],[93,4,100,2,"disable"],[93,11,100,9],[93,22,100,2,"disable"],[93,29,100,9,"disable"],[93,30,100,9],[93,32,100,12],[94,6,101,4,"assert"],[94,12,101,10],[94,13,101,11,"hmrClient"],[94,22,101,20],[94,24,101,22],[94,69,101,67],[94,70,101,68],[95,6,102,4,"hmrClient"],[95,15,102,13],[95,16,102,14,"disable"],[95,23,102,21],[95,24,102,22],[95,25,102,23],[96,4,103,2],[96,5,103,3],[97,4,105,2,"registerBundle"],[97,18,105,16],[97,29,105,2,"registerBundle"],[97,43,105,16,"registerBundle"],[97,44,105,17,"requestUrl"],[97,54,105,35],[97,56,105,37],[98,6,106,4,"assert"],[98,12,106,10],[98,13,106,11,"hmrClient"],[98,22,106,20],[98,24,106,22],[98,69,106,67],[98,70,106,68],[99,6,107,4,"pendingEntryPoints"],[99,24,107,22],[99,25,107,23,"push"],[99,29,107,27],[99,30,107,28,"requestUrl"],[99,40,107,38],[99,41,107,39],[100,6,108,4,"registerBundleEntryPoints"],[100,31,108,29],[100,32,108,30,"hmrClient"],[100,41,108,39],[100,42,108,40],[101,4,109,2],[101,5,109,3],[102,4,111,2,"log"],[102,7,111,5],[102,18,111,2,"log"],[102,21,111,5,"log"],[102,22,111,6,"level"],[102,27,111,21],[102,29,111,23,"data"],[102,33,111,34],[102,35,111,36],[103,6,112,4],[103,10,112,8],[103,11,112,9,"hmrClient"],[103,20,112,18],[103,22,112,20],[104,8,113,6],[105,8,114,6],[106,8,115,6,"pendingLogs"],[106,19,115,17],[106,20,115,18,"push"],[106,24,115,22],[106,25,115,23],[106,26,115,24,"level"],[106,31,115,29],[106,33,115,31,"data"],[106,37,115,35],[106,38,115,36],[106,39,115,37],[107,8,116,6],[107,12,116,10,"pendingLogs"],[107,23,116,21],[107,24,116,22,"length"],[107,30,116,28],[107,33,116,31],[107,36,116,34],[107,38,116,36],[108,10,117,8,"pendingLogs"],[108,21,117,19],[108,22,117,20,"shift"],[108,27,117,25],[108,28,117,26],[108,29,117,27],[109,8,118,6],[110,8,119,6],[111,6,120,4],[112,6,121,4],[112,10,121,8],[113,8,122,6,"hmrClient"],[113,17,122,15],[113,18,122,16,"send"],[113,22,122,20],[113,23,123,8,"JSON"],[113,27,123,12],[113,28,123,13,"stringify"],[113,37,123,22],[113,38,123,23],[114,10,124,10,"type"],[114,14,124,14],[114,16,124,16],[114,21,124,21],[115,10,125,10,"level"],[115,15,125,15],[115,17,125,10,"level"],[115,22,125,15],[116,10,126,10,"platform"],[116,18,126,18],[116,20,126,20],[116,25,126,25],[117,10,127,10,"mode"],[117,14,127,14],[117,16,127,16],[117,24,127,24],[118,10,128,10,"data"],[118,14,128,14],[118,16,128,16,"data"],[118,20,128,20],[118,21,128,21,"map"],[118,24,128,24],[118,25,128,25],[118,35,128,26,"item"],[118,39,128,30],[119,12,128,30],[119,19,129,12],[119,26,129,19,"item"],[119,30,129,23],[119,35,129,28],[119,43,129,36],[119,46,130,16,"item"],[119,50,130,20],[119,53,131,16,"prettyFormatFunc"],[119,69,131,32],[119,70,131,33,"item"],[119,74,131,37],[119,76,131,39],[120,14,132,18,"escapeString"],[120,26,132,30],[120,28,132,32],[120,32,132,36],[121,14,133,18,"highlight"],[121,23,133,27],[121,25,133,29],[121,29,133,33],[122,14,134,18,"maxDepth"],[122,22,134,26],[122,24,134,28],[122,25,134,29],[123,14,135,18,"min"],[123,17,135,21],[123,19,135,23],[123,23,135,27],[124,14,136,18,"plugins"],[124,21,136,25],[124,23,136,27],[124,24,136,28,"plugins"],[124,37,136,35],[124,38,136,35,"plugins"],[124,45,136,35],[124,46,136,36,"ReactElement"],[124,58,136,48],[125,12,137,16],[125,13,137,17],[125,14,137,18],[126,10,137,18],[126,11,138,10],[127,8,139,8],[127,9,139,9],[127,10,140,6],[127,11,140,7],[128,6,141,4],[128,7,141,5],[128,8,141,6],[128,15,141,6,"_unused"],[128,22,141,6],[128,24,141,12],[129,8,142,6],[130,8,143,6],[131,6,143,6],[132,4,145,2],[132,5,145,3],[133,4,147,2],[134,4,148,2],[135,4,149,2,"setup"],[135,9,149,7],[135,20,149,2,"setup"],[135,25,149,7,"setup"],[135,26,149,7,"_ref"],[135,30,149,7],[135,32,149,47],[136,6,149,47],[136,10,149,10,"isEnabled"],[136,19,149,19],[136,22,149,19,"_ref"],[136,26,149,19],[136,27,149,10,"isEnabled"],[136,36,149,19],[137,6,150,4,"assert"],[137,12,150,10],[137,13,150,11],[137,14,150,12,"hmrClient"],[137,23,150,21],[137,25,150,23],[137,60,150,58],[137,61,150,59],[138,6,152,4],[138,10,152,10,"serverScheme"],[138,22,152,22],[138,25,152,25,"window"],[138,31,152,31],[138,32,152,32,"location"],[138,40,152,40],[138,41,152,41,"protocol"],[138,49,152,49],[138,54,152,54],[138,62,152,62],[138,65,152,65],[138,70,152,70],[138,73,152,73],[138,77,152,77],[139,6,153,4],[139,10,153,10,"client"],[139,16,153,16],[139,19,153,19],[139,23,153,23,"MetroHMRClient"],[139,37,153,37],[139,38,153,37,"default"],[139,45,153,37],[139,46,153,38],[139,49,153,41,"serverScheme"],[139,61,153,53],[139,67,153,59,"window"],[139,73,153,65],[139,74,153,66,"location"],[139,82,153,74],[139,83,153,75,"host"],[139,87,153,79],[139,93,153,85],[139,94,153,86],[140,6,154,4,"hmrClient"],[140,15,154,13],[140,18,154,16,"client"],[140,24,154,22],[141,6,156,4],[141,10,156,4,"_getDevServer"],[141,23,156,4],[141,26,156,30],[141,30,156,30,"getDevServer"],[141,42,156,42],[141,43,156,42,"default"],[141,50,156,42],[141,52,156,43],[141,53,156,44],[142,8,156,12,"fullBundleUrl"],[142,21,156,25],[142,24,156,25,"_getDevServer"],[142,37,156,25],[142,38,156,12,"fullBundleUrl"],[142,51,156,25],[143,6,157,4,"pendingEntryPoints"],[143,24,157,22],[143,25,157,23,"push"],[143,29,157,27],[144,6,158,6],[145,6,159,6],[146,6,160,6],[147,6,161,6,"fullBundleUrl"],[147,19,162,4],[147,20,162,5],[148,6,164,4,"client"],[148,12,164,10],[148,13,164,11,"on"],[148,15,164,13],[148,16,164,14],[148,34,164,32],[148,36,164,34],[148,46,164,35,"e"],[148,47,164,43],[148,49,164,48],[149,8,165,6],[149,12,165,10,"error"],[149,17,165,15],[149,20,165,18],[150,0,166,0],[151,0,167,0],[152,0,168,0],[152,91,168,91],[153,8,169,6,"error"],[153,13,169,11],[153,17,169,15],[154,0,170,0],[155,0,171,0],[155,8,171,8,"window"],[155,14,171,14],[155,15,171,15,"location"],[155,23,171,23],[155,24,171,24,"host"],[155,28,171,28],[156,0,172,0],[157,0,173,0],[157,10,173,10,"e"],[157,11,173,11],[157,12,173,12,"message"],[157,19,173,19],[157,21,173,21],[158,8,175,6,"setHMRUnavailableReason"],[158,31,175,29],[158,32,175,30,"error"],[158,37,175,35],[158,38,175,36],[159,6,176,4],[159,7,176,5],[159,8,176,6],[160,6,178,4,"client"],[160,12,178,10],[160,13,178,11,"on"],[160,15,178,13],[160,16,178,14],[160,30,178,28],[160,32,178,30],[160,42,178,30,"_ref2"],[160,47,178,30],[160,49,178,86],[161,8,178,86],[161,12,178,33,"isInitialUpdate"],[161,27,178,48],[161,30,178,48,"_ref2"],[161,35,178,48],[161,36,178,33,"isInitialUpdate"],[161,51,178,48],[162,8,179,6,"currentCompileErrorMessage"],[162,34,179,32],[162,37,179,35],[162,41,179,39],[163,8,180,6,"didConnect"],[163,18,180,16],[163,21,180,19],[163,25,180,23],[164,8,182,6],[164,12,182,10,"client"],[164,18,182,16],[164,19,182,17,"isEnabled"],[164,28,182,26],[164,29,182,27],[164,30,182,28],[164,34,182,32],[164,35,182,33,"isInitialUpdate"],[164,50,182,48],[164,52,182,50],[165,10,183,8,"LoadingView"],[165,21,183,19],[165,22,183,19,"default"],[165,29,183,19],[165,30,183,20,"showMessage"],[165,41,183,31],[165,42,183,32],[165,57,183,47],[165,59,183,49],[165,68,183,58],[165,69,183,59],[166,8,184,6],[167,6,185,4],[167,7,185,5],[167,8,185,6],[168,6,187,4,"client"],[168,12,187,10],[168,13,187,11,"on"],[168,15,187,13],[168,16,187,14],[168,24,187,22],[168,26,187,24],[168,36,187,24,"_ref3"],[168,41,187,24],[168,43,187,80],[169,8,187,80],[169,12,187,27,"isInitialUpdate"],[169,27,187,42],[169,30,187,42,"_ref3"],[169,35,187,42],[169,36,187,27,"isInitialUpdate"],[169,51,187,42],[170,8,188,6],[170,12,188,10,"client"],[170,18,188,16],[170,19,188,17,"isEnabled"],[170,28,188,26],[170,29,188,27],[170,30,188,28],[170,34,188,32],[170,35,188,33,"isInitialUpdate"],[170,50,188,48],[170,52,188,50],[171,10,189,8,"dismissRedbox"],[171,23,189,21],[171,24,189,22],[171,25,189,23],[172,10,190,8,"LogBox"],[172,16,190,14],[172,17,190,14,"default"],[172,24,190,14],[172,25,190,15,"clearAllLogs"],[172,37,190,27],[172,38,190,28],[172,39,190,29],[173,8,191,6],[174,6,192,4],[174,7,192,5],[174,8,192,6],[175,6,194,4,"client"],[175,12,194,10],[175,13,194,11,"on"],[175,15,194,13],[175,16,194,14],[175,29,194,27],[175,31,194,29],[175,43,194,35],[176,8,195,6,"LoadingView"],[176,19,195,17],[176,20,195,17,"default"],[176,27,195,17],[176,28,195,18,"hide"],[176,32,195,22],[176,33,195,23],[176,34,195,24],[177,6,196,4],[177,7,196,5],[177,8,196,6],[178,6,198,4,"client"],[178,12,198,10],[178,13,198,11,"on"],[178,15,198,13],[178,16,198,14],[178,23,198,21],[178,25,198,23],[178,35,198,24,"data"],[178,39,198,63],[178,41,198,68],[179,8,199,6,"LoadingView"],[179,19,199,17],[179,20,199,17,"default"],[179,27,199,17],[179,28,199,18,"hide"],[179,32,199,22],[179,33,199,23],[179,34,199,24],[180,8,201,6],[180,12,201,10,"data"],[180,16,201,14],[180,17,201,15,"type"],[180,21,201,19],[180,26,201,24],[180,46,201,44],[180,48,201,46],[181,10,202,8,"client"],[181,16,202,14],[181,17,202,15,"close"],[181,22,202,20],[181,23,202,21],[181,24,202,22],[182,10,203,8,"setHMRUnavailableReason"],[182,33,203,31],[182,34,203,32],[182,97,203,95],[182,98,203,96],[183,8,204,6],[183,9,204,7],[183,15,204,13],[183,19,204,17,"data"],[183,23,204,21],[183,24,204,22,"type"],[183,28,204,26],[183,33,204,31],[183,56,204,54],[183,58,204,56],[184,10,205,8,"client"],[184,16,205,14],[184,17,205,15,"close"],[184,22,205,20],[184,23,205,21],[184,24,205,22],[185,10,206,8,"setHMRUnavailableReason"],[185,33,206,31],[185,34,206,32],[185,94,206,92],[185,95,206,93],[186,8,207,6],[186,9,207,7],[186,15,207,13],[187,10,208,8,"currentCompileErrorMessage"],[187,36,208,34],[187,39,208,37],[187,42,208,40,"data"],[187,46,208,44],[187,47,208,45,"type"],[187,51,208,49],[187,55,208,53,"data"],[187,59,208,57],[187,60,208,58,"message"],[187,67,208,65],[187,69,208,67],[188,10,209,8],[188,14,209,12,"client"],[188,20,209,18],[188,21,209,19,"isEnabled"],[188,30,209,28],[188,31,209,29],[188,32,209,30],[188,34,209,32],[189,12,210,10,"showCompileError"],[189,28,210,26],[189,29,210,27],[189,30,210,28],[190,10,211,8],[191,8,212,6],[192,6,213,4],[192,7,213,5],[192,8,213,6],[193,6,215,4,"client"],[193,12,215,10],[193,13,215,11,"on"],[193,15,215,13],[193,16,215,14],[193,23,215,21],[193,25,215,23],[193,35,215,24,"closeEvent"],[193,45,215,68],[193,47,215,73],[194,8,216,6,"LoadingView"],[194,19,216,17],[194,20,216,17,"default"],[194,27,216,17],[194,28,216,18,"hide"],[194,32,216,22],[194,33,216,23],[194,34,216,24],[196,8,218,6],[197,8,219,6],[198,8,220,6],[198,12,220,12,"isNormalOrUnsetCloseReason"],[198,38,220,38],[198,41,221,8,"closeEvent"],[198,51,221,18],[198,55,221,22],[198,59,221,26],[198,63,222,8,"closeEvent"],[198,73,222,18],[198,74,222,19,"code"],[198,78,222,23],[198,83,222,28],[198,87,222,32],[198,91,223,8,"closeEvent"],[198,101,223,18],[198,102,223,19,"code"],[198,106,223,23],[198,111,223,28],[198,115,223,32],[198,119,224,8,"closeEvent"],[198,129,224,18],[198,130,224,19,"code"],[198,134,224,23],[198,138,224,27],[198,142,224,31],[199,8,226,6,"setHMRUnavailableReason"],[199,31,226,29],[199,32,227,8],[199,35,228,10,"isNormalOrUnsetCloseReason"],[199,61,228,36],[199,64,229,14],[199,90,229,40],[199,93,230,14],[199,121,230,42,"closeEvent"],[199,131,230,52],[199,132,230,53,"code"],[199,136,230,57],[199,142,230,63,"closeEvent"],[199,152,230,73],[199,153,230,74,"reason"],[199,159,230,80],[199,164,230,85],[200,0,231,0],[201,0,232,0],[202,0,233,0],[203,0,234,0],[204,0,235,0],[204,7,237,6],[204,8,237,7],[205,6,238,4],[205,7,238,5],[205,8,238,6],[206,6,240,4],[206,10,240,8,"isEnabled"],[206,19,240,17],[206,21,240,19],[207,8,241,6,"HMRClient"],[207,17,241,15],[207,18,241,16,"enable"],[207,24,241,22],[207,25,241,23],[207,26,241,24],[208,6,242,4],[208,7,242,5],[208,13,242,11],[209,8,243,6,"HMRClient"],[209,17,243,15],[209,18,243,16,"disable"],[209,25,243,23],[209,26,243,24],[209,27,243,25],[210,6,244,4],[211,6,246,4,"registerBundleEntryPoints"],[211,31,246,29],[211,32,246,30,"hmrClient"],[211,41,246,39],[211,42,246,40],[212,6,247,4,"flushEarlyLogs"],[212,20,247,18],[212,21,247,19],[212,22,247,20],[213,4,248,2],[214,2,249,0],[214,3,249,1],[215,2,251,0],[215,11,251,9,"setHMRUnavailableReason"],[215,34,251,32,"setHMRUnavailableReason"],[215,35,251,33,"reason"],[215,41,251,47],[215,43,251,49],[216,4,252,2,"assert"],[216,10,252,8],[216,11,252,9,"hmrClient"],[216,20,252,18],[216,22,252,20],[216,67,252,65],[216,68,252,66],[217,4,253,2],[217,8,253,6,"hmrUnavailableReason"],[217,28,253,26],[217,33,253,31],[217,37,253,35],[217,39,253,37],[218,6,254,4],[219,6,255,4],[220,4,256,2],[221,4,257,2,"hmrUnavailableReason"],[221,24,257,22],[221,27,257,25,"reason"],[221,33,257,31],[223,4,259,2],[224,4,260,2],[225,4,261,2],[226,4,262,2],[226,8,262,6,"hmrClient"],[226,17,262,15],[226,18,262,16,"isEnabled"],[226,27,262,25],[226,28,262,26],[226,29,262,27],[226,33,262,31,"didConnect"],[226,43,262,41],[226,45,262,43],[227,6,263,4,"console"],[227,13,263,11],[227,14,263,12,"warn"],[227,18,263,16],[227,19,263,17,"reason"],[227,25,263,23],[227,26,263,24],[228,6,264,4],[229,4,265,2],[230,2,266,0],[231,2,268,0],[231,11,268,9,"registerBundleEntryPoints"],[231,36,268,34,"registerBundleEntryPoints"],[231,37,268,35,"client"],[231,43,268,63],[231,45,268,65],[232,4,269,2],[232,8,269,6,"hmrUnavailableReason"],[232,28,269,26],[232,32,269,30],[232,36,269,34],[232,38,269,36],[233,6,270,4],[234,6,271,4,"window"],[234,12,271,10],[234,13,271,11,"location"],[234,21,271,19],[234,22,271,20,"reload"],[234,28,271,26],[234,29,271,27],[234,30,271,28],[235,6,272,4],[236,4,273,2],[237,4,275,2],[237,8,275,6,"pendingEntryPoints"],[237,26,275,24],[237,27,275,25,"length"],[237,33,275,31],[237,36,275,34],[237,37,275,35],[237,39,275,37],[238,6,276,4,"client"],[238,12,276,10],[238,24,276,4,"client"],[238,30,276,10],[238,31,276,12,"send"],[238,35,276,16],[238,36,277,6,"JSON"],[238,40,277,10],[238,41,277,11,"stringify"],[238,50,277,20],[238,51,277,21],[239,8,278,8,"type"],[239,12,278,12],[239,14,278,14],[239,36,278,36],[240,8,279,8,"entryPoints"],[240,19,279,19],[240,21,279,21,"pendingEntryPoints"],[241,6,280,6],[241,7,280,7],[241,8,281,4],[241,9,281,5],[242,6,282,4,"pendingEntryPoints"],[242,24,282,22],[242,25,282,23,"length"],[242,31,282,29],[242,34,282,32],[242,35,282,33],[243,4,283,2],[244,2,284,0],[245,2,286,0],[245,11,286,9,"flushEarlyLogs"],[245,25,286,23,"flushEarlyLogs"],[245,26,286,23],[245,28,286,26],[246,4,287,2],[246,8,287,6],[247,6,288,4,"pendingLogs"],[247,17,288,15],[247,18,288,16,"forEach"],[247,25,288,23],[247,26,288,24],[247,36,288,24,"_ref4"],[247,41,288,24],[247,43,288,43],[248,8,288,43],[248,12,288,43,"_ref5"],[248,17,288,43],[248,24,288,43,"_slicedToArray"],[248,38,288,43],[248,39,288,43,"default"],[248,46,288,43],[248,48,288,43,"_ref4"],[248,53,288,43],[249,10,288,26,"level"],[249,15,288,31],[249,18,288,31,"_ref5"],[249,23,288,31],[250,10,288,33,"data"],[250,14,288,37],[250,17,288,37,"_ref5"],[250,22,288,37],[251,8,289,6,"HMRClient"],[251,17,289,15],[251,18,289,16,"log"],[251,21,289,19],[251,22,289,20,"level"],[251,27,289,25],[251,29,289,27,"data"],[251,33,289,31],[251,34,289,32],[252,6,290,4],[252,7,290,5],[252,8,290,6],[253,4,291,2],[253,5,291,3],[253,14,291,12],[254,6,292,4,"pendingLogs"],[254,17,292,15],[254,18,292,16,"length"],[254,24,292,22],[254,27,292,25],[254,28,292,26],[255,4,293,2],[256,2,294,0],[257,2,296,0],[257,11,296,9,"dismissRedbox"],[257,24,296,22,"dismissRedbox"],[257,25,296,22],[257,27,296,25],[258,4,297,2],[259,2,297,2],[260,2,300,0],[260,11,300,9,"showCompileError"],[260,27,300,25,"showCompileError"],[260,28,300,25],[260,30,300,28],[261,4,301,2],[261,8,301,6,"currentCompileErrorMessage"],[261,34,301,32],[261,39,301,37],[261,43,301,41],[261,45,301,43],[262,6,302,4],[263,4,303,2],[265,4,305,2],[266,4,306,2],[267,4,307,2,"dismissRedbox"],[267,17,307,15],[267,18,307,16],[267,19,307,17],[268,4,309,2],[268,8,309,8,"message"],[268,15,309,15],[268,18,309,18,"currentCompileErrorMessage"],[268,44,309,44],[269,4,310,2,"currentCompileErrorMessage"],[269,30,310,28],[269,33,310,31],[269,37,310,35],[270,4,312,2],[270,8,312,8,"error"],[270,13,312,13],[270,16,312,16],[270,20,312,20,"Error"],[270,25,312,25],[270,26,312,26,"message"],[270,33,312,33],[270,34,312,34],[271,4,313,2],[272,4,314,2],[273,4,315,2],[274,4,316,2,"error"],[274,9,316,7],[274,10,316,8,"preventSymbolication"],[274,30,316,28],[274,33,316,31],[274,37,316,35],[275,4,317,2],[275,10,317,8,"error"],[275,15,317,13],[276,2,318,0],[277,2,320,0],[277,6,320,0,"_default"],[277,14,320,0],[277,17,320,15,"HMRClient"],[277,26,320,24],[278,0,320,25],[278,3]],"functionMap":{"names":["<global>","assert","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;ACuD;CDE;EEO;GFiC;EGE;GHG;EIE;GJI;EKE;yBCiB;kBDS;GLQ;EOI;kCCe;KDY;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDe;uBCE;KDuB;GPU;ASG;CTe;AUE;CVgB;AWE;wBCE;KDE;CXI;AaE;CbE;AcE;CdkB"},"hasCjsExports":false},"type":"js/module"}]}