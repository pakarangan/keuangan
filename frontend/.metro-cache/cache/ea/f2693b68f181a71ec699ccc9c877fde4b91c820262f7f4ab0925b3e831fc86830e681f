{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":29,"index":254},"end":{"line":13,"column":84,"index":309}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"../../../exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":39,"index":411},"end":{"line":16,"column":75,"index":447}}],"key":"9tfv7H31KST9d3m8ETU7OiyO+yA=","exportNames":["*"],"imports":1}},{"name":"./RCTDeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":52,"index":502},"end":{"line":17,"column":86,"index":536}}],"key":"Z/vOkjNlavkFGOplSDMxDUdYYxc=","exportNames":["*"],"imports":1}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":40,"index":579},"end":{"line":18,"column":69,"index":608}}],"key":"ePiUN85REKH0vTLGPPDgdWgjFww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var _interopRequireDefault = require(_dependencyMap[2], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[3], \"../../../exports/Platform\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"./RCTDeviceEventEmitter\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[5], \"fbjs/lib/invariant\"));\n  /**\n   * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n   * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n   * will be notified (via `addListener` and `removeListeners`) when the listener\n   * count changes to manage \"native memory\".\n   *\n   * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n   * This means event names must be globally unique, and it means that call sites\n   * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n   */\n  var NativeEventEmitter = /*#__PURE__*/function () {\n    function NativeEventEmitter(nativeModule) {\n      _classCallCheck(this, NativeEventEmitter);\n      if (_Platform.default.OS === 'ios') {\n        (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n        this._nativeModule = nativeModule;\n      }\n    }\n    return _createClass(NativeEventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        var _this = this;\n        var _this$_nativeModule;\n        (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n        var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n        return {\n          remove: function remove() {\n            if (subscription != null) {\n              var _this$_nativeModule2;\n              (_this$_nativeModule2 = _this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1);\n              // $FlowFixMe[incompatible-use]\n              subscription.remove();\n              subscription = null;\n            }\n          }\n        };\n      }\n\n      /**\n       * @deprecated Use `remove` on the EventSubscription from `addListener`.\n       */\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var _this$_nativeModule3;\n        (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1);\n        // NOTE: This will report a deprecation notice via `console.error`.\n        // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n        _RCTDeviceEventEmitter.default.removeListener(eventType, listener);\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var _RCTDeviceEventEmitte;\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n        // included for completeness.\n        (_RCTDeviceEventEmitte = _RCTDeviceEventEmitter.default).emit.apply(_RCTDeviceEventEmitte, [eventType].concat(args));\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        var _this$_nativeModule4;\n        (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n        (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n        _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n      }\n    }]);\n  }();\n  exports.default = NativeEventEmitter;\n  module.exports = exports.default;\n});","lineCount":100,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_classCallCheck"],[14,21,11,13],[14,24,11,13,"require"],[14,31,11,13],[14,32,11,13,"_dependencyMap"],[14,46,11,13],[14,92,11,13,"default"],[14,99,11,13],[15,2,11,13],[15,6,11,13,"_createClass"],[15,18,11,13],[15,21,11,13,"require"],[15,28,11,13],[15,29,11,13,"_dependencyMap"],[15,43,11,13],[15,86,11,13,"default"],[15,93,11,13],[16,2,13,0],[16,6,13,4,"_interopRequireDefault"],[16,28,13,26],[16,31,13,29,"require"],[16,38,13,36],[16,39,13,36,"_dependencyMap"],[16,53,13,36],[16,104,13,83],[16,105,13,84],[16,106,13,85,"default"],[16,113,13,92],[17,2,14,0,"exports"],[17,9,14,7],[17,10,14,8,"__esModule"],[17,20,14,18],[17,23,14,21],[17,27,14,25],[18,2,15,0,"exports"],[18,9,15,7],[18,10,15,8,"default"],[18,17,15,15],[18,20,15,18],[18,25,15,23],[18,26,15,24],[19,2,16,0],[19,6,16,4,"_Platform"],[19,15,16,13],[19,18,16,16,"_interopRequireDefault"],[19,40,16,38],[19,41,16,39,"require"],[19,48,16,46],[19,49,16,46,"_dependencyMap"],[19,63,16,46],[19,95,16,74],[19,96,16,75],[19,97,16,76],[20,2,17,0],[20,6,17,4,"_RCTDeviceEventEmitter"],[20,28,17,26],[20,31,17,29,"_interopRequireDefault"],[20,53,17,51],[20,54,17,52,"require"],[20,61,17,59],[20,62,17,59,"_dependencyMap"],[20,76,17,59],[20,106,17,85],[20,107,17,86],[20,108,17,87],[21,2,18,0],[21,6,18,4,"_invariant"],[21,16,18,14],[21,19,18,17,"_interopRequireDefault"],[21,41,18,39],[21,42,18,40,"require"],[21,49,18,47],[21,50,18,47,"_dependencyMap"],[21,64,18,47],[21,89,18,68],[21,90,18,69],[21,91,18,70],[22,2,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,2,19,0],[32,6,29,6,"NativeEventEmitter"],[32,24,29,24],[33,4,30,2],[33,13,30,2,"NativeEventEmitter"],[33,32,30,14,"nativeModule"],[33,44,30,26],[33,46,30,28],[34,6,30,28,"_classCallCheck"],[34,21,30,28],[34,28,30,28,"NativeEventEmitter"],[34,46,30,28],[35,6,31,4],[35,10,31,8,"_Platform"],[35,19,31,17],[35,20,31,18,"default"],[35,27,31,25],[35,28,31,26,"OS"],[35,30,31,28],[35,35,31,33],[35,40,31,38],[35,42,31,40],[36,8,32,6],[36,9,32,7],[36,10,32,8],[36,12,32,10,"_invariant"],[36,22,32,20],[36,23,32,21,"default"],[36,30,32,28],[36,32,32,30,"nativeModule"],[36,44,32,42],[36,48,32,46],[36,52,32,50],[36,54,32,52],[36,112,32,110],[36,113,32,111],[37,8,33,6],[37,12,33,10],[37,13,33,11,"_nativeModule"],[37,26,33,24],[37,29,33,27,"nativeModule"],[37,41,33,39],[38,6,34,4],[39,4,35,2],[40,4,35,3],[40,11,35,3,"_createClass"],[40,23,35,3],[40,24,35,3,"NativeEventEmitter"],[40,42,35,3],[41,6,35,3,"key"],[41,9,35,3],[42,6,35,3,"value"],[42,11,35,3],[42,13,36,2],[42,22,36,2,"addListener"],[42,33,36,13,"addListener"],[42,34,36,14,"eventType"],[42,43,36,23],[42,45,36,25,"listener"],[42,53,36,33],[42,55,36,35,"context"],[42,62,36,42],[42,64,36,44],[43,8,36,44],[43,12,36,44,"_this"],[43,17,36,44],[44,8,37,4],[44,12,37,8,"_this$_nativeModule"],[44,31,37,27],[45,8,38,4],[45,9,38,5,"_this$_nativeModule"],[45,28,38,24],[45,31,38,27],[45,35,38,31],[45,36,38,32,"_nativeModule"],[45,49,38,45],[45,54,38,50],[45,58,38,54],[45,61,38,57],[45,66,38,62],[45,67,38,63],[45,70,38,66,"_this$_nativeModule"],[45,89,38,85],[45,90,38,86,"addListener"],[45,101,38,97],[45,102,38,98,"eventType"],[45,111,38,107],[45,112,38,108],[46,8,39,4],[46,12,39,8,"subscription"],[46,24,39,20],[46,27,39,23,"_RCTDeviceEventEmitter"],[46,49,39,45],[46,50,39,46,"default"],[46,57,39,53],[46,58,39,54,"addListener"],[46,69,39,65],[46,70,39,66,"eventType"],[46,79,39,75],[46,81,39,77,"listener"],[46,89,39,85],[46,91,39,87,"context"],[46,98,39,94],[46,99,39,95],[47,8,40,4],[47,15,40,11],[48,10,41,6,"remove"],[48,16,41,12],[48,18,41,14],[48,27,41,6,"remove"],[48,33,41,12,"remove"],[48,34,41,12],[48,36,41,20],[49,12,42,8],[49,16,42,12,"subscription"],[49,28,42,24],[49,32,42,28],[49,36,42,32],[49,38,42,34],[50,14,43,10],[50,18,43,14,"_this$_nativeModule2"],[50,38,43,34],[51,14,44,10],[51,15,44,11,"_this$_nativeModule2"],[51,35,44,31],[51,38,44,34,"_this"],[51,43,44,38],[51,44,44,39,"_nativeModule"],[51,57,44,52],[51,62,44,57],[51,66,44,61],[51,69,44,64],[51,74,44,69],[51,75,44,70],[51,78,44,73,"_this$_nativeModule2"],[51,98,44,93],[51,99,44,94,"removeListeners"],[51,114,44,109],[51,115,44,110],[51,116,44,111],[51,117,44,112],[52,14,45,10],[53,14,46,10,"subscription"],[53,26,46,22],[53,27,46,23,"remove"],[53,33,46,29],[53,34,46,30],[53,35,46,31],[54,14,47,10,"subscription"],[54,26,47,22],[54,29,47,25],[54,33,47,29],[55,12,48,8],[56,10,49,6],[57,8,50,4],[57,9,50,5],[58,6,51,2],[60,6,53,2],[61,0,54,0],[62,0,55,0],[63,4,53,2],[64,6,53,2,"key"],[64,9,53,2],[65,6,53,2,"value"],[65,11,53,2],[65,13,56,2],[65,22,56,2,"removeListener"],[65,36,56,16,"removeListener"],[65,37,56,17,"eventType"],[65,46,56,26],[65,48,56,28,"listener"],[65,56,56,36],[65,58,56,38],[66,8,57,4],[66,12,57,8,"_this$_nativeModule3"],[66,32,57,28],[67,8,58,4],[67,9,58,5,"_this$_nativeModule3"],[67,29,58,25],[67,32,58,28],[67,36,58,32],[67,37,58,33,"_nativeModule"],[67,50,58,46],[67,55,58,51],[67,59,58,55],[67,62,58,58],[67,67,58,63],[67,68,58,64],[67,71,58,67,"_this$_nativeModule3"],[67,91,58,87],[67,92,58,88,"removeListeners"],[67,107,58,103],[67,108,58,104],[67,109,58,105],[67,110,58,106],[68,8,59,4],[69,8,60,4],[70,8,61,4,"_RCTDeviceEventEmitter"],[70,30,61,26],[70,31,61,27,"default"],[70,38,61,34],[70,39,61,35,"removeListener"],[70,53,61,49],[70,54,61,50,"eventType"],[70,63,61,59],[70,65,61,61,"listener"],[70,73,61,69],[70,74,61,70],[71,6,62,2],[72,4,62,3],[73,6,62,3,"key"],[73,9,62,3],[74,6,62,3,"value"],[74,11,62,3],[74,13,63,2],[74,22,63,2,"emit"],[74,26,63,6,"emit"],[74,27,63,7,"eventType"],[74,36,63,16],[74,38,63,18],[75,8,63,18],[75,12,63,18,"_RCTDeviceEventEmitte"],[75,33,63,18],[76,8,64,4],[76,13,64,9],[76,17,64,13,"_len"],[76,21,64,17],[76,24,64,20,"arguments"],[76,33,64,29],[76,34,64,30,"length"],[76,40,64,36],[76,42,64,38,"args"],[76,46,64,42],[76,49,64,45],[76,53,64,49,"Array"],[76,58,64,54],[76,59,64,55,"_len"],[76,63,64,59],[76,66,64,62],[76,67,64,63],[76,70,64,66,"_len"],[76,74,64,70],[76,77,64,73],[76,78,64,74],[76,81,64,77],[76,82,64,78],[76,83,64,79],[76,85,64,81,"_key"],[76,89,64,85],[76,92,64,88],[76,93,64,89],[76,95,64,91,"_key"],[76,99,64,95],[76,102,64,98,"_len"],[76,106,64,102],[76,108,64,104,"_key"],[76,112,64,108],[76,114,64,110],[76,116,64,112],[77,10,65,6,"args"],[77,14,65,10],[77,15,65,11,"_key"],[77,19,65,15],[77,22,65,18],[77,23,65,19],[77,24,65,20],[77,27,65,23,"arguments"],[77,36,65,32],[77,37,65,33,"_key"],[77,41,65,37],[77,42,65,38],[78,8,66,4],[79,8,67,4],[80,8,68,4],[81,8,69,4],[81,9,69,4,"_RCTDeviceEventEmitte"],[81,30,69,4],[81,33,69,4,"_RCTDeviceEventEmitter"],[81,55,69,26],[81,56,69,27,"default"],[81,63,69,34],[81,65,69,35,"emit"],[81,69,69,39],[81,70,69,39,"apply"],[81,75,69,39],[81,76,69,39,"_RCTDeviceEventEmitte"],[81,97,69,39],[81,100,69,40,"eventType"],[81,109,69,49],[81,111,69,49,"concat"],[81,117,69,49],[81,118,69,54,"args"],[81,122,69,58],[81,124,69,59],[82,6,70,2],[83,4,70,3],[84,6,70,3,"key"],[84,9,70,3],[85,6,70,3,"value"],[85,11,70,3],[85,13,71,2],[85,22,71,2,"removeAllListeners"],[85,40,71,20,"removeAllListeners"],[85,41,71,21,"eventType"],[85,50,71,30],[85,52,71,32],[86,8,72,4],[86,12,72,8,"_this$_nativeModule4"],[86,32,72,28],[87,8,73,4],[87,9,73,5],[87,10,73,6],[87,12,73,8,"_invariant"],[87,22,73,18],[87,23,73,19,"default"],[87,30,73,26],[87,32,73,28,"eventType"],[87,41,73,37],[87,45,73,41],[87,49,73,45],[87,51,73,47],[87,123,73,119],[87,124,73,120],[88,8,74,4],[88,9,74,5,"_this$_nativeModule4"],[88,29,74,25],[88,32,74,28],[88,36,74,32],[88,37,74,33,"_nativeModule"],[88,50,74,46],[88,55,74,51],[88,59,74,55],[88,62,74,58],[88,67,74,63],[88,68,74,64],[88,71,74,67,"_this$_nativeModule4"],[88,91,74,87],[88,92,74,88,"removeListeners"],[88,107,74,103],[88,108,74,104],[88,112,74,108],[88,113,74,109,"listenerCount"],[88,126,74,122],[88,127,74,123,"eventType"],[88,136,74,132],[88,137,74,133],[88,138,74,134],[89,8,75,4,"_RCTDeviceEventEmitter"],[89,30,75,26],[89,31,75,27,"default"],[89,38,75,34],[89,39,75,35,"removeAllListeners"],[89,57,75,53],[89,58,75,54,"eventType"],[89,67,75,63],[89,68,75,64],[90,6,76,2],[91,4,76,3],[92,6,76,3,"key"],[92,9,76,3],[93,6,76,3,"value"],[93,11,76,3],[93,13,77,2],[93,22,77,2,"listenerCount"],[93,35,77,15,"listenerCount"],[93,36,77,16,"eventType"],[93,45,77,25],[93,47,77,27],[94,8,78,4],[94,15,78,11,"_RCTDeviceEventEmitter"],[94,37,78,33],[94,38,78,34,"default"],[94,45,78,41],[94,46,78,42,"listenerCount"],[94,59,78,55],[94,60,78,56,"eventType"],[94,69,78,65],[94,70,78,66],[95,6,79,2],[96,4,79,3],[97,2,79,3],[98,2,81,0,"exports"],[98,9,81,7],[98,10,81,8,"default"],[98,17,81,15],[98,20,81,18,"NativeEventEmitter"],[98,38,81,36],[99,2,82,0,"module"],[99,8,82,6],[99,9,82,7,"exports"],[99,16,82,14],[99,19,82,17,"exports"],[99,26,82,24],[99,27,82,25,"default"],[99,34,82,32],[100,0,82,33],[100,3]],"functionMap":{"names":["<global>","NativeEventEmitter","constructor","addListener","remove","removeListener","emit","removeAllListeners","listenerCount"],"mappings":"AAA;AC4B;ECC;GDK;EEC;cCK;ODQ;GFE;EIK;GJM;EKC;GLO;EMC;GNK;EOC;GPE;CDC"},"hasCjsExports":true},"type":"js/module"}]}