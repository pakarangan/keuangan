{"dependencies":[{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":168},"end":{"line":5,"column":52,"index":203}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native-stack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":228},"end":{"line":6,"column":64,"index":269}}],"key":"Tw1dyZPdNt5nhNu5CoB7YZxWQjI=","exportNames":["*"],"imports":1}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":21,"index":292},"end":{"line":7,"column":49,"index":320}}],"key":"JdWyQHWvvi7kws4n0MhZWUpiB2c=","exportNames":["*"],"imports":1}},{"name":"./withLayoutContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":28,"index":350},"end":{"line":8,"column":58,"index":380}}],"key":"uI8DQ+0pBl5vWiQx60egJpSWI0Q=","exportNames":["*"],"imports":1}},{"name":"../useScreens","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":21,"index":403},"end":{"line":9,"column":45,"index":427}}],"key":"8gimF/GgYNRJ+ojtiVDaShLJVrk=","exportNames":["*"],"imports":1}},{"name":"../views/Protected","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":20,"index":449},"end":{"line":10,"column":49,"index":478}}],"key":"k1+uDYZ/MvJqE4WVPvI1cbQswMs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  var _reactJsxDevRuntime = require(_dependencyMap[0], \"react/jsx-dev-runtime\");\n  var _toConsumableArray = require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\").default;\n  var _jsxFileName = \"/app/frontend/node_modules/expo-router/build/layouts/StackClient.js\",\n    _this = this;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackRouter = exports.stackRouterOverride = void 0;\n  var native_1 = require(_dependencyMap[2], \"@react-navigation/native\");\n  var native_stack_1 = require(_dependencyMap[3], \"@react-navigation/native-stack\");\n  var non_secure_1 = require(_dependencyMap[4], \"nanoid/non-secure\");\n  var withLayoutContext_1 = require(_dependencyMap[5], \"./withLayoutContext\");\n  var useScreens_1 = require(_dependencyMap[6], \"../useScreens\");\n  var Protected_1 = require(_dependencyMap[7], \"../views/Protected\");\n  var NativeStackNavigator = (0, native_stack_1.createNativeStackNavigator)().Navigator;\n  var RNStack = (0, withLayoutContext_1.withLayoutContext)(NativeStackNavigator);\n  function isStackAction(action) {\n    return action.type === 'PUSH' || action.type === 'NAVIGATE' || action.type === 'POP' || action.type === 'POP_TO_TOP' || action.type === 'REPLACE';\n  }\n  /**\n   * React Navigation matches a screen by its name or a 'getID' function that uniquely identifies a screen.\n   * When a screen has been uniquely identified, the Stack can only have one instance of that screen.\n   *\n   * Expo Router allows for a screen to be matched by name and path params, a 'getID' function or a singular id.\n   *\n   * Instead of reimplementing the entire StackRouter, we can override the getStateForAction method to handle the singular screen logic.\n   *\n   */\n  var stackRouterOverride = function stackRouterOverride(original) {\n    return {\n      getStateForAction: function getStateForAction(state, action, options) {\n        if (action.target && action.target !== state.key) {\n          return null;\n        }\n        if (!isStackAction(action)) {\n          return original.getStateForAction(state, action, options);\n        }\n        // The dynamic getId added to an action, `router.push('screen', { singular: true })`\n        var actionSingularOptions = action.payload && 'singular' in action.payload ? action.payload.singular : undefined;\n        // Handle if 'getID' or 'singular' is set.\n        function getIdFunction() {\n          // Actions can be fired by the user, so we do need to validate their structure.\n          if (!('payload' in action) || !action.payload || !('name' in action.payload) || typeof action.payload.name !== 'string') {\n            return;\n          }\n          var actionName = action.payload.name;\n          return (\n            // The dynamic singular added to an action, `router.push('screen', { singular: () => 'id' })`\n            getActionSingularIdFn(actionSingularOptions, actionName) ||\n            // The static getId added as a prop to `<Screen singular />` or `<Screen getId={} />`\n            options.routeGetIdList[actionName]\n          );\n        }\n        var routeParamList = options.routeParamList;\n        switch (action.type) {\n          case 'PUSH':\n          case 'NAVIGATE':\n            {\n              if (!state.routeNames.includes(action.payload.name)) {\n                return null;\n              }\n              // START FORK\n              var getId = getIdFunction();\n              // const getId = options.routeGetIdList[action.payload.name];\n              // END FORK\n              var id = getId == null ? void 0 : getId({\n                params: action.payload.params\n              });\n              var route;\n              if (id !== undefined) {\n                route = state.routes.findLast(function (route) {\n                  return route.name === action.payload.name && id === (getId == null ? void 0 : getId({\n                    params: route.params\n                  }));\n                });\n              } else if (action.type === 'NAVIGATE') {\n                var currentRoute = state.routes[state.index];\n                // If the route matches the current one, then navigate to it\n                if (action.payload.name === currentRoute.name) {\n                  route = currentRoute;\n                } else if (action.payload.pop) {\n                  route = state.routes.findLast(function (route) {\n                    return route.name === action.payload.name;\n                  });\n                }\n              }\n              if (!route) {\n                route = state.preloadedRoutes.find(function (route) {\n                  return route.name === action.payload.name && id === (getId == null ? void 0 : getId({\n                    params: route.params\n                  }));\n                });\n              }\n              var params;\n              if (action.type === 'NAVIGATE' && action.payload.merge && route) {\n                params = action.payload.params !== undefined || routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], route.params, action.payload.params) : route.params;\n              } else {\n                params = routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params;\n              }\n              var routes;\n              if (route) {\n                if (action.type === 'NAVIGATE' && action.payload.pop) {\n                  routes = [];\n                  // Get all routes until the matching one\n                  for (var r of state.routes) {\n                    if (r.key === route.key) {\n                      routes.push(Object.assign({}, route, {\n                        path: action.payload.path !== undefined ? action.payload.path : route.path,\n                        params: params\n                      }));\n                      break;\n                    }\n                    routes.push(r);\n                  }\n                } else {\n                  // START FORK\n                  // If there is an id, then filter out the existing route with the same id.\n                  // THIS ACTION IS DANGEROUS. This can cause React Native Screens to freeze\n                  if (id !== undefined) {\n                    routes = state.routes.filter(function (r) {\n                      return r.key !== route.key;\n                    });\n                  } else if (action.type === 'NAVIGATE' && state.routes.length > 0) {\n                    // The navigation action should only replace the last route if it has the same name and path params.\n                    var lastRoute = state.routes[state.routes.length - 1];\n                    if ((0, useScreens_1.getSingularId)(lastRoute.name, {\n                      params: lastRoute.params\n                    }) === (0, useScreens_1.getSingularId)(route.name, {\n                      params: params\n                    })) {\n                      routes = state.routes.slice(0, -1);\n                    } else {\n                      routes = _toConsumableArray(state.routes);\n                    }\n                  } else {\n                    routes = _toConsumableArray(state.routes);\n                  }\n                  // If the routes length is the same as the state routes length, then we are navigating to a new route.\n                  // Otherwise we are replacing an existing route.\n                  var key = routes.length === state.routes.length ? `${action.payload.name}-${(0, non_secure_1.nanoid)()}` : route.key;\n                  routes.push(Object.assign({}, route, {\n                    key: key,\n                    path: action.type === 'NAVIGATE' && action.payload.path !== undefined ? action.payload.path : route.path,\n                    params: params\n                  }));\n                  // routes = state.routes.filter((r) => r.key !== route.key);\n                  // routes.push({\n                  //   ...route,\n                  //   path:\n                  //     action.type === 'NAVIGATE' && action.payload.path !== undefined\n                  //       ? action.payload.path\n                  //       : route.path,\n                  //   params,\n                  // });\n                  // END FORK\n                }\n              } else {\n                routes = [].concat(_toConsumableArray(state.routes), [{\n                  key: `${action.payload.name}-${(0, non_secure_1.nanoid)()}`,\n                  name: action.payload.name,\n                  path: action.type === 'NAVIGATE' ? action.payload.path : undefined,\n                  params: params\n                }]);\n              }\n              // START FORK\n              // return filterSingular(\n              var result = Object.assign({}, state, {\n                index: routes.length - 1,\n                preloadedRoutes: state.preloadedRoutes.filter(function (route) {\n                  return routes[routes.length - 1].key !== route.key;\n                }),\n                routes: routes\n              });\n              if (actionSingularOptions) {\n                return filterSingular(result, getId);\n              }\n              return result;\n              // return {\n              //   ...state,\n              //   index: routes.length - 1,\n              //   preloadedRoutes: state.preloadedRoutes.filter(\n              //     (route) => routes[routes.length - 1].key !== route.key\n              //   ),\n              //   routes,\n              // };\n              // END FORK\n            }\n          default:\n            {\n              return original.getStateForAction(state, action, options);\n            }\n        }\n      }\n    };\n  };\n  exports.stackRouterOverride = stackRouterOverride;\n  function getActionSingularIdFn(actionGetId, name) {\n    if (typeof actionGetId === 'function') {\n      return function (options) {\n        var _options$params;\n        return actionGetId(name, (_options$params = options.params) != null ? _options$params : {});\n      };\n    } else if (actionGetId === true) {\n      return function (options) {\n        return (0, useScreens_1.getSingularId)(name, options);\n      };\n    }\n    return undefined;\n  }\n  /**\n   * If there is a dynamic singular on an action, then we need to filter the state to only have singular screens.\n   * As multiples may have been added before we did the singular navigation.\n   */\n  function filterSingular(state, getId) {\n    if (!state) {\n      return state;\n    }\n    if (!state.routes) {\n      return state;\n    }\n    var currentIndex = state.index || state.routes.length - 1;\n    var current = state.routes[currentIndex];\n    var name = current.name;\n    var id = getId == null ? void 0 : getId({\n      params: current.params\n    });\n    if (!id) {\n      return state;\n    }\n    // TypeScript needs a type assertion here for the filter to work.\n    var routes = state.routes;\n    routes = routes.filter(function (route, index) {\n      // If the route is the current route, keep it.\n      if (index === currentIndex) {\n        return true;\n      }\n      // Remove all other routes with the same name and id.\n      return name !== route.name || id !== (getId == null ? void 0 : getId({\n        params: route.params\n      }));\n    });\n    return Object.assign({}, state, {\n      index: routes.length - 1,\n      routes: routes\n    });\n  }\n  var Stack = Object.assign(function (props) {\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(RNStack, Object.assign({}, props, {\n      UNSTABLE_router: exports.stackRouterOverride\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 12\n    }, _this);\n  }, {\n    Screen: RNStack.Screen,\n    Protected: Protected_1.Protected\n  });\n  exports.default = Stack;\n  var StackRouter = function StackRouter(options) {\n    var router = (0, native_1.StackRouter)(options);\n    return Object.assign({}, router, (0, exports.stackRouterOverride)(router));\n  };\n  exports.StackRouter = StackRouter;\n});","lineCount":269,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,2,13],[5,6,2,13,"_reactJsxDevRuntime"],[5,25,2,13],[5,28,2,13,"require"],[5,35,2,13],[5,36,2,13,"_dependencyMap"],[5,50,2,13],[6,2,2,13],[6,6,2,13,"_toConsumableArray"],[6,24,2,13],[6,27,2,13,"require"],[6,34,2,13],[6,35,2,13,"_dependencyMap"],[6,49,2,13],[6,98,2,13,"default"],[6,105,2,13],[7,2,2,13],[7,6,2,13,"_jsxFileName"],[7,18,2,13],[8,4,2,13,"_this"],[8,9,2,13],[9,2,3,0,"Object"],[9,8,3,6],[9,9,3,7,"defineProperty"],[9,23,3,21],[9,24,3,22,"exports"],[9,31,3,29],[9,33,3,31],[9,45,3,43],[9,47,3,45],[10,4,3,47,"value"],[10,9,3,52],[10,11,3,54],[11,2,3,59],[11,3,3,60],[11,4,3,61],[12,2,4,0,"exports"],[12,9,4,7],[12,10,4,8,"StackRouter"],[12,21,4,19],[12,24,4,22,"exports"],[12,31,4,29],[12,32,4,30,"stackRouterOverride"],[12,51,4,49],[12,54,4,52],[12,59,4,57],[12,60,4,58],[13,2,5,0],[13,6,5,6,"native_1"],[13,14,5,14],[13,17,5,17,"require"],[13,24,5,24],[13,25,5,24,"_dependencyMap"],[13,39,5,24],[13,70,5,51],[13,71,5,52],[14,2,6,0],[14,6,6,6,"native_stack_1"],[14,20,6,20],[14,23,6,23,"require"],[14,30,6,30],[14,31,6,30,"_dependencyMap"],[14,45,6,30],[14,82,6,63],[14,83,6,64],[15,2,7,0],[15,6,7,6,"non_secure_1"],[15,18,7,18],[15,21,7,21,"require"],[15,28,7,28],[15,29,7,28,"_dependencyMap"],[15,43,7,28],[15,67,7,48],[15,68,7,49],[16,2,8,0],[16,6,8,6,"withLayoutContext_1"],[16,25,8,25],[16,28,8,28,"require"],[16,35,8,35],[16,36,8,35,"_dependencyMap"],[16,50,8,35],[16,76,8,57],[16,77,8,58],[17,2,9,0],[17,6,9,6,"useScreens_1"],[17,18,9,18],[17,21,9,21,"require"],[17,28,9,28],[17,29,9,28,"_dependencyMap"],[17,43,9,28],[17,63,9,44],[17,64,9,45],[18,2,10,0],[18,6,10,6,"Protected_1"],[18,17,10,17],[18,20,10,20,"require"],[18,27,10,27],[18,28,10,27,"_dependencyMap"],[18,42,10,27],[18,67,10,48],[18,68,10,49],[19,2,11,0],[19,6,11,6,"NativeStackNavigator"],[19,26,11,26],[19,29,11,29],[19,30,11,30],[19,31,11,31],[19,33,11,33,"native_stack_1"],[19,47,11,47],[19,48,11,48,"createNativeStackNavigator"],[19,74,11,74],[19,76,11,76],[19,77,11,77],[19,78,11,78,"Navigator"],[19,87,11,87],[20,2,12,0],[20,6,12,6,"RNStack"],[20,13,12,13],[20,16,12,16],[20,17,12,17],[20,18,12,18],[20,20,12,20,"withLayoutContext_1"],[20,39,12,39],[20,40,12,40,"withLayoutContext"],[20,57,12,57],[20,59,12,59,"NativeStackNavigator"],[20,79,12,79],[20,80,12,80],[21,2,13,0],[21,11,13,9,"isStackAction"],[21,24,13,22,"isStackAction"],[21,25,13,23,"action"],[21,31,13,29],[21,33,13,31],[22,4,14,4],[22,11,14,12,"action"],[22,17,14,18],[22,18,14,19,"type"],[22,22,14,23],[22,27,14,28],[22,33,14,34],[22,37,15,8,"action"],[22,43,15,14],[22,44,15,15,"type"],[22,48,15,19],[22,53,15,24],[22,63,15,34],[22,67,16,8,"action"],[22,73,16,14],[22,74,16,15,"type"],[22,78,16,19],[22,83,16,24],[22,88,16,29],[22,92,17,8,"action"],[22,98,17,14],[22,99,17,15,"type"],[22,103,17,19],[22,108,17,24],[22,120,17,36],[22,124,18,8,"action"],[22,130,18,14],[22,131,18,15,"type"],[22,135,18,19],[22,140,18,24],[22,149,18,33],[23,2,19,0],[24,2,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,2,29,0],[33,6,29,6,"stackRouterOverride"],[33,25,29,25],[33,28,29,28],[33,37,29,6,"stackRouterOverride"],[33,56,29,25,"stackRouterOverride"],[33,57,29,29,"original"],[33,65,29,37],[33,67,29,42],[34,4,30,4],[34,11,30,11],[35,6,31,8,"getStateForAction"],[35,23,31,25],[35,25,31,27],[35,34,31,8,"getStateForAction"],[35,51,31,25,"getStateForAction"],[35,52,31,28,"state"],[35,57,31,33],[35,59,31,35,"action"],[35,65,31,41],[35,67,31,43,"options"],[35,74,31,50],[35,76,31,55],[36,8,32,12],[36,12,32,16,"action"],[36,18,32,22],[36,19,32,23,"target"],[36,25,32,29],[36,29,32,33,"action"],[36,35,32,39],[36,36,32,40,"target"],[36,42,32,46],[36,47,32,51,"state"],[36,52,32,56],[36,53,32,57,"key"],[36,56,32,60],[36,58,32,62],[37,10,33,16],[37,17,33,23],[37,21,33,27],[38,8,34,12],[39,8,35,12],[39,12,35,16],[39,13,35,17,"isStackAction"],[39,26,35,30],[39,27,35,31,"action"],[39,33,35,37],[39,34,35,38],[39,36,35,40],[40,10,36,16],[40,17,36,23,"original"],[40,25,36,31],[40,26,36,32,"getStateForAction"],[40,43,36,49],[40,44,36,50,"state"],[40,49,36,55],[40,51,36,57,"action"],[40,57,36,63],[40,59,36,65,"options"],[40,66,36,72],[40,67,36,73],[41,8,37,12],[42,8,38,12],[43,8,39,12],[43,12,39,18,"actionSingularOptions"],[43,33,39,39],[43,36,39,42,"action"],[43,42,39,48],[43,43,39,49,"payload"],[43,50,39,56],[43,54,39,60],[43,64,39,70],[43,68,39,74,"action"],[43,74,39,80],[43,75,39,81,"payload"],[43,82,39,88],[43,85,40,18,"action"],[43,91,40,24],[43,92,40,25,"payload"],[43,99,40,32],[43,100,40,33,"singular"],[43,108,40,41],[43,111,41,18,"undefined"],[43,120,41,27],[44,8,42,12],[45,8,43,12],[45,17,43,21,"getIdFunction"],[45,30,43,34,"getIdFunction"],[45,31,43,34],[45,33,43,37],[46,10,44,16],[47,10,45,16],[47,14,45,20],[47,16,45,22],[47,25,45,31],[47,29,45,35,"action"],[47,35,45,41],[47,36,45,42],[47,40,46,20],[47,41,46,21,"action"],[47,47,46,27],[47,48,46,28,"payload"],[47,55,46,35],[47,59,47,20],[47,61,47,22],[47,67,47,28],[47,71,47,32,"action"],[47,77,47,38],[47,78,47,39,"payload"],[47,85,47,46],[47,86,47,47],[47,90,48,20],[47,97,48,27,"action"],[47,103,48,33],[47,104,48,34,"payload"],[47,111,48,41],[47,112,48,42,"name"],[47,116,48,46],[47,121,48,51],[47,129,48,59],[47,131,48,61],[48,12,49,20],[49,10,50,16],[50,10,51,16],[50,14,51,22,"actionName"],[50,24,51,32],[50,27,51,35,"action"],[50,33,51,41],[50,34,51,42,"payload"],[50,41,51,49],[50,42,51,50,"name"],[50,46,51,54],[51,10,52,16],[52,12,53,16],[53,12,54,16,"getActionSingularIdFn"],[53,33,54,37],[53,34,54,38,"actionSingularOptions"],[53,55,54,59],[53,57,54,61,"actionName"],[53,67,54,71],[53,68,54,72],[54,12,55,20],[55,12,56,20,"options"],[55,19,56,27],[55,20,56,28,"routeGetIdList"],[55,34,56,42],[55,35,56,43,"actionName"],[55,45,56,53],[56,10,56,54],[57,8,57,12],[58,8,58,12],[58,12,58,20,"routeParamList"],[58,26,58,34],[58,29,58,39,"options"],[58,36,58,46],[58,37,58,20,"routeParamList"],[58,51,58,34],[59,8,59,12],[59,16,59,20,"action"],[59,22,59,26],[59,23,59,27,"type"],[59,27,59,31],[60,10,60,16],[60,15,60,21],[60,21,60,27],[61,10,61,16],[61,15,61,21],[61,25,61,31],[62,12,61,33],[63,14,62,20],[63,18,62,24],[63,19,62,25,"state"],[63,24,62,30],[63,25,62,31,"routeNames"],[63,35,62,41],[63,36,62,42,"includes"],[63,44,62,50],[63,45,62,51,"action"],[63,51,62,57],[63,52,62,58,"payload"],[63,59,62,65],[63,60,62,66,"name"],[63,64,62,70],[63,65,62,71],[63,67,62,73],[64,16,63,24],[64,23,63,31],[64,27,63,35],[65,14,64,20],[66,14,65,20],[67,14,66,20],[67,18,66,26,"getId"],[67,23,66,31],[67,26,66,34,"getIdFunction"],[67,39,66,47],[67,40,66,48],[67,41,66,49],[68,14,67,20],[69,14,68,20],[70,14,69,20],[70,18,69,26,"id"],[70,20,69,28],[70,23,69,31,"getId"],[70,28,69,36],[70,48,69,31,"getId"],[70,53,69,36],[70,54,69,39],[71,16,69,41,"params"],[71,22,69,47],[71,24,69,49,"action"],[71,30,69,55],[71,31,69,56,"payload"],[71,38,69,63],[71,39,69,64,"params"],[72,14,69,71],[72,15,69,72],[72,16,69,73],[73,14,70,20],[73,18,70,24,"route"],[73,23,70,29],[74,14,71,20],[74,18,71,24,"id"],[74,20,71,26],[74,25,71,31,"undefined"],[74,34,71,40],[74,36,71,42],[75,16,72,24,"route"],[75,21,72,29],[75,24,72,32,"state"],[75,29,72,37],[75,30,72,38,"routes"],[75,36,72,44],[75,37,72,45,"findLast"],[75,45,72,53],[75,46,72,54],[75,56,72,55,"route"],[75,61,72,60],[76,18,72,60],[76,25,72,65,"route"],[76,30,72,70],[76,31,72,71,"name"],[76,35,72,75],[76,40,72,80,"action"],[76,46,72,86],[76,47,72,87,"payload"],[76,54,72,94],[76,55,72,95,"name"],[76,59,72,99],[76,63,72,103,"id"],[76,65,72,105],[76,71,72,110,"getId"],[76,76,72,115],[76,96,72,110,"getId"],[76,101,72,115],[76,102,72,118],[77,20,72,120,"params"],[77,26,72,126],[77,28,72,128,"route"],[77,33,72,133],[77,34,72,134,"params"],[78,18,72,141],[78,19,72,142],[78,20,72,143],[79,16,72,143],[79,18,72,144],[80,14,73,20],[80,15,73,21],[80,21,74,25],[80,25,74,29,"action"],[80,31,74,35],[80,32,74,36,"type"],[80,36,74,40],[80,41,74,45],[80,51,74,55],[80,53,74,57],[81,16,75,24],[81,20,75,30,"currentRoute"],[81,32,75,42],[81,35,75,45,"state"],[81,40,75,50],[81,41,75,51,"routes"],[81,47,75,57],[81,48,75,58,"state"],[81,53,75,63],[81,54,75,64,"index"],[81,59,75,69],[81,60,75,70],[82,16,76,24],[83,16,77,24],[83,20,77,28,"action"],[83,26,77,34],[83,27,77,35,"payload"],[83,34,77,42],[83,35,77,43,"name"],[83,39,77,47],[83,44,77,52,"currentRoute"],[83,56,77,64],[83,57,77,65,"name"],[83,61,77,69],[83,63,77,71],[84,18,78,28,"route"],[84,23,78,33],[84,26,78,36,"currentRoute"],[84,38,78,48],[85,16,79,24],[85,17,79,25],[85,23,80,29],[85,27,80,33,"action"],[85,33,80,39],[85,34,80,40,"payload"],[85,41,80,47],[85,42,80,48,"pop"],[85,45,80,51],[85,47,80,53],[86,18,81,28,"route"],[86,23,81,33],[86,26,81,36,"state"],[86,31,81,41],[86,32,81,42,"routes"],[86,38,81,48],[86,39,81,49,"findLast"],[86,47,81,57],[86,48,81,58],[86,58,81,59,"route"],[86,63,81,64],[87,20,81,64],[87,27,81,69,"route"],[87,32,81,74],[87,33,81,75,"name"],[87,37,81,79],[87,42,81,84,"action"],[87,48,81,90],[87,49,81,91,"payload"],[87,56,81,98],[87,57,81,99,"name"],[87,61,81,103],[88,18,81,103],[88,20,81,104],[89,16,82,24],[90,14,83,20],[91,14,84,20],[91,18,84,24],[91,19,84,25,"route"],[91,24,84,30],[91,26,84,32],[92,16,85,24,"route"],[92,21,85,29],[92,24,85,32,"state"],[92,29,85,37],[92,30,85,38,"preloadedRoutes"],[92,45,85,53],[92,46,85,54,"find"],[92,50,85,58],[92,51,85,59],[92,61,85,60,"route"],[92,66,85,65],[93,18,85,65],[93,25,85,70,"route"],[93,30,85,75],[93,31,85,76,"name"],[93,35,85,80],[93,40,85,85,"action"],[93,46,85,91],[93,47,85,92,"payload"],[93,54,85,99],[93,55,85,100,"name"],[93,59,85,104],[93,63,85,108,"id"],[93,65,85,110],[93,71,85,115,"getId"],[93,76,85,120],[93,96,85,115,"getId"],[93,101,85,120],[93,102,85,123],[94,20,85,125,"params"],[94,26,85,131],[94,28,85,133,"route"],[94,33,85,138],[94,34,85,139,"params"],[95,18,85,146],[95,19,85,147],[95,20,85,148],[96,16,85,148],[96,18,85,149],[97,14,86,20],[98,14,87,20],[98,18,87,24,"params"],[98,24,87,30],[99,14,88,20],[99,18,88,24,"action"],[99,24,88,30],[99,25,88,31,"type"],[99,29,88,35],[99,34,88,40],[99,44,88,50],[99,48,88,54,"action"],[99,54,88,60],[99,55,88,61,"payload"],[99,62,88,68],[99,63,88,69,"merge"],[99,68,88,74],[99,72,88,78,"route"],[99,77,88,83],[99,79,88,85],[100,16,89,24,"params"],[100,22,89,30],[100,25,90,28,"action"],[100,31,90,34],[100,32,90,35,"payload"],[100,39,90,42],[100,40,90,43,"params"],[100,46,90,49],[100,51,90,54,"undefined"],[100,60,90,63],[100,64,91,32,"routeParamList"],[100,78,91,46],[100,79,91,47,"action"],[100,85,91,53],[100,86,91,54,"payload"],[100,93,91,61],[100,94,91,62,"name"],[100,98,91,66],[100,99,91,67],[100,104,91,72,"undefined"],[100,113,91,81],[100,116,91,81,"Object"],[100,122,91,81],[100,123,91,81,"assign"],[100,129,91,81],[100,134,93,39,"routeParamList"],[100,148,93,53],[100,149,93,54,"action"],[100,155,93,60],[100,156,93,61,"payload"],[100,163,93,68],[100,164,93,69,"name"],[100,168,93,73],[100,169,93,74],[100,171,94,39,"route"],[100,176,94,44],[100,177,94,45,"params"],[100,183,94,51],[100,185,95,39,"action"],[100,191,95,45],[100,192,95,46,"payload"],[100,199,95,53],[100,200,95,54,"params"],[100,206,95,60],[100,210,97,34,"route"],[100,215,97,39],[100,216,97,40,"params"],[100,222,97,46],[101,14,98,20],[101,15,98,21],[101,21,99,25],[102,16,100,24,"params"],[102,22,100,30],[102,25,101,28,"routeParamList"],[102,39,101,42],[102,40,101,43,"action"],[102,46,101,49],[102,47,101,50,"payload"],[102,54,101,57],[102,55,101,58,"name"],[102,59,101,62],[102,60,101,63],[102,65,101,68,"undefined"],[102,74,101,77],[102,77,101,77,"Object"],[102,83,101,77],[102,84,101,77,"assign"],[102,90,101,77],[102,95,103,39,"routeParamList"],[102,109,103,53],[102,110,103,54,"action"],[102,116,103,60],[102,117,103,61,"payload"],[102,124,103,68],[102,125,103,69,"name"],[102,129,103,73],[102,130,103,74],[102,132,104,39,"action"],[102,138,104,45],[102,139,104,46,"payload"],[102,146,104,53],[102,147,104,54,"params"],[102,153,104,60],[102,157,106,34,"action"],[102,163,106,40],[102,164,106,41,"payload"],[102,171,106,48],[102,172,106,49,"params"],[102,178,106,55],[103,14,107,20],[104,14,108,20],[104,18,108,24,"routes"],[104,24,108,30],[105,14,109,20],[105,18,109,24,"route"],[105,23,109,29],[105,25,109,31],[106,16,110,24],[106,20,110,28,"action"],[106,26,110,34],[106,27,110,35,"type"],[106,31,110,39],[106,36,110,44],[106,46,110,54],[106,50,110,58,"action"],[106,56,110,64],[106,57,110,65,"payload"],[106,64,110,72],[106,65,110,73,"pop"],[106,68,110,76],[106,70,110,78],[107,18,111,28,"routes"],[107,24,111,34],[107,27,111,37],[107,29,111,39],[108,18,112,28],[109,18,113,28],[109,23,113,33],[109,27,113,39,"r"],[109,28,113,40],[109,32,113,44,"state"],[109,37,113,49],[109,38,113,50,"routes"],[109,44,113,56],[109,46,113,58],[110,20,114,32],[110,24,114,36,"r"],[110,25,114,37],[110,26,114,38,"key"],[110,29,114,41],[110,34,114,46,"route"],[110,39,114,51],[110,40,114,52,"key"],[110,43,114,55],[110,45,114,57],[111,22,115,36,"routes"],[111,28,115,42],[111,29,115,43,"push"],[111,33,115,47],[111,34,115,47,"Object"],[111,40,115,47],[111,41,115,47,"assign"],[111,47,115,47],[111,52,116,43,"route"],[111,57,116,48],[112,24,117,40,"path"],[112,28,117,44],[112,30,117,46,"action"],[112,36,117,52],[112,37,117,53,"payload"],[112,44,117,60],[112,45,117,61,"path"],[112,49,117,65],[112,54,117,70,"undefined"],[112,63,117,79],[112,66,117,82,"action"],[112,72,117,88],[112,73,117,89,"payload"],[112,80,117,96],[112,81,117,97,"path"],[112,85,117,101],[112,88,117,104,"route"],[112,93,117,109],[112,94,117,110,"path"],[112,98,117,114],[113,24,118,40,"params"],[113,30,118,46],[113,32,118,40,"params"],[114,22,118,46],[114,24,119,37],[114,25,119,38],[115,22,120,36],[116,20,121,32],[117,20,122,32,"routes"],[117,26,122,38],[117,27,122,39,"push"],[117,31,122,43],[117,32,122,44,"r"],[117,33,122,45],[117,34,122,46],[118,18,123,28],[119,16,124,24],[119,17,124,25],[119,23,125,29],[120,18,126,28],[121,18,127,28],[122,18,128,28],[123,18,129,28],[123,22,129,32,"id"],[123,24,129,34],[123,29,129,39,"undefined"],[123,38,129,48],[123,40,129,50],[124,20,130,32,"routes"],[124,26,130,38],[124,29,130,41,"state"],[124,34,130,46],[124,35,130,47,"routes"],[124,41,130,53],[124,42,130,54,"filter"],[124,48,130,60],[124,49,130,61],[124,59,130,62,"r"],[124,60,130,63],[125,22,130,63],[125,29,130,68,"r"],[125,30,130,69],[125,31,130,70,"key"],[125,34,130,73],[125,39,130,78,"route"],[125,44,130,83],[125,45,130,84,"key"],[125,48,130,87],[126,20,130,87],[126,22,130,88],[127,18,131,28],[127,19,131,29],[127,25,132,33],[127,29,132,37,"action"],[127,35,132,43],[127,36,132,44,"type"],[127,40,132,48],[127,45,132,53],[127,55,132,63],[127,59,132,67,"state"],[127,64,132,72],[127,65,132,73,"routes"],[127,71,132,79],[127,72,132,80,"length"],[127,78,132,86],[127,81,132,89],[127,82,132,90],[127,84,132,92],[128,20,133,32],[129,20,134,32],[129,24,134,38,"lastRoute"],[129,33,134,47],[129,36,134,50,"state"],[129,41,134,55],[129,42,134,56,"routes"],[129,48,134,62],[129,49,134,63,"state"],[129,54,134,68],[129,55,134,69,"routes"],[129,61,134,75],[129,62,134,76,"length"],[129,68,134,82],[129,71,134,85],[129,72,134,86],[129,73,134,87],[130,20,135,32],[130,24,135,36],[130,25,135,37],[130,26,135,38],[130,28,135,40,"useScreens_1"],[130,40,135,52],[130,41,135,53,"getSingularId"],[130,54,135,66],[130,56,135,68,"lastRoute"],[130,65,135,77],[130,66,135,78,"name"],[130,70,135,82],[130,72,135,84],[131,22,135,86,"params"],[131,28,135,92],[131,30,135,94,"lastRoute"],[131,39,135,103],[131,40,135,104,"params"],[132,20,135,111],[132,21,135,112],[132,22,135,113],[132,27,136,36],[132,28,136,37],[132,29,136,38],[132,31,136,40,"useScreens_1"],[132,43,136,52],[132,44,136,53,"getSingularId"],[132,57,136,66],[132,59,136,68,"route"],[132,64,136,73],[132,65,136,74,"name"],[132,69,136,78],[132,71,136,80],[133,22,136,82,"params"],[133,28,136,88],[133,30,136,82,"params"],[134,20,136,89],[134,21,136,90],[134,22,136,91],[134,24,136,93],[135,22,137,36,"routes"],[135,28,137,42],[135,31,137,45,"state"],[135,36,137,50],[135,37,137,51,"routes"],[135,43,137,57],[135,44,137,58,"slice"],[135,49,137,63],[135,50,137,64],[135,51,137,65],[135,53,137,67],[135,54,137,68],[135,55,137,69],[135,56,137,70],[136,20,138,32],[136,21,138,33],[136,27,139,37],[137,22,140,36,"routes"],[137,28,140,42],[137,31,140,42,"_toConsumableArray"],[137,49,140,42],[137,50,140,49,"state"],[137,55,140,54],[137,56,140,55,"routes"],[137,62,140,61],[137,63,140,62],[138,20,141,32],[139,18,142,28],[139,19,142,29],[139,25,143,33],[140,20,144,32,"routes"],[140,26,144,38],[140,29,144,38,"_toConsumableArray"],[140,47,144,38],[140,48,144,45,"state"],[140,53,144,50],[140,54,144,51,"routes"],[140,60,144,57],[140,61,144,58],[141,18,145,28],[142,18,146,28],[143,18,147,28],[144,18,148,28],[144,22,148,34,"key"],[144,25,148,37],[144,28,148,40,"routes"],[144,34,148,46],[144,35,148,47,"length"],[144,41,148,53],[144,46,148,58,"state"],[144,51,148,63],[144,52,148,64,"routes"],[144,58,148,70],[144,59,148,71,"length"],[144,65,148,77],[144,68,149,34],[144,71,149,37,"action"],[144,77,149,43],[144,78,149,44,"payload"],[144,85,149,51],[144,86,149,52,"name"],[144,90,149,56],[144,94,149,60],[144,95,149,61],[144,96,149,62],[144,98,149,64,"non_secure_1"],[144,110,149,76],[144,111,149,77,"nanoid"],[144,117,149,83],[144,119,149,85],[144,120,149,86],[144,122,149,88],[144,125,150,34,"route"],[144,130,150,39],[144,131,150,40,"key"],[144,134,150,43],[145,18,151,28,"routes"],[145,24,151,34],[145,25,151,35,"push"],[145,29,151,39],[145,30,151,39,"Object"],[145,36,151,39],[145,37,151,39,"assign"],[145,43,151,39],[145,48,152,35,"route"],[145,53,152,40],[146,20,153,32,"key"],[146,23,153,35],[146,25,153,32,"key"],[146,28,153,35],[147,20,154,32,"path"],[147,24,154,36],[147,26,154,38,"action"],[147,32,154,44],[147,33,154,45,"type"],[147,37,154,49],[147,42,154,54],[147,52,154,64],[147,56,154,68,"action"],[147,62,154,74],[147,63,154,75,"payload"],[147,70,154,82],[147,71,154,83,"path"],[147,75,154,87],[147,80,154,92,"undefined"],[147,89,154,101],[147,92,155,38,"action"],[147,98,155,44],[147,99,155,45,"payload"],[147,106,155,52],[147,107,155,53,"path"],[147,111,155,57],[147,114,156,38,"route"],[147,119,156,43],[147,120,156,44,"path"],[147,124,156,48],[148,20,157,32,"params"],[148,26,157,38],[148,28,157,32,"params"],[149,18,157,38],[149,20,158,29],[149,21,158,30],[150,18,159,28],[151,18,160,28],[152,18,161,28],[153,18,162,28],[154,18,163,28],[155,18,164,28],[156,18,165,28],[157,18,166,28],[158,18,167,28],[159,18,168,28],[160,16,169,24],[161,14,170,20],[161,15,170,21],[161,21,171,25],[162,16,172,24,"routes"],[162,22,172,30],[162,28,172,30,"concat"],[162,34,172,30],[162,35,172,30,"_toConsumableArray"],[162,53,172,30],[162,54,173,31,"state"],[162,59,173,36],[162,60,173,37,"routes"],[162,66,173,43],[162,70,174,28],[163,18,175,32,"key"],[163,21,175,35],[163,23,175,37],[163,26,175,40,"action"],[163,32,175,46],[163,33,175,47,"payload"],[163,40,175,54],[163,41,175,55,"name"],[163,45,175,59],[163,49,175,63],[163,50,175,64],[163,51,175,65],[163,53,175,67,"non_secure_1"],[163,65,175,79],[163,66,175,80,"nanoid"],[163,72,175,86],[163,74,175,88],[163,75,175,89],[163,77,175,91],[164,18,176,32,"name"],[164,22,176,36],[164,24,176,38,"action"],[164,30,176,44],[164,31,176,45,"payload"],[164,38,176,52],[164,39,176,53,"name"],[164,43,176,57],[165,18,177,32,"path"],[165,22,177,36],[165,24,177,38,"action"],[165,30,177,44],[165,31,177,45,"type"],[165,35,177,49],[165,40,177,54],[165,50,177,64],[165,53,177,67,"action"],[165,59,177,73],[165,60,177,74,"payload"],[165,67,177,81],[165,68,177,82,"path"],[165,72,177,86],[165,75,177,89,"undefined"],[165,84,177,98],[166,18,178,32,"params"],[166,24,178,38],[166,26,178,32,"params"],[167,16,179,28],[167,17,179,29],[167,19,180,25],[168,14,181,20],[169,14,182,20],[170,14,183,20],[171,14,184,20],[171,18,184,26,"result"],[171,24,184,32],[171,27,184,32,"Object"],[171,33,184,32],[171,34,184,32,"assign"],[171,40,184,32],[171,45,185,27,"state"],[171,50,185,32],[172,16,186,24,"index"],[172,21,186,29],[172,23,186,31,"routes"],[172,29,186,37],[172,30,186,38,"length"],[172,36,186,44],[172,39,186,47],[172,40,186,48],[173,16,187,24,"preloadedRoutes"],[173,31,187,39],[173,33,187,41,"state"],[173,38,187,46],[173,39,187,47,"preloadedRoutes"],[173,54,187,62],[173,55,187,63,"filter"],[173,61,187,69],[173,62,187,70],[173,72,187,71,"route"],[173,77,187,76],[174,18,187,76],[174,25,187,81,"routes"],[174,31,187,87],[174,32,187,88,"routes"],[174,38,187,94],[174,39,187,95,"length"],[174,45,187,101],[174,48,187,104],[174,49,187,105],[174,50,187,106],[174,51,187,107,"key"],[174,54,187,110],[174,59,187,115,"route"],[174,64,187,120],[174,65,187,121,"key"],[174,68,187,124],[175,16,187,124],[175,18,187,125],[176,16,188,24,"routes"],[176,22,188,30],[176,24,188,24,"routes"],[177,14,188,30],[177,16,189,21],[178,14,190,20],[178,18,190,24,"actionSingularOptions"],[178,39,190,45],[178,41,190,47],[179,16,191,24],[179,23,191,31,"filterSingular"],[179,37,191,45],[179,38,191,46,"result"],[179,44,191,52],[179,46,191,54,"getId"],[179,51,191,59],[179,52,191,60],[180,14,192,20],[181,14,193,20],[181,21,193,27,"result"],[181,27,193,33],[182,14,194,20],[183,14,195,20],[184,14,196,20],[185,14,197,20],[186,14,198,20],[187,14,199,20],[188,14,200,20],[189,14,201,20],[190,14,202,20],[191,12,203,16],[192,10,204,16],[193,12,204,25],[194,14,205,20],[194,21,205,27,"original"],[194,29,205,35],[194,30,205,36,"getStateForAction"],[194,47,205,53],[194,48,205,54,"state"],[194,53,205,59],[194,55,205,61,"action"],[194,61,205,67],[194,63,205,69,"options"],[194,70,205,76],[194,71,205,77],[195,12,206,16],[196,8,207,12],[197,6,208,8],[198,4,209,4],[198,5,209,5],[199,2,210,0],[199,3,210,1],[200,2,211,0,"exports"],[200,9,211,7],[200,10,211,8,"stackRouterOverride"],[200,29,211,27],[200,32,211,30,"stackRouterOverride"],[200,51,211,49],[201,2,212,0],[201,11,212,9,"getActionSingularIdFn"],[201,32,212,30,"getActionSingularIdFn"],[201,33,212,31,"actionGetId"],[201,44,212,42],[201,46,212,44,"name"],[201,50,212,48],[201,52,212,50],[202,4,213,4],[202,8,213,8],[202,15,213,15,"actionGetId"],[202,26,213,26],[202,31,213,31],[202,41,213,41],[202,43,213,43],[203,6,214,8],[203,13,214,15],[203,23,214,16,"options"],[203,30,214,23],[204,8,214,23],[204,12,214,23,"_options$params"],[204,27,214,23],[205,8,214,23],[205,15,214,28,"actionGetId"],[205,26,214,39],[205,27,214,40,"name"],[205,31,214,44],[205,34,214,44,"_options$params"],[205,49,214,44],[205,52,214,46,"options"],[205,59,214,53],[205,60,214,54,"params"],[205,66,214,60],[205,78,214,60,"_options$params"],[205,93,214,60],[205,96,214,64],[205,97,214,65],[205,98,214,66],[205,99,214,67],[206,6,214,67],[207,4,215,4],[207,5,215,5],[207,11,216,9],[207,15,216,13,"actionGetId"],[207,26,216,24],[207,31,216,29],[207,35,216,33],[207,37,216,35],[208,6,217,8],[208,13,217,15],[208,23,217,16,"options"],[208,30,217,23],[209,8,217,23],[209,15,217,28],[209,16,217,29],[209,17,217,30],[209,19,217,32,"useScreens_1"],[209,31,217,44],[209,32,217,45,"getSingularId"],[209,45,217,58],[209,47,217,60,"name"],[209,51,217,64],[209,53,217,66,"options"],[209,60,217,73],[209,61,217,74],[210,6,217,74],[211,4,218,4],[212,4,219,4],[212,11,219,11,"undefined"],[212,20,219,20],[213,2,220,0],[214,2,221,0],[215,0,222,0],[216,0,223,0],[217,0,224,0],[218,2,225,0],[218,11,225,9,"filterSingular"],[218,25,225,23,"filterSingular"],[218,26,225,24,"state"],[218,31,225,29],[218,33,225,31,"getId"],[218,38,225,36],[218,40,225,38],[219,4,226,4],[219,8,226,8],[219,9,226,9,"state"],[219,14,226,14],[219,16,226,16],[220,6,227,8],[220,13,227,15,"state"],[220,18,227,20],[221,4,228,4],[222,4,229,4],[222,8,229,8],[222,9,229,9,"state"],[222,14,229,14],[222,15,229,15,"routes"],[222,21,229,21],[222,23,229,23],[223,6,230,8],[223,13,230,15,"state"],[223,18,230,20],[224,4,231,4],[225,4,232,4],[225,8,232,10,"currentIndex"],[225,20,232,22],[225,23,232,25,"state"],[225,28,232,30],[225,29,232,31,"index"],[225,34,232,36],[225,38,232,40,"state"],[225,43,232,45],[225,44,232,46,"routes"],[225,50,232,52],[225,51,232,53,"length"],[225,57,232,59],[225,60,232,62],[225,61,232,63],[226,4,233,4],[226,8,233,10,"current"],[226,15,233,17],[226,18,233,20,"state"],[226,23,233,25],[226,24,233,26,"routes"],[226,30,233,32],[226,31,233,33,"currentIndex"],[226,43,233,45],[226,44,233,46],[227,4,234,4],[227,8,234,10,"name"],[227,12,234,14],[227,15,234,17,"current"],[227,22,234,24],[227,23,234,25,"name"],[227,27,234,29],[228,4,235,4],[228,8,235,10,"id"],[228,10,235,12],[228,13,235,15,"getId"],[228,18,235,20],[228,38,235,15,"getId"],[228,43,235,20],[228,44,235,23],[229,6,235,25,"params"],[229,12,235,31],[229,14,235,33,"current"],[229,21,235,40],[229,22,235,41,"params"],[230,4,235,48],[230,5,235,49],[230,6,235,50],[231,4,236,4],[231,8,236,8],[231,9,236,9,"id"],[231,11,236,11],[231,13,236,13],[232,6,237,8],[232,13,237,15,"state"],[232,18,237,20],[233,4,238,4],[234,4,239,4],[235,4,240,4],[235,8,240,8,"routes"],[235,14,240,14],[235,17,240,17,"state"],[235,22,240,22],[235,23,240,23,"routes"],[235,29,240,29],[236,4,241,4,"routes"],[236,10,241,10],[236,13,241,13,"routes"],[236,19,241,19],[236,20,241,20,"filter"],[236,26,241,26],[236,27,241,27],[236,37,241,28,"route"],[236,42,241,33],[236,44,241,35,"index"],[236,49,241,40],[236,51,241,45],[237,6,242,8],[238,6,243,8],[238,10,243,12,"index"],[238,15,243,17],[238,20,243,22,"currentIndex"],[238,32,243,34],[238,34,243,36],[239,8,244,12],[239,15,244,19],[239,19,244,23],[240,6,245,8],[241,6,246,8],[242,6,247,8],[242,13,247,15,"name"],[242,17,247,19],[242,22,247,24,"route"],[242,27,247,29],[242,28,247,30,"name"],[242,32,247,34],[242,36,247,38,"id"],[242,38,247,40],[242,44,247,45,"getId"],[242,49,247,50],[242,69,247,45,"getId"],[242,74,247,50],[242,75,247,53],[243,8,247,55,"params"],[243,14,247,61],[243,16,247,63,"route"],[243,21,247,68],[243,22,247,69,"params"],[244,6,247,76],[244,7,247,77],[244,8,247,78],[245,4,248,4],[245,5,248,5],[245,6,248,6],[246,4,249,4],[246,11,249,4,"Object"],[246,17,249,4],[246,18,249,4,"assign"],[246,24,249,4],[246,29,250,11,"state"],[246,34,250,16],[247,6,251,8,"index"],[247,11,251,13],[247,13,251,15,"routes"],[247,19,251,21],[247,20,251,22,"length"],[247,26,251,28],[247,29,251,31],[247,30,251,32],[248,6,252,8,"routes"],[248,12,252,14],[248,14,252,8,"routes"],[249,4,252,14],[250,2,254,0],[251,2,255,0],[251,6,255,6,"Stack"],[251,11,255,11],[251,14,255,14,"Object"],[251,20,255,20],[251,21,255,21,"assign"],[251,27,255,27],[251,28,255,28],[251,38,255,29,"props"],[251,43,255,34],[251,45,255,39],[252,4,256,4],[252,24,256,11,"_reactJsxDevRuntime"],[252,43,256,11],[252,44,256,11,"jsxDEV"],[252,50,256,11],[252,51,256,12,"RNStack"],[252,58,256,19],[252,60,256,19,"Object"],[252,66,256,19],[252,67,256,19,"assign"],[252,73,256,19],[252,78,256,24,"props"],[252,83,256,29],[253,6,256,31,"UNSTABLE_router"],[253,21,256,46],[253,23,256,48,"exports"],[253,30,256,55],[253,31,256,56,"stackRouterOverride"],[254,4,256,76],[255,6,256,76,"fileName"],[255,14,256,76],[255,16,256,76,"_jsxFileName"],[255,28,256,76],[256,6,256,76,"lineNumber"],[256,16,256,76],[257,6,256,76,"columnNumber"],[257,18,256,76],[258,4,256,76],[258,7,256,76,"_this"],[258,12,256,77],[258,13,256,78],[259,2,257,0],[259,3,257,1],[259,5,257,3],[260,4,258,4,"Screen"],[260,10,258,10],[260,12,258,12,"RNStack"],[260,19,258,19],[260,20,258,20,"Screen"],[260,26,258,26],[261,4,259,4,"Protected"],[261,13,259,13],[261,15,259,15,"Protected_1"],[261,26,259,26],[261,27,259,27,"Protected"],[262,2,260,0],[262,3,260,1],[262,4,260,2],[263,2,261,0,"exports"],[263,9,261,7],[263,10,261,8,"default"],[263,17,261,15],[263,20,261,18,"Stack"],[263,25,261,23],[264,2,262,0],[264,6,262,6,"StackRouter"],[264,17,262,17],[264,20,262,20],[264,29,262,6,"StackRouter"],[264,40,262,17,"StackRouter"],[264,41,262,21,"options"],[264,48,262,28],[264,50,262,33],[265,4,263,4],[265,8,263,10,"router"],[265,14,263,16],[265,17,263,19],[265,18,263,20],[265,19,263,21],[265,21,263,23,"native_1"],[265,29,263,31],[265,30,263,32,"StackRouter"],[265,41,263,43],[265,43,263,45,"options"],[265,50,263,52],[265,51,263,53],[266,4,264,4],[266,11,264,4,"Object"],[266,17,264,4],[266,18,264,4,"assign"],[266,24,264,4],[266,29,265,11,"router"],[266,35,265,17],[266,37,266,11],[266,38,266,12],[266,39,266,13],[266,41,266,15,"exports"],[266,48,266,22],[266,49,266,23,"stackRouterOverride"],[266,68,266,42],[266,70,266,44,"router"],[266,76,266,50],[266,77,266,51],[267,2,268,0],[267,3,268,1],[268,2,269,0,"exports"],[268,9,269,7],[268,10,269,8,"StackRouter"],[268,21,269,19],[268,24,269,22,"StackRouter"],[268,35,269,33],[269,0,269,34],[269,3]],"functionMap":{"names":["<global>","isStackAction","stackRouterOverride","getStateForAction","getIdFunction","state.routes.findLast$argument_0","state.preloadedRoutes.find$argument_0","state.routes.filter$argument_0","state.preloadedRoutes.filter$argument_0","getActionSingularIdFn","<anonymous>","filterSingular","routes.filter$argument_0","Object.assign$argument_0","StackRouter"],"mappings":"AAA;ACY;CDM;4BEU;2BCE;YCY;aDc;sDEe,yFF;0DES,6CF;2DGI,yFH;6DI6C,0BJ;sEKyD,sDL;SDqB;CFE;ASE;eCE,oDD;eCG,2DD;CTG;AWK;2BCgB;KDO;CXM;4BaC;CbE;oBcK;CdM"},"hasCjsExports":true},"type":"js/module"}]}