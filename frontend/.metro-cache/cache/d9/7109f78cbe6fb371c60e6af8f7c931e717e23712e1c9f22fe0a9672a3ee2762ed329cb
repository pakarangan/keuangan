{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"LogBoxLog\", {\n    enumerable: true,\n    get: function () {\n      return LogBoxLog;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(function (stack) {\n      var _stack$location$row, _stack$location, _stack$location$colum, _stack$location2;\n      return {\n        file: stack.fileName,\n        methodName: stack.content,\n        lineNumber: (_stack$location$row = (_stack$location = stack.location) == null ? void 0 : _stack$location.row) != null ? _stack$location$row : 0,\n        column: (_stack$location$colum = (_stack$location2 = stack.location) == null ? void 0 : _stack$location2.column) != null ? _stack$location$colum : 0,\n        arguments: []\n      };\n    });\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      var _data$type, _data$symbolicated;\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        stack: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        },\n        component: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        }\n      };\n      this.callbacks = new Map();\n      this.componentStackCache = null;\n      this.level = data.level;\n      this.type = (_data$type = data.type) != null ? _data$type : 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = (_data$symbolicated = data.symbolicated) != null ? _data$symbolicated : this.symbolicated;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack(type) {\n        if (this.symbolicated[type].status === 'COMPLETE') {\n          return this.symbolicated[type].stack;\n        }\n        return this.getStack(type);\n      }\n    }, {\n      key: \"flushCallbacks\",\n      value: function flushCallbacks(type) {\n        var callbacks = this.callbacks.get(type);\n        var status = this.symbolicated[type].status;\n        if (callbacks) {\n          for (var callback of callbacks) {\n            callback(status);\n          }\n          callbacks.clear();\n        }\n      }\n    }, {\n      key: \"pushCallback\",\n      value: function pushCallback(type, callback) {\n        var callbacks = this.callbacks.get(type);\n        if (!callbacks) {\n          callbacks = new Set();\n          this.callbacks.set(type, callbacks);\n        }\n        callbacks.add(callback);\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(type, callback) {\n        this._symbolicate(type, true, callback);\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(type, callback) {\n        this._symbolicate(type, false, callback);\n      }\n    }, {\n      key: \"_symbolicate\",\n      value: function _symbolicate(type, retry, callback) {\n        if (callback) {\n          this.pushCallback(type, callback);\n        }\n        var status = this.symbolicated[type].status;\n        if (status === 'COMPLETE') {\n          return this.flushCallbacks(type);\n        }\n        if (retry) {\n          LogBoxSymbolication.deleteStack(this.getStack(type));\n          this.handleSymbolicate(type);\n        } else {\n          if (status === 'NONE') {\n            this.handleSymbolicate(type);\n          }\n        }\n      }\n    }, {\n      key: \"getStack\",\n      value: function getStack(type) {\n        if (type === 'component') {\n          if (this.componentStackCache == null) {\n            this.componentStackCache = componentStackToStack(this.componentStack);\n          }\n          return this.componentStackCache;\n        }\n        return this.stack;\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(type) {\n        var _this$componentStack,\n          _this = this;\n        if (type === 'component' && !((_this$componentStack = this.componentStack) != null && _this$componentStack.length)) {\n          return;\n        }\n        if (this.symbolicated[type].status !== 'PENDING') {\n          this.updateStatus(type, null, null, null);\n          LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(function (data) {\n            _this.updateStatus(type, null, data == null ? void 0 : data.stack, data == null ? void 0 : data.codeFrame);\n          }, function (error) {\n            _this.updateStatus(type, error, null, null);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(type, error, stack, codeFrame) {\n        var lastStatus = this.symbolicated[type].status;\n        if (error != null) {\n          this.symbolicated[type] = {\n            error: error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated[type] = {\n            error: null,\n            stack: stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated[type] = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        var status = this.symbolicated[type].status;\n        if (lastStatus !== status) {\n          if (['COMPLETE', 'FAILED'].includes(status)) {\n            this.flushCallbacks(type);\n          }\n        }\n      }\n    }]);\n  }(); // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    var currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    var currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(function (frame) {\n      var _frame$file;\n      if (!((_frame$file = frame.file) != null && _frame$file.startsWith('http')) ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      var url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach(function (value, key) {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return Object.assign({}, frame, {\n        file: url.toString()\n      });\n    });\n  }\n});","lineCount":240,"map":[[27,2,48,0,"Object"],[27,8,48,0],[27,9,48,0,"defineProperty"],[27,23,48,0],[27,24,48,0,"exports"],[27,31,48,0],[28,4,48,0,"enumerable"],[28,14,48,0],[29,4,48,0,"get"],[29,7,48,0],[29,18,48,0,"get"],[29,19,48,0],[30,6,48,0],[30,13,48,0,"LogBoxLog"],[30,22,48,0],[31,4,48,0],[32,2,48,0],[33,2,221,1],[33,6,221,1,"_babelRuntimeHelpersClassCallCheck"],[33,40,221,1],[33,43,221,1,"require"],[33,50,221,1],[33,51,221,1,"_dependencyMap"],[33,65,221,1],[34,2,221,1],[34,6,221,1,"_classCallCheck"],[34,21,221,1],[34,24,221,1,"_interopDefault"],[34,39,221,1],[34,40,221,1,"_babelRuntimeHelpersClassCallCheck"],[34,74,221,1],[35,2,221,1],[35,6,221,1,"_babelRuntimeHelpersCreateClass"],[35,37,221,1],[35,40,221,1,"require"],[35,47,221,1],[35,48,221,1,"_dependencyMap"],[35,62,221,1],[36,2,221,1],[36,6,221,1,"_createClass"],[36,18,221,1],[36,21,221,1,"_interopDefault"],[36,36,221,1],[36,37,221,1,"_babelRuntimeHelpersCreateClass"],[36,68,221,1],[37,2,9,0],[37,6,9,0,"_LogBoxSymbolication"],[37,26,9,0],[37,29,9,0,"require"],[37,36,9,0],[37,37,9,0,"_dependencyMap"],[37,51,9,0],[38,2,9,0],[38,6,9,0,"LogBoxSymbolication"],[38,25,9,0],[38,28,9,0,"_interopNamespace"],[38,45,9,0],[38,46,9,0,"_LogBoxSymbolication"],[38,66,9,0],[39,2,1,0],[40,0,2,0],[41,0,3,0],[42,0,4,0],[43,0,5,0],[44,0,6,0],[45,0,7,0],[47,2,30,0],[47,11,30,9,"componentStackToStack"],[47,32,30,30,"componentStackToStack"],[47,33,30,31,"componentStack"],[47,47,30,61],[47,49,30,70],[48,4,31,2],[48,11,31,9,"componentStack"],[48,25,31,23],[48,26,31,24,"map"],[48,29,31,27],[48,30,31,28],[48,40,31,29,"stack"],[48,45,31,34],[49,6,31,34],[49,10,31,34,"_stack$location$row"],[49,29,31,34],[49,31,31,34,"_stack$location"],[49,46,31,34],[49,48,31,34,"_stack$location$colum"],[49,69,31,34],[49,71,31,34,"_stack$location2"],[49,87,31,34],[50,6,31,34],[50,13,31,40],[51,8,32,4,"file"],[51,12,32,8],[51,14,32,10,"stack"],[51,19,32,15],[51,20,32,16,"fileName"],[51,28,32,24],[52,8,33,4,"methodName"],[52,18,33,14],[52,20,33,16,"stack"],[52,25,33,21],[52,26,33,22,"content"],[52,33,33,29],[53,8,34,4,"lineNumber"],[53,18,34,14],[53,21,34,14,"_stack$location$row"],[53,40,34,14],[53,44,34,14,"_stack$location"],[53,59,34,14],[53,62,34,16,"stack"],[53,67,34,21],[53,68,34,22,"location"],[53,76,34,30],[53,97,34,16,"_stack$location"],[53,112,34,16],[53,113,34,32,"row"],[53,116,34,35],[53,128,34,35,"_stack$location$row"],[53,147,34,35],[53,150,34,39],[53,151,34,40],[54,8,35,4,"column"],[54,14,35,10],[54,17,35,10,"_stack$location$colum"],[54,38,35,10],[54,42,35,10,"_stack$location2"],[54,58,35,10],[54,61,35,12,"stack"],[54,66,35,17],[54,67,35,18,"location"],[54,75,35,26],[54,96,35,12,"_stack$location2"],[54,112,35,12],[54,113,35,28,"column"],[54,119,35,34],[54,131,35,34,"_stack$location$colum"],[54,152,35,34],[54,155,35,38],[54,156,35,39],[55,8,36,4,"arguments"],[55,17,36,13],[55,19,36,15],[56,6,37,2],[56,7,37,3],[57,4,37,3],[57,5,37,4],[57,6,37,5],[58,2,38,0],[59,2,38,1],[59,6,48,13,"LogBoxLog"],[59,15,48,22],[60,4,73,2],[60,13,73,2,"LogBoxLog"],[60,23,74,4,"data"],[60,27,76,5],[60,29,77,4],[61,6,77,4],[61,10,77,4,"_data$type"],[61,20,77,4],[61,22,77,4,"_data$symbolicated"],[61,40,77,4],[62,6,77,4],[62,10,77,4,"_classCallCheck"],[62,25,77,4],[62,26,77,4,"default"],[62,33,77,4],[62,41,77,4,"LogBoxLog"],[62,50,77,4],[63,6,77,4],[63,11,58,2,"symbolicated"],[63,23,58,14],[63,26,58,57],[64,8,59,4,"stack"],[64,13,59,9],[64,15,59,11],[65,10,60,6,"error"],[65,15,60,11],[65,17,60,13],[65,21,60,17],[66,10,61,6,"stack"],[66,15,61,11],[66,17,61,13],[66,21,61,17],[67,10,62,6,"status"],[67,16,62,12],[67,18,62,14],[68,8,63,4],[68,9,63,5],[69,8,64,4,"component"],[69,17,64,13],[69,19,64,15],[70,10,65,6,"error"],[70,15,65,11],[70,17,65,13],[70,21,65,17],[71,10,66,6,"stack"],[71,15,66,11],[71,17,66,13],[71,21,66,17],[72,10,67,6,"status"],[72,16,67,12],[72,18,67,14],[73,8,68,4],[74,6,69,2],[74,7,69,3],[75,6,69,3],[75,11,71,10,"callbacks"],[75,20,71,19],[75,23,71,66],[75,27,71,70,"Map"],[75,30,71,73],[75,31,71,74],[75,32,71,75],[76,6,71,75],[76,11,153,10,"componentStackCache"],[76,30,153,29],[76,33,153,46],[76,37,153,50],[77,6,78,4],[77,10,78,8],[77,11,78,9,"level"],[77,16,78,14],[77,19,78,17,"data"],[77,23,78,21],[77,24,78,22,"level"],[77,29,78,27],[78,6,79,4],[78,10,79,8],[78,11,79,9,"type"],[78,15,79,13],[78,19,79,13,"_data$type"],[78,29,79,13],[78,32,79,16,"data"],[78,36,79,20],[78,37,79,21,"type"],[78,41,79,25],[78,53,79,25,"_data$type"],[78,63,79,25],[78,66,79,29],[78,73,79,36],[79,6,80,4],[79,10,80,8],[79,11,80,9,"message"],[79,18,80,16],[79,21,80,19,"data"],[79,25,80,23],[79,26,80,24,"message"],[79,33,80,31],[80,6,81,4],[80,10,81,8],[80,11,81,9,"stack"],[80,16,81,14],[80,19,81,17,"data"],[80,23,81,21],[80,24,81,22,"stack"],[80,29,81,27],[81,6,82,4],[81,10,82,8],[81,11,82,9,"category"],[81,19,82,17],[81,22,82,20,"data"],[81,26,82,24],[81,27,82,25,"category"],[81,35,82,33],[82,6,83,4],[82,10,83,8],[82,11,83,9,"componentStack"],[82,25,83,23],[82,28,83,26,"data"],[82,32,83,30],[82,33,83,31,"componentStack"],[82,47,83,45],[83,6,84,4],[83,10,84,8],[83,11,84,9,"codeFrame"],[83,20,84,18],[83,23,84,21,"data"],[83,27,84,25],[83,28,84,26,"codeFrame"],[83,37,84,35],[84,6,85,4],[84,10,85,8],[84,11,85,9,"isComponentError"],[84,27,85,25],[84,30,85,28,"data"],[84,34,85,32],[84,35,85,33,"isComponentError"],[84,51,85,49],[85,6,86,4],[85,10,86,8],[85,11,86,9,"count"],[85,16,86,14],[85,19,86,17],[85,20,86,18],[86,6,87,4],[86,10,87,8],[86,11,87,9,"symbolicated"],[86,23,87,21],[86,27,87,21,"_data$symbolicated"],[86,45,87,21],[86,48,87,24,"data"],[86,52,87,28],[86,53,87,29,"symbolicated"],[86,65,87,41],[86,77,87,41,"_data$symbolicated"],[86,95,87,41],[86,98,87,45],[86,102,87,49],[86,103,87,50,"symbolicated"],[86,115,87,62],[87,4,88,2],[88,4,88,3],[88,15,88,3,"_createClass"],[88,27,88,3],[88,28,88,3,"default"],[88,35,88,3],[88,37,88,3,"LogBoxLog"],[88,46,88,3],[89,6,88,3,"key"],[89,9,88,3],[90,6,88,3,"value"],[90,11,88,3],[90,13,90,2],[90,22,90,2,"incrementCount"],[90,36,90,16,"incrementCount"],[90,37,90,16],[90,39,90,25],[91,8,91,4],[91,12,91,8],[91,13,91,9,"count"],[91,18,91,14],[91,22,91,18],[91,23,91,19],[92,6,92,2],[93,4,92,3],[94,6,92,3,"key"],[94,9,92,3],[95,6,92,3,"value"],[95,11,92,3],[95,13,94,2],[95,22,94,2,"getAvailableStack"],[95,39,94,19,"getAvailableStack"],[95,40,94,20,"type"],[95,44,94,35],[95,46,94,51],[96,8,95,4],[96,12,95,8],[96,16,95,12],[96,17,95,13,"symbolicated"],[96,29,95,25],[96,30,95,26,"type"],[96,34,95,30],[96,35,95,31],[96,36,95,32,"status"],[96,42,95,38],[96,47,95,43],[96,57,95,53],[96,59,95,55],[97,10,96,6],[97,17,96,13],[97,21,96,17],[97,22,96,18,"symbolicated"],[97,34,96,30],[97,35,96,31,"type"],[97,39,96,35],[97,40,96,36],[97,41,96,37,"stack"],[97,46,96,42],[98,8,97,4],[99,8,98,4],[99,15,98,11],[99,19,98,15],[99,20,98,16,"getStack"],[99,28,98,24],[99,29,98,25,"type"],[99,33,98,29],[99,34,98,30],[100,6,99,2],[101,4,99,3],[102,6,99,3,"key"],[102,9,99,3],[103,6,99,3,"value"],[103,11,99,3],[103,13,101,2],[103,22,101,10,"flushCallbacks"],[103,36,101,24,"flushCallbacks"],[103,37,101,25,"type"],[103,41,101,40],[103,43,101,48],[104,8,102,4],[104,12,102,10,"callbacks"],[104,21,102,19],[104,24,102,22],[104,28,102,26],[104,29,102,27,"callbacks"],[104,38,102,36],[104,39,102,37,"get"],[104,42,102,40],[104,43,102,41,"type"],[104,47,102,45],[104,48,102,46],[105,8,103,4],[105,12,103,10,"status"],[105,18,103,16],[105,21,103,19],[105,25,103,23],[105,26,103,24,"symbolicated"],[105,38,103,36],[105,39,103,37,"type"],[105,43,103,41],[105,44,103,42],[105,45,103,43,"status"],[105,51,103,49],[106,8,104,4],[106,12,104,8,"callbacks"],[106,21,104,17],[106,23,104,19],[107,10,105,6],[107,15,105,11],[107,19,105,17,"callback"],[107,27,105,25],[107,31,105,29,"callbacks"],[107,40,105,38],[107,42,105,40],[108,12,106,8,"callback"],[108,20,106,16],[108,21,106,17,"status"],[108,27,106,23],[108,28,106,24],[109,10,107,6],[110,10,108,6,"callbacks"],[110,19,108,15],[110,20,108,16,"clear"],[110,25,108,21],[110,26,108,22],[110,27,108,23],[111,8,109,4],[112,6,110,2],[113,4,110,3],[114,6,110,3,"key"],[114,9,110,3],[115,6,110,3,"value"],[115,11,110,3],[115,13,112,2],[115,22,112,10,"pushCallback"],[115,34,112,22,"pushCallback"],[115,35,112,23,"type"],[115,39,112,38],[115,41,112,40,"callback"],[115,49,112,71],[115,51,112,79],[116,8,113,4],[116,12,113,8,"callbacks"],[116,21,113,17],[116,24,113,20],[116,28,113,24],[116,29,113,25,"callbacks"],[116,38,113,34],[116,39,113,35,"get"],[116,42,113,38],[116,43,113,39,"type"],[116,47,113,43],[116,48,113,44],[117,8,114,4],[117,12,114,8],[117,13,114,9,"callbacks"],[117,22,114,18],[117,24,114,20],[118,10,115,6,"callbacks"],[118,19,115,15],[118,22,115,18],[118,26,115,22,"Set"],[118,29,115,25],[118,30,115,26],[118,31,115,27],[119,10,116,6],[119,14,116,10],[119,15,116,11,"callbacks"],[119,24,116,20],[119,25,116,21,"set"],[119,28,116,24],[119,29,116,25,"type"],[119,33,116,29],[119,35,116,31,"callbacks"],[119,44,116,40],[119,45,116,41],[120,8,117,4],[121,8,118,4,"callbacks"],[121,17,118,13],[121,18,118,14,"add"],[121,21,118,17],[121,22,118,18,"callback"],[121,30,118,26],[121,31,118,27],[122,6,119,2],[123,4,119,3],[124,6,119,3,"key"],[124,9,119,3],[125,6,119,3,"value"],[125,11,119,3],[125,13,121,2],[125,22,121,2,"retrySymbolicate"],[125,38,121,18,"retrySymbolicate"],[125,39,121,19,"type"],[125,43,121,34],[125,45,121,36,"callback"],[125,53,121,84],[125,55,121,92],[126,8,122,4],[126,12,122,8],[126,13,122,9,"_symbolicate"],[126,25,122,21],[126,26,122,22,"type"],[126,30,122,26],[126,32,122,28],[126,36,122,32],[126,38,122,34,"callback"],[126,46,122,42],[126,47,122,43],[127,6,123,2],[128,4,123,3],[129,6,123,3,"key"],[129,9,123,3],[130,6,123,3,"value"],[130,11,123,3],[130,13,125,2],[130,22,125,2,"symbolicate"],[130,33,125,13,"symbolicate"],[130,34,125,14,"type"],[130,38,125,29],[130,40,125,31,"callback"],[130,48,125,79],[130,50,125,87],[131,8,126,4],[131,12,126,8],[131,13,126,9,"_symbolicate"],[131,25,126,21],[131,26,126,22,"type"],[131,30,126,26],[131,32,126,28],[131,37,126,33],[131,39,126,35,"callback"],[131,47,126,43],[131,48,126,44],[132,6,127,2],[133,4,127,3],[134,6,127,3,"key"],[134,9,127,3],[135,6,127,3,"value"],[135,11,127,3],[135,13,129,2],[135,22,129,10,"_symbolicate"],[135,34,129,22,"_symbolicate"],[135,35,130,4,"type"],[135,39,130,19],[135,41,131,4,"retry"],[135,46,131,18],[135,48,132,4,"callback"],[135,56,132,52],[135,58,133,10],[136,8,134,4],[136,12,134,8,"callback"],[136,20,134,16],[136,22,134,18],[137,10,135,6],[137,14,135,10],[137,15,135,11,"pushCallback"],[137,27,135,23],[137,28,135,24,"type"],[137,32,135,28],[137,34,135,30,"callback"],[137,42,135,38],[137,43,135,39],[138,8,136,4],[139,8,137,4],[139,12,137,10,"status"],[139,18,137,16],[139,21,137,19],[139,25,137,23],[139,26,137,24,"symbolicated"],[139,38,137,36],[139,39,137,37,"type"],[139,43,137,41],[139,44,137,42],[139,45,137,43,"status"],[139,51,137,49],[140,8,139,4],[140,12,139,8,"status"],[140,18,139,14],[140,23,139,19],[140,33,139,29],[140,35,139,31],[141,10,140,6],[141,17,140,13],[141,21,140,17],[141,22,140,18,"flushCallbacks"],[141,36,140,32],[141,37,140,33,"type"],[141,41,140,37],[141,42,140,38],[142,8,141,4],[143,8,143,4],[143,12,143,8,"retry"],[143,17,143,13],[143,19,143,15],[144,10,144,6,"LogBoxSymbolication"],[144,29,144,25],[144,30,144,26,"deleteStack"],[144,41,144,37],[144,42,144,38],[144,46,144,42],[144,47,144,43,"getStack"],[144,55,144,51],[144,56,144,52,"type"],[144,60,144,56],[144,61,144,57],[144,62,144,58],[145,10,145,6],[145,14,145,10],[145,15,145,11,"handleSymbolicate"],[145,32,145,28],[145,33,145,29,"type"],[145,37,145,33],[145,38,145,34],[146,8,146,4],[146,9,146,5],[146,15,146,11],[147,10,147,6],[147,14,147,10,"status"],[147,20,147,16],[147,25,147,21],[147,31,147,27],[147,33,147,29],[148,12,148,8],[148,16,148,12],[148,17,148,13,"handleSymbolicate"],[148,34,148,30],[148,35,148,31,"type"],[148,39,148,35],[148,40,148,36],[149,10,149,6],[150,8,150,4],[151,6,151,2],[152,4,151,3],[153,6,151,3,"key"],[153,9,151,3],[154,6,151,3,"value"],[154,11,151,3],[154,13,155,2],[154,22,155,10,"getStack"],[154,30,155,18,"getStack"],[154,31,155,19,"type"],[154,35,155,34],[154,37,155,43],[155,8,156,4],[155,12,156,8,"type"],[155,16,156,12],[155,21,156,17],[155,32,156,28],[155,34,156,30],[156,10,157,6],[156,14,157,10],[156,18,157,14],[156,19,157,15,"componentStackCache"],[156,38,157,34],[156,42,157,38],[156,46,157,42],[156,48,157,44],[157,12,158,8],[157,16,158,12],[157,17,158,13,"componentStackCache"],[157,36,158,32],[157,39,158,35,"componentStackToStack"],[157,60,158,56],[157,61,158,57],[157,65,158,61],[157,66,158,62,"componentStack"],[157,80,158,76],[157,81,158,77],[158,10,159,6],[159,10,160,6],[159,17,160,13],[159,21,160,17],[159,22,160,18,"componentStackCache"],[159,41,160,37],[160,8,161,4],[161,8,162,4],[161,15,162,11],[161,19,162,15],[161,20,162,16,"stack"],[161,25,162,21],[162,6,163,2],[163,4,163,3],[164,6,163,3,"key"],[164,9,163,3],[165,6,163,3,"value"],[165,11,163,3],[165,13,165,2],[165,22,165,10,"handleSymbolicate"],[165,39,165,27,"handleSymbolicate"],[165,40,165,28,"type"],[165,44,165,43],[165,46,165,51],[166,8,165,51],[166,12,165,51,"_this$componentStack"],[166,32,165,51],[167,10,165,51,"_this"],[167,15,165,51],[168,8,166,4],[168,12,166,8,"type"],[168,16,166,12],[168,21,166,17],[168,32,166,28],[168,36,166,32],[168,39,166,32,"_this$componentStack"],[168,59,166,32],[168,62,166,33],[168,66,166,37],[168,67,166,38,"componentStack"],[168,81,166,52],[168,94,166,33,"_this$componentStack"],[168,114,166,33],[168,115,166,54,"length"],[168,121,166,60],[168,124,166,62],[169,10,167,6],[170,8,168,4],[171,8,170,4],[171,12,170,8],[171,16,170,12],[171,17,170,13,"symbolicated"],[171,29,170,25],[171,30,170,26,"type"],[171,34,170,30],[171,35,170,31],[171,36,170,32,"status"],[171,42,170,38],[171,47,170,43],[171,56,170,52],[171,58,170,54],[172,10,171,6],[172,14,171,10],[172,15,171,11,"updateStatus"],[172,27,171,23],[172,28,171,24,"type"],[172,32,171,28],[172,34,171,30],[172,38,171,34],[172,40,171,36],[172,44,171,40],[172,46,171,42],[172,50,171,46],[172,51,171,47],[173,10,172,6,"LogBoxSymbolication"],[173,29,172,25],[173,30,172,26,"symbolicate"],[173,41,172,37],[173,42,172,38,"ensureStackFilesHaveParams"],[173,68,172,64],[173,69,172,65],[173,73,172,69],[173,74,172,70,"getStack"],[173,82,172,78],[173,83,172,79,"type"],[173,87,172,83],[173,88,172,84],[173,89,172,85],[173,90,172,86],[173,91,172,87,"then"],[173,95,172,91],[173,96,173,8],[173,106,173,9,"data"],[173,110,173,13],[173,112,173,18],[174,12,174,10,"_this"],[174,17,174,14],[174,18,174,15,"updateStatus"],[174,30,174,27],[174,31,174,28,"type"],[174,35,174,32],[174,37,174,34],[174,41,174,38],[174,43,174,40,"data"],[174,47,174,44],[174,67,174,40,"data"],[174,71,174,44],[174,72,174,46,"stack"],[174,77,174,51],[174,79,174,53,"data"],[174,83,174,57],[174,103,174,53,"data"],[174,107,174,57],[174,108,174,59,"codeFrame"],[174,117,174,68],[174,118,174,69],[175,10,175,8],[175,11,175,9],[175,13,176,8],[175,23,176,9,"error"],[175,28,176,14],[175,30,176,19],[176,12,177,10,"_this"],[176,17,177,14],[176,18,177,15,"updateStatus"],[176,30,177,27],[176,31,177,28,"type"],[176,35,177,32],[176,37,177,34,"error"],[176,42,177,39],[176,44,177,41],[176,48,177,45],[176,50,177,47],[176,54,177,51],[176,55,177,52],[177,10,178,8],[177,11,179,6],[177,12,179,7],[178,8,180,4],[179,6,181,2],[180,4,181,3],[181,6,181,3,"key"],[181,9,181,3],[182,6,181,3,"value"],[182,11,181,3],[182,13,183,2],[182,22,183,10,"updateStatus"],[182,34,183,22,"updateStatus"],[182,35,184,4,"type"],[182,39,184,19],[182,41,185,4,"error"],[182,46,185,24],[182,48,186,4,"stack"],[182,53,186,24],[182,55,187,4,"codeFrame"],[182,64,187,32],[182,66,188,10],[183,8,189,4],[183,12,189,10,"lastStatus"],[183,22,189,20],[183,25,189,23],[183,29,189,27],[183,30,189,28,"symbolicated"],[183,42,189,40],[183,43,189,41,"type"],[183,47,189,45],[183,48,189,46],[183,49,189,47,"status"],[183,55,189,53],[184,8,190,4],[184,12,190,8,"error"],[184,17,190,13],[184,21,190,17],[184,25,190,21],[184,27,190,23],[185,10,191,6],[185,14,191,10],[185,15,191,11,"symbolicated"],[185,27,191,23],[185,28,191,24,"type"],[185,32,191,28],[185,33,191,29],[185,36,191,32],[186,12,192,8,"error"],[186,17,192,13],[186,19,192,8,"error"],[186,24,192,13],[187,12,193,8,"stack"],[187,17,193,13],[187,19,193,15],[187,23,193,19],[188,12,194,8,"status"],[188,18,194,14],[188,20,194,16],[189,10,195,6],[189,11,195,7],[190,8,196,4],[190,9,196,5],[190,15,196,11],[190,19,196,15,"stack"],[190,24,196,20],[190,28,196,24],[190,32,196,28],[190,34,196,30],[191,10,197,6],[191,14,197,10,"codeFrame"],[191,23,197,19],[191,25,197,21],[192,12,198,8],[192,16,198,12],[192,17,198,13,"codeFrame"],[192,26,198,22],[192,29,198,25,"codeFrame"],[192,38,198,34],[193,10,199,6],[194,10,201,6],[194,14,201,10],[194,15,201,11,"symbolicated"],[194,27,201,23],[194,28,201,24,"type"],[194,32,201,28],[194,33,201,29],[194,36,201,32],[195,12,202,8,"error"],[195,17,202,13],[195,19,202,15],[195,23,202,19],[196,12,203,8,"stack"],[196,17,203,13],[196,19,203,8,"stack"],[196,24,203,13],[197,12,204,8,"status"],[197,18,204,14],[197,20,204,16],[198,10,205,6],[198,11,205,7],[199,8,206,4],[199,9,206,5],[199,15,206,11],[200,10,207,6],[200,14,207,10],[200,15,207,11,"symbolicated"],[200,27,207,23],[200,28,207,24,"type"],[200,32,207,28],[200,33,207,29],[200,36,207,32],[201,12,208,8,"error"],[201,17,208,13],[201,19,208,15],[201,23,208,19],[202,12,209,8,"stack"],[202,17,209,13],[202,19,209,15],[202,23,209,19],[203,12,210,8,"status"],[203,18,210,14],[203,20,210,16],[204,10,211,6],[204,11,211,7],[205,8,212,4],[206,8,214,4],[206,12,214,10,"status"],[206,18,214,16],[206,21,214,19],[206,25,214,23],[206,26,214,24,"symbolicated"],[206,38,214,36],[206,39,214,37,"type"],[206,43,214,41],[206,44,214,42],[206,45,214,43,"status"],[206,51,214,49],[207,8,215,4],[207,12,215,8,"lastStatus"],[207,22,215,18],[207,27,215,23,"status"],[207,33,215,29],[207,35,215,31],[208,10,216,6],[208,14,216,10],[208,15,216,11],[208,25,216,21],[208,27,216,23],[208,35,216,31],[208,36,216,32],[208,37,216,33,"includes"],[208,45,216,41],[208,46,216,42,"status"],[208,52,216,48],[208,53,216,49],[208,55,216,51],[209,12,217,8],[209,16,217,12],[209,17,217,13,"flushCallbacks"],[209,31,217,27],[209,32,217,28,"type"],[209,36,217,32],[209,37,217,33],[210,10,218,6],[211,8,219,4],[212,6,220,2],[213,4,220,3],[214,2,220,3],[214,7,223,0],[215,2,224,0],[216,2,225,0],[216,11,225,9,"ensureStackFilesHaveParams"],[216,37,225,35,"ensureStackFilesHaveParams"],[216,38,225,36,"stack"],[216,43,225,48],[216,45,225,57],[217,4,226,2],[217,8,226,8,"currentSrc"],[217,18,226,18],[217,21,227,4],[217,28,227,11,"document"],[217,36,227,19],[217,41,227,24],[217,52,227,35],[217,56,227,39,"document"],[217,64,227,47],[217,65,227,48,"currentScript"],[217,78,227,61],[217,81,228,9],[217,86,228,14],[217,90,228,18,"document"],[217,98,228,26],[217,99,228,27,"currentScript"],[217,112,228,40],[217,116,228,44,"document"],[217,124,228,52],[217,125,228,53,"currentScript"],[217,138,228,66],[217,139,228,67,"src"],[217,142,228,70],[217,146,228,75],[217,150,228,79],[217,153,229,8],[217,157,229,12],[218,4,231,2],[218,8,231,8,"currentParams"],[218,21,231,21],[218,24,231,24,"currentSrc"],[218,34,231,34],[218,37,232,6],[218,41,232,10,"URLSearchParams"],[218,56,232,25],[218,57,232,26,"currentSrc"],[218,67,232,36],[218,68,232,37],[218,71,233,6],[218,75,233,10,"URLSearchParams"],[218,90,233,25],[218,91,233,26],[219,6,234,8,"platform"],[219,14,234,16],[219,16,234,18],[219,21,234,23],[220,6,235,8,"dev"],[220,9,235,11],[220,11,235,13,"String"],[220,17,235,19],[220,18,235,20,"__DEV__"],[220,25,235,27],[221,4,236,6],[221,5,236,7],[221,6,236,8],[222,4,238,2],[222,11,238,9,"stack"],[222,16,238,14],[222,17,238,15,"map"],[222,20,238,18],[222,21,238,19],[222,31,238,20,"frame"],[222,36,238,25],[222,38,238,30],[223,6,238,30],[223,10,238,30,"_frame$file"],[223,21,238,30],[224,6,239,4],[224,10,240,6],[224,13,240,6,"_frame$file"],[224,24,240,6],[224,27,240,7,"frame"],[224,32,240,12],[224,33,240,13,"file"],[224,37,240,17],[224,50,240,7,"_frame$file"],[224,61,240,7],[224,62,240,19,"startsWith"],[224,72,240,29],[224,73,240,30],[224,79,240,36],[224,80,240,37],[225,6,241,6],[226,6,242,6,"frame"],[226,11,242,11],[226,12,242,12,"file"],[226,16,242,16],[226,17,242,17,"includes"],[226,25,242,25],[226,26,242,26],[226,38,242,38],[226,39,242,39],[226,41,244,6],[226,48,244,13,"frame"],[226,53,244,18],[227,6,246,4],[227,10,246,10,"url"],[227,13,246,13],[227,16,246,16],[227,20,246,20,"URL"],[227,23,246,23],[227,24,246,24,"frame"],[227,29,246,29],[227,30,246,30,"file"],[227,34,246,34],[227,35,246,35],[228,6,247,4],[228,10,247,8,"url"],[228,13,247,11],[228,14,247,12,"searchParams"],[228,26,247,24],[228,27,247,25,"has"],[228,30,247,28],[228,31,247,29],[228,41,247,39],[228,42,247,40],[228,44,247,42],[229,8,248,6],[229,15,248,13,"frame"],[229,20,248,18],[230,6,249,4],[231,6,251,4,"currentParams"],[231,19,251,17],[231,20,251,18,"forEach"],[231,27,251,25],[231,28,251,26],[231,38,251,27,"value"],[231,43,251,32],[231,45,251,34,"key"],[231,48,251,37],[231,50,251,42],[232,8,252,6],[232,12,252,10,"url"],[232,15,252,13],[232,16,252,14,"searchParams"],[232,28,252,26],[232,29,252,27,"has"],[232,32,252,30],[232,33,252,31,"key"],[232,36,252,34],[232,37,252,35],[232,39,252,37],[233,8,253,6,"url"],[233,11,253,9],[233,12,253,10,"searchParams"],[233,24,253,22],[233,25,253,23,"set"],[233,28,253,26],[233,29,253,27,"key"],[233,32,253,30],[233,34,253,32,"value"],[233,39,253,37],[233,40,253,38],[234,6,254,4],[234,7,254,5],[234,8,254,6],[235,6,256,4],[235,13,256,4,"Object"],[235,19,256,4],[235,20,256,4,"assign"],[235,26,256,4],[235,31,256,16,"frame"],[235,36,256,21],[236,8,256,23,"file"],[236,12,256,27],[236,14,256,29,"url"],[236,17,256,32],[236,18,256,33,"toString"],[236,26,256,41],[236,27,256,42],[237,6,256,43],[238,4,257,2],[238,5,257,3],[238,6,257,4],[239,2,258,0],[240,0,258,1],[240,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"},"hasCjsExports":false},"type":"js/module"}]}