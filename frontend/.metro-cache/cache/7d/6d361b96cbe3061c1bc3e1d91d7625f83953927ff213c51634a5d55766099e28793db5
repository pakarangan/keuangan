{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"],"imports":1}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}},{"name":"./BaseRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":45,"index":104}}],"key":"dJts27xOtIr7LbP/D7m0z2vzxHI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"TabActions\", {\n    enumerable: true,\n    get: function () {\n      return TabActions;\n    }\n  });\n  exports.TabRouter = TabRouter;\n  var _babelRuntimeHelpersToConsumableArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _toConsumableArray = _interopDefault(_babelRuntimeHelpersToConsumableArray);\n  var _nanoidNonSecure = require(_dependencyMap[1], \"nanoid/non-secure\");\n  var _BaseRouterJs = require(_dependencyMap[2], \"./BaseRouter.js\");\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n      case 'fullHistory':\n        // The history will fill up on navigation\n        break;\n    }\n    return history;\n  };\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history = state.history;\n    if (backBehavior === 'history' || backBehavior === 'fullHistory') {\n      var currentRouteKey = state.routes[index].key;\n      if (backBehavior === 'history') {\n        // Remove the existing key from the history to de-duplicate it\n        history = history.filter(function (it) {\n          return it.type === 'route' ? it.key !== currentRouteKey : false;\n        });\n      } else if (backBehavior === 'fullHistory') {\n        var _history$lastHistoryR;\n        var lastHistoryRouteItemIndex = history.findLastIndex(function (item) {\n          return item.type === 'route';\n        });\n        if (currentRouteKey === ((_history$lastHistoryR = history[lastHistoryRouteItemIndex]) == null ? void 0 : _history$lastHistoryR.key)) {\n          // For full-history, only remove if it matches the last route\n          // Useful for drawer, if current route was in history, then drawer state changed\n          // Then we only need to move the route to the front\n          history = [].concat((0, _toConsumableArray.default)(history.slice(0, lastHistoryRouteItemIndex)), (0, _toConsumableArray.default)(history.slice(lastHistoryRouteItemIndex + 1)));\n        }\n      }\n      history = history.concat({\n        type: TYPE_ROUTE,\n        key: currentRouteKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return Object.assign({}, state, {\n      index: index,\n      history: history\n    });\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = Object.assign({}, _BaseRouterJs.BaseRouter, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes,\n          preloadedRouteKeys: []\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$routes, _state$index, _state$history$filter, _state$history, _state$preloadedRoute, _state$preloadedRoute2;\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return Object.assign({}, route, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? Object.assign({}, routeParamList[name], route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state == null ? void 0 : state.index) != null ? _state$index : 0]) == null ? void 0 : _state$routes.name), 0), routes.length - 1);\n        var routeKeys = routes.map(function (route) {\n          return route.key;\n        });\n        var history = (_state$history$filter = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routeKeys.includes(it.key);\n        })) != null ? _state$history$filter : [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes,\n          preloadedRouteKeys: (_state$preloadedRoute = (_state$preloadedRoute2 = state.preloadedRouteKeys) == null ? void 0 : _state$preloadedRoute2.filter(function (key) {\n            return routeKeys.includes(key);\n          })) != null ? _state$preloadedRoute : []\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name && !routeKeyChanges.includes(r.name);\n          }) || {\n            name: name,\n            key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        function (it) {\n          return it.type !== 'route' || routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return Object.assign({}, state, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              var index = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name;\n              });\n              if (index === -1) {\n                return null;\n              }\n              var updatedState = changeIndex(Object.assign({}, state, {\n                routes: state.routes.map(function (route) {\n                  if (route.name !== action.payload.name) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId == null ? void 0 : getId({\n                    params: route.params\n                  });\n                  var nextId = getId == null ? void 0 : getId({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n                  var params;\n                  if ((action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED') && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], route.params, action.payload.params) : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], action.payload.params) : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? Object.assign({}, route, {\n                    key: key,\n                    path: path,\n                    params: params\n                  }) : route;\n                })\n              }), index, backBehavior, initialRouteName);\n              return Object.assign({}, updatedState, {\n                preloadedRouteKeys: updatedState.preloadedRouteKeys.filter(function (key) {\n                  return key !== state.routes[updatedState.index].key;\n                })\n              });\n            }\n          case 'GO_BACK':\n            {\n              var _state$history2;\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousKey = (_state$history2 = state.history[state.history.length - 2]) == null ? void 0 : _state$history2.key;\n              var _index = state.routes.findLastIndex(function (route) {\n                return route.key === previousKey;\n              });\n              if (_index === -1) {\n                return null;\n              }\n              return Object.assign({}, state, {\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(function (key) {\n                  return key !== state.routes[_index].key;\n                }),\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n          case 'PRELOAD':\n            {\n              var routeIndex = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name;\n              });\n              if (routeIndex === -1) {\n                return null;\n              }\n              var route = state.routes[routeIndex];\n              var getId = routeGetIdList[route.name];\n              var currentId = getId == null ? void 0 : getId({\n                params: route.params\n              });\n              var nextId = getId == null ? void 0 : getId({\n                params: action.payload.params\n              });\n              var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n              var params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], action.payload.params) : undefined;\n              var newRoute = params !== route.params ? Object.assign({}, route, {\n                key: key,\n                params: params\n              }) : route;\n              return Object.assign({}, state, {\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(function (key) {\n                  return key !== route.key;\n                }).concat(newRoute.key),\n                routes: state.routes.map(function (route, index) {\n                  return index === routeIndex ? newRoute : route;\n                }),\n                history: key === route.key ? state.history : state.history.filter(function (record) {\n                  return record.key !== route.key;\n                })\n              });\n            }\n          default:\n            return _BaseRouterJs.BaseRouter.getStateForAction(state, action);\n        }\n      },\n      actionCreators: TabActions\n    });\n    return router;\n  }\n});","lineCount":327,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,6,0,"Object"],[12,8,6,0],[12,9,6,0,"defineProperty"],[12,23,6,0],[12,24,6,0,"exports"],[12,31,6,0],[13,4,6,0,"enumerable"],[13,14,6,0],[14,4,6,0,"get"],[14,7,6,0],[14,18,6,0,"get"],[14,19,6,0],[15,6,6,0],[15,13,6,0,"TabActions"],[15,23,6,0],[16,4,6,0],[17,2,6,0],[18,2,86,0,"exports"],[18,9,86,0],[18,10,86,0,"TabRouter"],[18,19,86,0],[18,22,86,0,"TabRouter"],[18,31,86,0],[19,2,290,1],[19,6,290,1,"_babelRuntimeHelpersToConsumableArray"],[19,43,290,1],[19,46,290,1,"require"],[19,53,290,1],[19,54,290,1,"_dependencyMap"],[19,68,290,1],[20,2,290,1],[20,6,290,1,"_toConsumableArray"],[20,24,290,1],[20,27,290,1,"_interopDefault"],[20,42,290,1],[20,43,290,1,"_babelRuntimeHelpersToConsumableArray"],[20,80,290,1],[21,2,3,0],[21,6,3,0,"_nanoidNonSecure"],[21,22,3,0],[21,25,3,0,"require"],[21,32,3,0],[21,33,3,0,"_dependencyMap"],[21,47,3,0],[22,2,4,0],[22,6,4,0,"_BaseRouterJs"],[22,19,4,0],[22,22,4,0,"require"],[22,29,4,0],[22,30,4,0,"_dependencyMap"],[22,44,4,0],[23,2,5,0],[23,6,5,6,"TYPE_ROUTE"],[23,16,5,16],[23,19,5,19],[23,26,5,26],[24,2,6,7],[24,6,6,13,"TabActions"],[24,16,6,23],[24,19,6,26],[25,4,7,2,"jumpTo"],[25,10,7,8],[25,21,7,2,"jumpTo"],[25,27,7,8,"jumpTo"],[25,28,7,9,"name"],[25,32,7,13],[25,34,7,15,"params"],[25,40,7,21],[25,42,7,23],[26,6,8,4],[26,13,8,11],[27,8,9,6,"type"],[27,12,9,10],[27,14,9,12],[27,23,9,21],[28,8,10,6,"payload"],[28,15,10,13],[28,17,10,15],[29,10,11,8,"name"],[29,14,11,12],[29,16,11,8,"name"],[29,20,11,12],[30,10,12,8,"params"],[30,16,12,14],[30,18,12,8,"params"],[31,8,13,6],[32,6,14,4],[32,7,14,5],[33,4,15,2],[34,2,16,0],[34,3,16,1],[35,2,17,0],[35,6,17,6,"getRouteHistory"],[35,21,17,21],[35,24,17,24],[35,33,17,6,"getRouteHistory"],[35,48,17,21,"getRouteHistory"],[35,49,17,25,"routes"],[35,55,17,31],[35,57,17,33,"index"],[35,62,17,38],[35,64,17,40,"backBehavior"],[35,76,17,52],[35,78,17,54,"initialRouteName"],[35,94,17,70],[35,96,17,75],[36,4,18,2],[36,8,18,8,"history"],[36,15,18,15],[36,18,18,18],[36,19,18,19],[37,6,19,4,"type"],[37,10,19,8],[37,12,19,10,"TYPE_ROUTE"],[37,22,19,20],[38,6,20,4,"key"],[38,9,20,7],[38,11,20,9,"routes"],[38,17,20,15],[38,18,20,16,"index"],[38,23,20,21],[38,24,20,22],[38,25,20,23,"key"],[39,4,21,2],[39,5,21,3],[39,6,21,4],[40,4,22,2],[40,8,22,6,"initialRouteIndex"],[40,25,22,23],[41,4,23,2],[41,12,23,10,"backBehavior"],[41,24,23,22],[42,6,24,4],[42,11,24,9],[42,18,24,16],[43,8,25,6],[43,13,25,11],[43,17,25,15,"i"],[43,18,25,16],[43,21,25,19,"index"],[43,26,25,24],[43,28,25,26,"i"],[43,29,25,27],[43,32,25,30],[43,33,25,31],[43,35,25,33,"i"],[43,36,25,34],[43,38,25,36],[43,40,25,38],[44,10,26,8,"history"],[44,17,26,15],[44,18,26,16,"unshift"],[44,25,26,23],[44,26,26,24],[45,12,27,10,"type"],[45,16,27,14],[45,18,27,16,"TYPE_ROUTE"],[45,28,27,26],[46,12,28,10,"key"],[46,15,28,13],[46,17,28,15,"routes"],[46,23,28,21],[46,24,28,22,"i"],[46,25,28,23],[46,28,28,26],[46,29,28,27],[46,30,28,28],[46,31,28,29,"key"],[47,10,29,8],[47,11,29,9],[47,12,29,10],[48,8,30,6],[49,8,31,6],[50,6,32,4],[50,11,32,9],[50,23,32,21],[51,8,33,6],[51,12,33,10,"index"],[51,17,33,15],[51,22,33,20],[51,23,33,21],[51,25,33,23],[52,10,34,8,"history"],[52,17,34,15],[52,18,34,16,"unshift"],[52,25,34,23],[52,26,34,24],[53,12,35,10,"type"],[53,16,35,14],[53,18,35,16,"TYPE_ROUTE"],[53,28,35,26],[54,12,36,10,"key"],[54,15,36,13],[54,17,36,15,"routes"],[54,23,36,21],[54,24,36,22],[54,25,36,23],[54,26,36,24],[54,27,36,25,"key"],[55,10,37,8],[55,11,37,9],[55,12,37,10],[56,8,38,6],[57,8,39,6],[58,6,40,4],[58,11,40,9],[58,25,40,23],[59,8,41,6,"initialRouteIndex"],[59,25,41,23],[59,28,41,26,"routes"],[59,34,41,32],[59,35,41,33,"findIndex"],[59,44,41,42],[59,45,41,43],[59,55,41,43,"route"],[59,60,41,48],[60,10,41,48],[60,17,41,52,"route"],[60,22,41,57],[60,23,41,58,"name"],[60,27,41,62],[60,32,41,67,"initialRouteName"],[60,48,41,83],[61,8,41,83],[61,10,41,84],[62,8,42,6,"initialRouteIndex"],[62,25,42,23],[62,28,42,26,"initialRouteIndex"],[62,45,42,43],[62,50,42,48],[62,51,42,49],[62,52,42,50],[62,55,42,53],[62,56,42,54],[62,59,42,57,"initialRouteIndex"],[62,76,42,74],[63,8,43,6],[63,12,43,10,"index"],[63,17,43,15],[63,22,43,20,"initialRouteIndex"],[63,39,43,37],[63,41,43,39],[64,10,44,8,"history"],[64,17,44,15],[64,18,44,16,"unshift"],[64,25,44,23],[64,26,44,24],[65,12,45,10,"type"],[65,16,45,14],[65,18,45,16,"TYPE_ROUTE"],[65,28,45,26],[66,12,46,10,"key"],[66,15,46,13],[66,17,46,15,"routes"],[66,23,46,21],[66,24,46,22,"initialRouteIndex"],[66,41,46,39],[66,42,46,40],[66,43,46,41,"key"],[67,10,47,8],[67,11,47,9],[67,12,47,10],[68,8,48,6],[69,8,49,6],[70,6,50,4],[70,11,50,9],[70,20,50,18],[71,6,51,4],[71,11,51,9],[71,24,51,22],[72,8,52,6],[73,8,53,6],[74,4,54,2],[75,4,55,2],[75,11,55,9,"history"],[75,18,55,16],[76,2,56,0],[76,3,56,1],[77,2,57,0],[77,6,57,6,"changeIndex"],[77,17,57,17],[77,20,57,20],[77,29,57,6,"changeIndex"],[77,40,57,17,"changeIndex"],[77,41,57,21,"state"],[77,46,57,26],[77,48,57,28,"index"],[77,53,57,33],[77,55,57,35,"backBehavior"],[77,67,57,47],[77,69,57,49,"initialRouteName"],[77,85,57,65],[77,87,57,70],[78,4,58,2],[78,8,58,6,"history"],[78,15,58,13],[78,18,58,16,"state"],[78,23,58,21],[78,24,58,22,"history"],[78,31,58,29],[79,4,59,2],[79,8,59,6,"backBehavior"],[79,20,59,18],[79,25,59,23],[79,34,59,32],[79,38,59,36,"backBehavior"],[79,50,59,48],[79,55,59,53],[79,68,59,66],[79,70,59,68],[80,6,60,4],[80,10,60,10,"currentRouteKey"],[80,25,60,25],[80,28,60,28,"state"],[80,33,60,33],[80,34,60,34,"routes"],[80,40,60,40],[80,41,60,41,"index"],[80,46,60,46],[80,47,60,47],[80,48,60,48,"key"],[80,51,60,51],[81,6,61,4],[81,10,61,8,"backBehavior"],[81,22,61,20],[81,27,61,25],[81,36,61,34],[81,38,61,36],[82,8,62,6],[83,8,63,6,"history"],[83,15,63,13],[83,18,63,16,"history"],[83,25,63,23],[83,26,63,24,"filter"],[83,32,63,30],[83,33,63,31],[83,43,63,31,"it"],[83,45,63,33],[84,10,63,33],[84,17,63,37,"it"],[84,19,63,39],[84,20,63,40,"type"],[84,24,63,44],[84,29,63,49],[84,36,63,56],[84,39,63,59,"it"],[84,41,63,61],[84,42,63,62,"key"],[84,45,63,65],[84,50,63,70,"currentRouteKey"],[84,65,63,85],[84,68,63,88],[84,73,63,93],[85,8,63,93],[85,10,63,94],[86,6,64,4],[86,7,64,5],[86,13,64,11],[86,17,64,15,"backBehavior"],[86,29,64,27],[86,34,64,32],[86,47,64,45],[86,49,64,47],[87,8,64,47],[87,12,64,47,"_history$lastHistoryR"],[87,33,64,47],[88,8,65,6],[88,12,65,12,"lastHistoryRouteItemIndex"],[88,37,65,37],[88,40,65,40,"history"],[88,47,65,47],[88,48,65,48,"findLastIndex"],[88,61,65,61],[88,62,65,62],[88,72,65,62,"item"],[88,76,65,66],[89,10,65,66],[89,17,65,70,"item"],[89,21,65,74],[89,22,65,75,"type"],[89,26,65,79],[89,31,65,84],[89,38,65,91],[90,8,65,91],[90,10,65,92],[91,8,66,6],[91,12,66,10,"currentRouteKey"],[91,27,66,25],[91,34,66,25,"_history$lastHistoryR"],[91,55,66,25],[91,58,66,30,"history"],[91,65,66,37],[91,66,66,38,"lastHistoryRouteItemIndex"],[91,91,66,63],[91,92,66,64],[91,113,66,30,"_history$lastHistoryR"],[91,134,66,30],[91,135,66,66,"key"],[91,138,66,69],[91,141,66,71],[92,10,67,8],[93,10,68,8],[94,10,69,8],[95,10,70,8,"history"],[95,17,70,15],[95,23,70,15,"concat"],[95,29,70,15],[95,34,70,15,"_toConsumableArray"],[95,52,70,15],[95,53,70,15,"default"],[95,60,70,15],[95,62,70,22,"history"],[95,69,70,29],[95,70,70,30,"slice"],[95,75,70,35],[95,76,70,36],[95,77,70,37],[95,79,70,39,"lastHistoryRouteItemIndex"],[95,104,70,64],[95,105,70,65],[95,112,70,65,"_toConsumableArray"],[95,130,70,65],[95,131,70,65,"default"],[95,138,70,65],[95,140,70,70,"history"],[95,147,70,77],[95,148,70,78,"slice"],[95,153,70,83],[95,154,70,84,"lastHistoryRouteItemIndex"],[95,179,70,109],[95,182,70,112],[95,183,70,113],[95,184,70,114],[95,186,70,115],[96,8,71,6],[97,6,72,4],[98,6,73,4,"history"],[98,13,73,11],[98,16,73,14,"history"],[98,23,73,21],[98,24,73,22,"concat"],[98,30,73,28],[98,31,73,29],[99,8,74,6,"type"],[99,12,74,10],[99,14,74,12,"TYPE_ROUTE"],[99,24,74,22],[100,8,75,6,"key"],[100,11,75,9],[100,13,75,11,"currentRouteKey"],[101,6,76,4],[101,7,76,5],[101,8,76,6],[102,4,77,2],[102,5,77,3],[102,11,77,9],[103,6,78,4,"history"],[103,13,78,11],[103,16,78,14,"getRouteHistory"],[103,31,78,29],[103,32,78,30,"state"],[103,37,78,35],[103,38,78,36,"routes"],[103,44,78,42],[103,46,78,44,"index"],[103,51,78,49],[103,53,78,51,"backBehavior"],[103,65,78,63],[103,67,78,65,"initialRouteName"],[103,83,78,81],[103,84,78,82],[104,4,79,2],[105,4,80,2],[105,11,80,2,"Object"],[105,17,80,2],[105,18,80,2,"assign"],[105,24,80,2],[105,29,81,7,"state"],[105,34,81,12],[106,6,82,4,"index"],[106,11,82,9],[106,13,82,4,"index"],[106,18,82,9],[107,6,83,4,"history"],[107,13,83,11],[107,15,83,4,"history"],[108,4,83,11],[109,2,85,0],[109,3,85,1],[110,2,86,7],[110,11,86,16,"TabRouter"],[110,20,86,25,"TabRouter"],[110,21,86,25,"_ref"],[110,25,86,25],[110,27,89,3],[111,4,89,3],[111,8,87,2,"initialRouteName"],[111,24,87,18],[111,27,87,18,"_ref"],[111,31,87,18],[111,32,87,2,"initialRouteName"],[111,48,87,18],[112,6,87,18,"_ref$backBehavior"],[112,23,87,18],[112,26,87,18,"_ref"],[112,30,87,18],[112,31,88,2,"backBehavior"],[112,43,88,14],[113,6,88,2,"backBehavior"],[113,18,88,14],[113,21,88,14,"_ref$backBehavior"],[113,38,88,14],[113,52,88,17],[113,64,88,29],[113,67,88,29,"_ref$backBehavior"],[113,84,88,29],[114,4,90,2],[114,8,90,8,"router"],[114,14,90,14],[114,17,90,14,"Object"],[114,23,90,14],[114,24,90,14,"assign"],[114,30,90,14],[114,35,91,7,"BaseRouter"],[114,48,91,17],[114,49,91,17,"BaseRouter"],[114,59,91,17],[115,6,92,4,"type"],[115,10,92,8],[115,12,92,10],[115,17,92,15],[116,6,93,4,"getInitialState"],[116,21,93,19],[116,32,93,4,"getInitialState"],[116,47,93,19,"getInitialState"],[116,48,93,19,"_ref2"],[116,53,93,19],[116,55,96,7],[117,8,96,7],[117,12,94,6,"routeNames"],[117,22,94,16],[117,25,94,16,"_ref2"],[117,30,94,16],[117,31,94,6,"routeNames"],[117,41,94,16],[118,10,95,6,"routeParamList"],[118,24,95,20],[118,27,95,20,"_ref2"],[118,32,95,20],[118,33,95,6,"routeParamList"],[118,47,95,20],[119,8,97,6],[119,12,97,12,"index"],[119,17,97,17],[119,20,97,20,"initialRouteName"],[119,36,97,36],[119,41,97,41,"undefined"],[119,50,97,50],[119,54,97,54,"routeNames"],[119,64,97,64],[119,65,97,65,"includes"],[119,73,97,73],[119,74,97,74,"initialRouteName"],[119,90,97,90],[119,91,97,91],[119,94,97,94,"routeNames"],[119,104,97,104],[119,105,97,105,"indexOf"],[119,112,97,112],[119,113,97,113,"initialRouteName"],[119,129,97,129],[119,130,97,130],[119,133,97,133],[119,134,97,134],[120,8,98,6],[120,12,98,12,"routes"],[120,18,98,18],[120,21,98,21,"routeNames"],[120,31,98,31],[120,32,98,32,"map"],[120,35,98,35],[120,36,98,36],[120,46,98,36,"name"],[120,50,98,40],[121,10,98,40],[121,17,98,45],[122,12,99,8,"name"],[122,16,99,12],[122,18,99,8,"name"],[122,22,99,12],[123,12,100,8,"key"],[123,15,100,11],[123,17,100,13],[123,20,100,16,"name"],[123,24,100,20],[123,28,100,24],[123,32,100,24,"nanoid"],[123,48,100,30],[123,49,100,30,"nanoid"],[123,55,100,30],[123,57,100,31],[123,58,100,32],[123,60,100,34],[124,12,101,8,"params"],[124,18,101,14],[124,20,101,16,"routeParamList"],[124,34,101,30],[124,35,101,31,"name"],[124,39,101,35],[125,10,102,6],[125,11,102,7],[126,8,102,7],[126,9,102,8],[126,10,102,9],[127,8,103,6],[127,12,103,12,"history"],[127,19,103,19],[127,22,103,22,"getRouteHistory"],[127,37,103,37],[127,38,103,38,"routes"],[127,44,103,44],[127,46,103,46,"index"],[127,51,103,51],[127,53,103,53,"backBehavior"],[127,65,103,65],[127,67,103,67,"initialRouteName"],[127,83,103,83],[127,84,103,84],[128,8,104,6],[128,15,104,13],[129,10,105,8,"stale"],[129,15,105,13],[129,17,105,15],[129,22,105,20],[130,10,106,8,"type"],[130,14,106,12],[130,16,106,14],[130,21,106,19],[131,10,107,8,"key"],[131,13,107,11],[131,15,107,13],[131,22,107,20],[131,26,107,20,"nanoid"],[131,42,107,26],[131,43,107,26,"nanoid"],[131,49,107,26],[131,51,107,27],[131,52,107,28],[131,54,107,30],[132,10,108,8,"index"],[132,15,108,13],[132,17,108,8,"index"],[132,22,108,13],[133,10,109,8,"routeNames"],[133,20,109,18],[133,22,109,8,"routeNames"],[133,32,109,18],[134,10,110,8,"history"],[134,17,110,15],[134,19,110,8,"history"],[134,26,110,15],[135,10,111,8,"routes"],[135,16,111,14],[135,18,111,8,"routes"],[135,24,111,14],[136,10,112,8,"preloadedRouteKeys"],[136,28,112,26],[136,30,112,28],[137,8,113,6],[137,9,113,7],[138,6,114,4],[138,7,114,5],[139,6,115,4,"getRehydratedState"],[139,24,115,22],[139,35,115,4,"getRehydratedState"],[139,53,115,22,"getRehydratedState"],[139,54,115,23,"partialState"],[139,66,115,35],[139,68,115,35,"_ref3"],[139,73,115,35],[139,75,118,7],[140,8,118,7],[140,12,118,7,"_state$routes"],[140,25,118,7],[140,27,118,7,"_state$index"],[140,39,118,7],[140,41,118,7,"_state$history$filter"],[140,62,118,7],[140,64,118,7,"_state$history"],[140,78,118,7],[140,80,118,7,"_state$preloadedRoute"],[140,101,118,7],[140,103,118,7,"_state$preloadedRoute2"],[140,125,118,7],[141,8,118,7],[141,12,116,6,"routeNames"],[141,22,116,16],[141,25,116,16,"_ref3"],[141,30,116,16],[141,31,116,6,"routeNames"],[141,41,116,16],[142,10,117,6,"routeParamList"],[142,24,117,20],[142,27,117,20,"_ref3"],[142,32,117,20],[142,33,117,6,"routeParamList"],[142,47,117,20],[143,8,119,6],[143,12,119,12,"state"],[143,17,119,17],[143,20,119,20,"partialState"],[143,32,119,32],[144,8,120,6],[144,12,120,10,"state"],[144,17,120,15],[144,18,120,16,"stale"],[144,23,120,21],[144,28,120,26],[144,33,120,31],[144,35,120,33],[145,10,121,8],[145,17,121,15,"state"],[145,22,121,20],[146,8,122,6],[147,8,123,6],[147,12,123,12,"routes"],[147,18,123,18],[147,21,123,21,"routeNames"],[147,31,123,31],[147,32,123,32,"map"],[147,35,123,35],[147,36,123,36],[147,46,123,36,"name"],[147,50,123,40],[147,52,123,44],[148,10,124,8],[148,14,124,14,"route"],[148,19,124,19],[148,22,124,22,"state"],[148,27,124,27],[148,28,124,28,"routes"],[148,34,124,34],[148,35,124,35,"find"],[148,39,124,39],[148,40,124,40],[148,50,124,40,"r"],[148,51,124,41],[149,12,124,41],[149,19,124,45,"r"],[149,20,124,46],[149,21,124,47,"name"],[149,25,124,51],[149,30,124,56,"name"],[149,34,124,60],[150,10,124,60],[150,12,124,61],[151,10,125,8],[151,17,125,8,"Object"],[151,23,125,8],[151,24,125,8,"assign"],[151,30,125,8],[151,35,126,13,"route"],[151,40,126,18],[152,12,127,10,"name"],[152,16,127,14],[152,18,127,10,"name"],[152,22,127,14],[153,12,128,10,"key"],[153,15,128,13],[153,17,128,15,"route"],[153,22,128,20],[153,26,128,24,"route"],[153,31,128,29],[153,32,128,30,"name"],[153,36,128,34],[153,41,128,39,"name"],[153,45,128,43],[153,49,128,47,"route"],[153,54,128,52],[153,55,128,53,"key"],[153,58,128,56],[153,61,128,59,"route"],[153,66,128,64],[153,67,128,65,"key"],[153,70,128,68],[153,73,128,71],[153,76,128,74,"name"],[153,80,128,78],[153,84,128,82],[153,88,128,82,"nanoid"],[153,104,128,88],[153,105,128,88,"nanoid"],[153,111,128,88],[153,113,128,89],[153,114,128,90],[153,116,128,92],[154,12,129,10,"params"],[154,18,129,16],[154,20,129,18,"routeParamList"],[154,34,129,32],[154,35,129,33,"name"],[154,39,129,37],[154,40,129,38],[154,45,129,43,"undefined"],[154,54,129,52],[154,57,129,52,"Object"],[154,63,129,52],[154,64,129,52,"assign"],[154,70,129,52],[154,75,130,15,"routeParamList"],[154,89,130,29],[154,90,130,30,"name"],[154,94,130,34],[154,95,130,35],[154,97,131,16,"route"],[154,102,131,21],[154,105,131,24,"route"],[154,110,131,29],[154,111,131,30,"params"],[154,117,131,36],[154,120,131,39,"undefined"],[154,129,131,48],[154,133,132,14,"route"],[154,138,132,19],[154,141,132,22,"route"],[154,146,132,27],[154,147,132,28,"params"],[154,153,132,34],[154,156,132,37,"undefined"],[155,10,132,46],[156,8,134,6],[156,9,134,7],[156,10,134,8],[157,8,135,6],[157,12,135,12,"index"],[157,17,135,17],[157,20,135,20,"Math"],[157,24,135,24],[157,25,135,25,"min"],[157,28,135,28],[157,29,135,29,"Math"],[157,33,135,33],[157,34,135,34,"max"],[157,37,135,37],[157,38,135,38,"routeNames"],[157,48,135,48],[157,49,135,49,"indexOf"],[157,56,135,56],[157,58,135,56,"_state$routes"],[157,71,135,56],[157,74,135,57,"state"],[157,79,135,62],[157,80,135,63,"routes"],[157,86,135,69],[157,88,135,69,"_state$index"],[157,100,135,69],[157,103,135,70,"state"],[157,108,135,75],[157,128,135,70,"state"],[157,133,135,75],[157,134,135,77,"index"],[157,139,135,82],[157,151,135,82,"_state$index"],[157,163,135,82],[157,166,135,86],[157,167,135,87],[157,168,135,88],[157,189,135,57,"_state$routes"],[157,202,135,57],[157,203,135,90,"name"],[157,207,135,94],[157,208,135,95],[157,210,135,97],[157,211,135,98],[157,212,135,99],[157,214,135,101,"routes"],[157,220,135,107],[157,221,135,108,"length"],[157,227,135,114],[157,230,135,117],[157,231,135,118],[157,232,135,119],[158,8,136,6],[158,12,136,12,"routeKeys"],[158,21,136,21],[158,24,136,24,"routes"],[158,30,136,30],[158,31,136,31,"map"],[158,34,136,34],[158,35,136,35],[158,45,136,35,"route"],[158,50,136,40],[159,10,136,40],[159,17,136,44,"route"],[159,22,136,49],[159,23,136,50,"key"],[159,26,136,53],[160,8,136,53],[160,10,136,54],[161,8,137,6],[161,12,137,12,"history"],[161,19,137,19],[161,23,137,19,"_state$history$filter"],[161,44,137,19],[161,48,137,19,"_state$history"],[161,62,137,19],[161,65,137,22,"state"],[161,70,137,27],[161,71,137,28,"history"],[161,78,137,35],[161,99,137,22,"_state$history"],[161,113,137,22],[161,114,137,37,"filter"],[161,120,137,43],[161,121,137,44],[161,131,137,44,"it"],[161,133,137,46],[162,10,137,46],[162,17,137,50,"routeKeys"],[162,26,137,59],[162,27,137,60,"includes"],[162,35,137,68],[162,36,137,69,"it"],[162,38,137,71],[162,39,137,72,"key"],[162,42,137,75],[162,43,137,76],[163,8,137,76],[163,10,137,77],[163,22,137,77,"_state$history$filter"],[163,43,137,77],[163,46,137,81],[163,48,137,83],[164,8,138,6],[164,15,138,13,"changeIndex"],[164,26,138,24],[164,27,138,25],[165,10,139,8,"stale"],[165,15,139,13],[165,17,139,15],[165,22,139,20],[166,10,140,8,"type"],[166,14,140,12],[166,16,140,14],[166,21,140,19],[167,10,141,8,"key"],[167,13,141,11],[167,15,141,13],[167,22,141,20],[167,26,141,20,"nanoid"],[167,42,141,26],[167,43,141,26,"nanoid"],[167,49,141,26],[167,51,141,27],[167,52,141,28],[167,54,141,30],[168,10,142,8,"index"],[168,15,142,13],[168,17,142,8,"index"],[168,22,142,13],[169,10,143,8,"routeNames"],[169,20,143,18],[169,22,143,8,"routeNames"],[169,32,143,18],[170,10,144,8,"history"],[170,17,144,15],[170,19,144,8,"history"],[170,26,144,15],[171,10,145,8,"routes"],[171,16,145,14],[171,18,145,8,"routes"],[171,24,145,14],[172,10,146,8,"preloadedRouteKeys"],[172,28,146,26],[172,31,146,26,"_state$preloadedRoute"],[172,52,146,26],[172,56,146,26,"_state$preloadedRoute2"],[172,78,146,26],[172,81,146,28,"state"],[172,86,146,33],[172,87,146,34,"preloadedRouteKeys"],[172,105,146,52],[172,126,146,28,"_state$preloadedRoute2"],[172,148,146,28],[172,149,146,54,"filter"],[172,155,146,60],[172,156,146,61],[172,166,146,61,"key"],[172,169,146,64],[173,12,146,64],[173,19,146,68,"routeKeys"],[173,28,146,77],[173,29,146,78,"includes"],[173,37,146,86],[173,38,146,87,"key"],[173,41,146,90],[173,42,146,91],[174,10,146,91],[174,12,146,92],[174,24,146,92,"_state$preloadedRoute"],[174,45,146,92],[174,48,146,96],[175,8,147,6],[175,9,147,7],[175,11,147,9,"index"],[175,16,147,14],[175,18,147,16,"backBehavior"],[175,30,147,28],[175,32,147,30,"initialRouteName"],[175,48,147,46],[175,49,147,47],[176,6,148,4],[176,7,148,5],[177,6,149,4,"getStateForRouteNamesChange"],[177,33,149,31],[177,44,149,4,"getStateForRouteNamesChange"],[177,71,149,31,"getStateForRouteNamesChange"],[177,72,149,32,"state"],[177,77,149,37],[177,79,149,37,"_ref4"],[177,84,149,37],[177,86,153,7],[178,8,153,7],[178,12,150,6,"routeNames"],[178,22,150,16],[178,25,150,16,"_ref4"],[178,30,150,16],[178,31,150,6,"routeNames"],[178,41,150,16],[179,10,151,6,"routeParamList"],[179,24,151,20],[179,27,151,20,"_ref4"],[179,32,151,20],[179,33,151,6,"routeParamList"],[179,47,151,20],[180,10,152,6,"routeKeyChanges"],[180,25,152,21],[180,28,152,21,"_ref4"],[180,33,152,21],[180,34,152,6,"routeKeyChanges"],[180,49,152,21],[181,8,154,6],[181,12,154,12,"routes"],[181,18,154,18],[181,21,154,21,"routeNames"],[181,31,154,31],[181,32,154,32,"map"],[181,35,154,35],[181,36,154,36],[181,46,154,36,"name"],[181,50,154,40],[182,10,154,40],[182,17,154,44,"state"],[182,22,154,49],[182,23,154,50,"routes"],[182,29,154,56],[182,30,154,57,"find"],[182,34,154,61],[182,35,154,62],[182,45,154,62,"r"],[182,46,154,63],[183,12,154,63],[183,19,154,67,"r"],[183,20,154,68],[183,21,154,69,"name"],[183,25,154,73],[183,30,154,78,"name"],[183,34,154,82],[183,38,154,86],[183,39,154,87,"routeKeyChanges"],[183,54,154,102],[183,55,154,103,"includes"],[183,63,154,111],[183,64,154,112,"r"],[183,65,154,113],[183,66,154,114,"name"],[183,70,154,118],[183,71,154,119],[184,10,154,119],[184,12,154,120],[184,16,154,124],[185,12,155,8,"name"],[185,16,155,12],[185,18,155,8,"name"],[185,22,155,12],[186,12,156,8,"key"],[186,15,156,11],[186,17,156,13],[186,20,156,16,"name"],[186,24,156,20],[186,28,156,24],[186,32,156,24,"nanoid"],[186,48,156,30],[186,49,156,30,"nanoid"],[186,55,156,30],[186,57,156,31],[186,58,156,32],[186,60,156,34],[187,12,157,8,"params"],[187,18,157,14],[187,20,157,16,"routeParamList"],[187,34,157,30],[187,35,157,31,"name"],[187,39,157,35],[188,10,158,6],[188,11,158,7],[189,8,158,7],[189,10,158,8],[190,8,159,6],[190,12,159,12,"index"],[190,17,159,17],[190,20,159,20,"Math"],[190,24,159,24],[190,25,159,25,"max"],[190,28,159,28],[190,29,159,29],[190,30,159,30],[190,32,159,32,"routeNames"],[190,42,159,42],[190,43,159,43,"indexOf"],[190,50,159,50],[190,51,159,51,"state"],[190,56,159,56],[190,57,159,57,"routes"],[190,63,159,63],[190,64,159,64,"state"],[190,69,159,69],[190,70,159,70,"index"],[190,75,159,75],[190,76,159,76],[190,77,159,77,"name"],[190,81,159,81],[190,82,159,82],[190,83,159,83],[191,8,160,6],[191,12,160,10,"history"],[191,19,160,17],[191,22,160,20,"state"],[191,27,160,25],[191,28,160,26,"history"],[191,35,160,33],[191,36,160,34,"filter"],[191,42,160,40],[192,8,161,6],[193,8,162,6],[193,18,162,6,"it"],[193,20,162,8],[194,10,162,8],[194,17,162,12,"it"],[194,19,162,14],[194,20,162,15,"type"],[194,24,162,19],[194,29,162,24],[194,36,162,31],[194,40,162,35,"routes"],[194,46,162,41],[194,47,162,42,"find"],[194,51,162,46],[194,52,162,47],[194,62,162,47,"r"],[194,63,162,48],[195,12,162,48],[195,19,162,52,"r"],[195,20,162,53],[195,21,162,54,"key"],[195,24,162,57],[195,29,162,62,"it"],[195,31,162,64],[195,32,162,65,"key"],[195,35,162,68],[196,10,162,68],[196,12,162,69],[197,8,162,69],[197,10,162,70],[198,8,163,6],[198,12,163,10],[198,13,163,11,"history"],[198,20,163,18],[198,21,163,19,"length"],[198,27,163,25],[198,29,163,27],[199,10,164,8,"history"],[199,17,164,15],[199,20,164,18,"getRouteHistory"],[199,35,164,33],[199,36,164,34,"routes"],[199,42,164,40],[199,44,164,42,"index"],[199,49,164,47],[199,51,164,49,"backBehavior"],[199,63,164,61],[199,65,164,63,"initialRouteName"],[199,81,164,79],[199,82,164,80],[200,8,165,6],[201,8,166,6],[201,15,166,6,"Object"],[201,21,166,6],[201,22,166,6,"assign"],[201,28,166,6],[201,33,167,11,"state"],[201,38,167,16],[202,10,168,8,"history"],[202,17,168,15],[202,19,168,8,"history"],[202,26,168,15],[203,10,169,8,"routeNames"],[203,20,169,18],[203,22,169,8,"routeNames"],[203,32,169,18],[204,10,170,8,"routes"],[204,16,170,14],[204,18,170,8,"routes"],[204,24,170,14],[205,10,171,8,"index"],[205,15,171,13],[205,17,171,8,"index"],[206,8,171,13],[207,6,173,4],[207,7,173,5],[208,6,174,4,"getStateForRouteFocus"],[208,27,174,25],[208,38,174,4,"getStateForRouteFocus"],[208,59,174,25,"getStateForRouteFocus"],[208,60,174,26,"state"],[208,65,174,31],[208,67,174,33,"key"],[208,70,174,36],[208,72,174,38],[209,8,175,6],[209,12,175,12,"index"],[209,17,175,17],[209,20,175,20,"state"],[209,25,175,25],[209,26,175,26,"routes"],[209,32,175,32],[209,33,175,33,"findIndex"],[209,42,175,42],[209,43,175,43],[209,53,175,43,"r"],[209,54,175,44],[210,10,175,44],[210,17,175,48,"r"],[210,18,175,49],[210,19,175,50,"key"],[210,22,175,53],[210,27,175,58,"key"],[210,30,175,61],[211,8,175,61],[211,10,175,62],[212,8,176,6],[212,12,176,10,"index"],[212,17,176,15],[212,22,176,20],[212,23,176,21],[212,24,176,22],[212,28,176,26,"index"],[212,33,176,31],[212,38,176,36,"state"],[212,43,176,41],[212,44,176,42,"index"],[212,49,176,47],[212,51,176,49],[213,10,177,8],[213,17,177,15,"state"],[213,22,177,20],[214,8,178,6],[215,8,179,6],[215,15,179,13,"changeIndex"],[215,26,179,24],[215,27,179,25,"state"],[215,32,179,30],[215,34,179,32,"index"],[215,39,179,37],[215,41,179,39,"backBehavior"],[215,53,179,51],[215,55,179,53,"initialRouteName"],[215,71,179,69],[215,72,179,70],[216,6,180,4],[216,7,180,5],[217,6,181,4,"getStateForAction"],[217,23,181,21],[217,34,181,4,"getStateForAction"],[217,51,181,21,"getStateForAction"],[217,52,181,22,"state"],[217,57,181,27],[217,59,181,29,"action"],[217,65,181,35],[217,67,181,35,"_ref5"],[217,72,181,35],[217,74,184,7],[218,8,184,7],[218,12,182,6,"routeParamList"],[218,26,182,20],[218,29,182,20,"_ref5"],[218,34,182,20],[218,35,182,6,"routeParamList"],[218,49,182,20],[219,10,183,6,"routeGetIdList"],[219,24,183,20],[219,27,183,20,"_ref5"],[219,32,183,20],[219,33,183,6,"routeGetIdList"],[219,47,183,20],[220,8,185,6],[220,16,185,14,"action"],[220,22,185,20],[220,23,185,21,"type"],[220,27,185,25],[221,10,186,8],[221,15,186,13],[221,24,186,22],[222,10,187,8],[222,15,187,13],[222,25,187,23],[223,10,188,8],[223,15,188,13],[223,36,188,34],[224,12,189,10],[225,14,190,12],[225,18,190,18,"index"],[225,23,190,23],[225,26,190,26,"state"],[225,31,190,31],[225,32,190,32,"routes"],[225,38,190,38],[225,39,190,39,"findIndex"],[225,48,190,48],[225,49,190,49],[225,59,190,49,"route"],[225,64,190,54],[226,16,190,54],[226,23,190,58,"route"],[226,28,190,63],[226,29,190,64,"name"],[226,33,190,68],[226,38,190,73,"action"],[226,44,190,79],[226,45,190,80,"payload"],[226,52,190,87],[226,53,190,88,"name"],[226,57,190,92],[227,14,190,92],[227,16,190,93],[228,14,191,12],[228,18,191,16,"index"],[228,23,191,21],[228,28,191,26],[228,29,191,27],[228,30,191,28],[228,32,191,30],[229,16,192,14],[229,23,192,21],[229,27,192,25],[230,14,193,12],[231,14,194,12],[231,18,194,18,"updatedState"],[231,30,194,30],[231,33,194,33,"changeIndex"],[231,44,194,44],[231,45,194,44,"Object"],[231,51,194,44],[231,52,194,44,"assign"],[231,58,194,44],[231,63,195,17,"state"],[231,68,195,22],[232,16,196,14,"routes"],[232,22,196,20],[232,24,196,22,"state"],[232,29,196,27],[232,30,196,28,"routes"],[232,36,196,34],[232,37,196,35,"map"],[232,40,196,38],[232,41,196,39],[232,51,196,39,"route"],[232,56,196,44],[232,58,196,48],[233,18,197,16],[233,22,197,20,"route"],[233,27,197,25],[233,28,197,26,"name"],[233,32,197,30],[233,37,197,35,"action"],[233,43,197,41],[233,44,197,42,"payload"],[233,51,197,49],[233,52,197,50,"name"],[233,56,197,54],[233,58,197,56],[234,20,198,18],[234,27,198,25,"route"],[234,32,198,30],[235,18,199,16],[236,18,200,16],[236,22,200,22,"getId"],[236,27,200,27],[236,30,200,30,"routeGetIdList"],[236,44,200,44],[236,45,200,45,"route"],[236,50,200,50],[236,51,200,51,"name"],[236,55,200,55],[236,56,200,56],[237,18,201,16],[237,22,201,22,"currentId"],[237,31,201,31],[237,34,201,34,"getId"],[237,39,201,39],[237,59,201,34,"getId"],[237,64,201,39],[237,65,201,42],[238,20,202,18,"params"],[238,26,202,24],[238,28,202,26,"route"],[238,33,202,31],[238,34,202,32,"params"],[239,18,203,16],[239,19,203,17],[239,20,203,18],[240,18,204,16],[240,22,204,22,"nextId"],[240,28,204,28],[240,31,204,31,"getId"],[240,36,204,36],[240,56,204,31,"getId"],[240,61,204,36],[240,62,204,39],[241,20,205,18,"params"],[241,26,205,24],[241,28,205,26,"action"],[241,34,205,32],[241,35,205,33,"payload"],[241,42,205,40],[241,43,205,41,"params"],[242,18,206,16],[242,19,206,17],[242,20,206,18],[243,18,207,16],[243,22,207,22,"key"],[243,25,207,25],[243,28,207,28,"currentId"],[243,37,207,37],[243,42,207,42,"nextId"],[243,48,207,48],[243,51,207,51,"route"],[243,56,207,56],[243,57,207,57,"key"],[243,60,207,60],[243,63,207,63],[243,66,207,66,"route"],[243,71,207,71],[243,72,207,72,"name"],[243,76,207,76],[243,80,207,80],[243,84,207,80,"nanoid"],[243,100,207,86],[243,101,207,86,"nanoid"],[243,107,207,86],[243,109,207,87],[243,110,207,88],[243,112,207,90],[244,18,208,16],[244,22,208,20,"params"],[244,28,208,26],[245,18,209,16],[245,22,209,20],[245,23,209,21,"action"],[245,29,209,27],[245,30,209,28,"type"],[245,34,209,32],[245,39,209,37],[245,49,209,47],[245,53,209,51,"action"],[245,59,209,57],[245,60,209,58,"type"],[245,64,209,62],[245,69,209,67],[245,90,209,88],[245,95,209,93,"action"],[245,101,209,99],[245,102,209,100,"payload"],[245,109,209,107],[245,110,209,108,"merge"],[245,115,209,113],[245,119,209,117,"currentId"],[245,128,209,126],[245,133,209,131,"nextId"],[245,139,209,137],[245,141,209,139],[246,20,210,18,"params"],[246,26,210,24],[246,29,210,27,"action"],[246,35,210,33],[246,36,210,34,"payload"],[246,43,210,41],[246,44,210,42,"params"],[246,50,210,48],[246,55,210,53,"undefined"],[246,64,210,62],[246,68,210,66,"routeParamList"],[246,82,210,80],[246,83,210,81,"route"],[246,88,210,86],[246,89,210,87,"name"],[246,93,210,91],[246,94,210,92],[246,99,210,97,"undefined"],[246,108,210,106],[246,111,210,106,"Object"],[246,117,210,106],[246,118,210,106,"assign"],[246,124,210,106],[246,129,211,23,"routeParamList"],[246,143,211,37],[246,144,211,38,"route"],[246,149,211,43],[246,150,211,44,"name"],[246,154,211,48],[246,155,211,49],[246,157,212,23,"route"],[246,162,212,28],[246,163,212,29,"params"],[246,169,212,35],[246,171,213,23,"action"],[246,177,213,29],[246,178,213,30,"payload"],[246,185,213,37],[246,186,213,38,"params"],[246,192,213,44],[246,196,214,22,"route"],[246,201,214,27],[246,202,214,28,"params"],[246,208,214,34],[247,18,215,16],[247,19,215,17],[247,25,215,23],[248,20,216,18,"params"],[248,26,216,24],[248,29,216,27,"routeParamList"],[248,43,216,41],[248,44,216,42,"route"],[248,49,216,47],[248,50,216,48,"name"],[248,54,216,52],[248,55,216,53],[248,60,216,58,"undefined"],[248,69,216,67],[248,72,216,67,"Object"],[248,78,216,67],[248,79,216,67,"assign"],[248,85,216,67],[248,90,217,23,"routeParamList"],[248,104,217,37],[248,105,217,38,"route"],[248,110,217,43],[248,111,217,44,"name"],[248,115,217,48],[248,116,217,49],[248,118,218,23,"action"],[248,124,218,29],[248,125,218,30,"payload"],[248,132,218,37],[248,133,218,38,"params"],[248,139,218,44],[248,143,219,22,"action"],[248,149,219,28],[248,150,219,29,"payload"],[248,157,219,36],[248,158,219,37,"params"],[248,164,219,43],[249,18,220,16],[250,18,221,16],[250,22,221,22,"path"],[250,26,221,26],[250,29,221,29,"action"],[250,35,221,35],[250,36,221,36,"type"],[250,40,221,40],[250,45,221,45],[250,55,221,55],[250,59,221,59,"action"],[250,65,221,65],[250,66,221,66,"payload"],[250,73,221,73],[250,74,221,74,"path"],[250,78,221,78],[250,82,221,82],[250,86,221,86],[250,89,221,89,"action"],[250,95,221,95],[250,96,221,96,"payload"],[250,103,221,103],[250,104,221,104,"path"],[250,108,221,108],[250,111,221,111,"route"],[250,116,221,116],[250,117,221,117,"path"],[250,121,221,121],[251,18,222,16],[251,25,222,23,"params"],[251,31,222,29],[251,36,222,34,"route"],[251,41,222,39],[251,42,222,40,"params"],[251,48,222,46],[251,52,222,50,"path"],[251,56,222,54],[251,61,222,59,"route"],[251,66,222,64],[251,67,222,65,"path"],[251,71,222,69],[251,74,222,69,"Object"],[251,80,222,69],[251,81,222,69,"assign"],[251,87,222,69],[251,92,223,21,"route"],[251,97,223,26],[252,20,224,18,"key"],[252,23,224,21],[252,25,224,18,"key"],[252,28,224,21],[253,20,225,18,"path"],[253,24,225,22],[253,26,225,18,"path"],[253,30,225,22],[254,20,226,18,"params"],[254,26,226,24],[254,28,226,18,"params"],[255,18,226,24],[255,23,227,20,"route"],[255,28,227,25],[256,16,228,14],[256,17,228,15],[257,14,228,16],[257,18,229,15,"index"],[257,23,229,20],[257,25,229,22,"backBehavior"],[257,37,229,34],[257,39,229,36,"initialRouteName"],[257,55,229,52],[257,56,229,53],[258,14,230,12],[258,21,230,12,"Object"],[258,27,230,12],[258,28,230,12,"assign"],[258,34,230,12],[258,39,231,17,"updatedState"],[258,51,231,29],[259,16,232,14,"preloadedRouteKeys"],[259,34,232,32],[259,36,232,34,"updatedState"],[259,48,232,46],[259,49,232,47,"preloadedRouteKeys"],[259,67,232,65],[259,68,232,66,"filter"],[259,74,232,72],[259,75,232,73],[259,85,232,73,"key"],[259,88,232,76],[260,18,232,76],[260,25,232,80,"key"],[260,28,232,83],[260,33,232,88,"state"],[260,38,232,93],[260,39,232,94,"routes"],[260,45,232,100],[260,46,232,101,"updatedState"],[260,58,232,113],[260,59,232,114,"index"],[260,64,232,119],[260,65,232,120],[260,66,232,121,"key"],[260,69,232,124],[261,16,232,124],[262,14,232,125],[263,12,234,10],[264,10,235,8],[264,15,235,13],[264,24,235,22],[265,12,236,10],[266,14,236,10],[266,18,236,10,"_state$history2"],[266,33,236,10],[267,14,237,12],[267,18,237,16,"state"],[267,23,237,21],[267,24,237,22,"history"],[267,31,237,29],[267,32,237,30,"length"],[267,38,237,36],[267,43,237,41],[267,44,237,42],[267,46,237,44],[268,16,238,14],[268,23,238,21],[268,27,238,25],[269,14,239,12],[270,14,240,12],[270,18,240,18,"previousKey"],[270,29,240,29],[270,33,240,29,"_state$history2"],[270,48,240,29],[270,51,240,32,"state"],[270,56,240,37],[270,57,240,38,"history"],[270,64,240,45],[270,65,240,46,"state"],[270,70,240,51],[270,71,240,52,"history"],[270,78,240,59],[270,79,240,60,"length"],[270,85,240,66],[270,88,240,69],[270,89,240,70],[270,90,240,71],[270,111,240,32,"_state$history2"],[270,126,240,32],[270,127,240,73,"key"],[270,130,240,76],[271,14,241,12],[271,18,241,18,"index"],[271,24,241,23],[271,27,241,26,"state"],[271,32,241,31],[271,33,241,32,"routes"],[271,39,241,38],[271,40,241,39,"findLastIndex"],[271,53,241,52],[271,54,241,53],[271,64,241,53,"route"],[271,69,241,58],[272,16,241,58],[272,23,241,62,"route"],[272,28,241,67],[272,29,241,68,"key"],[272,32,241,71],[272,37,241,76,"previousKey"],[272,48,241,87],[273,14,241,87],[273,16,241,88],[274,14,242,12],[274,18,242,16,"index"],[274,24,242,21],[274,29,242,26],[274,30,242,27],[274,31,242,28],[274,33,242,30],[275,16,243,14],[275,23,243,21],[275,27,243,25],[276,14,244,12],[277,14,245,12],[277,21,245,12,"Object"],[277,27,245,12],[277,28,245,12,"assign"],[277,34,245,12],[277,39,246,17,"state"],[277,44,246,22],[278,16,247,14,"preloadedRouteKeys"],[278,34,247,32],[278,36,247,34,"state"],[278,41,247,39],[278,42,247,40,"preloadedRouteKeys"],[278,60,247,58],[278,61,247,59,"filter"],[278,67,247,65],[278,68,247,66],[278,78,247,66,"key"],[278,81,247,69],[279,18,247,69],[279,25,247,73,"key"],[279,28,247,76],[279,33,247,81,"state"],[279,38,247,86],[279,39,247,87,"routes"],[279,45,247,93],[279,46,247,94,"index"],[279,52,247,99],[279,53,247,100],[279,54,247,101,"key"],[279,57,247,104],[280,16,247,104],[280,18,247,105],[281,16,248,14,"history"],[281,23,248,21],[281,25,248,23,"state"],[281,30,248,28],[281,31,248,29,"history"],[281,38,248,36],[281,39,248,37,"slice"],[281,44,248,42],[281,45,248,43],[281,46,248,44],[281,48,248,46],[281,49,248,47],[281,50,248,48],[281,51,248,49],[282,16,249,14,"index"],[282,21,249,19],[282,23,249,14,"index"],[283,14,249,19],[284,12,251,10],[285,10,252,8],[285,15,252,13],[285,24,252,22],[286,12,253,10],[287,14,254,12],[287,18,254,18,"routeIndex"],[287,28,254,28],[287,31,254,31,"state"],[287,36,254,36],[287,37,254,37,"routes"],[287,43,254,43],[287,44,254,44,"findIndex"],[287,53,254,53],[287,54,254,54],[287,64,254,54,"route"],[287,69,254,59],[288,16,254,59],[288,23,254,63,"route"],[288,28,254,68],[288,29,254,69,"name"],[288,33,254,73],[288,38,254,78,"action"],[288,44,254,84],[288,45,254,85,"payload"],[288,52,254,92],[288,53,254,93,"name"],[288,57,254,97],[289,14,254,97],[289,16,254,98],[290,14,255,12],[290,18,255,16,"routeIndex"],[290,28,255,26],[290,33,255,31],[290,34,255,32],[290,35,255,33],[290,37,255,35],[291,16,256,14],[291,23,256,21],[291,27,256,25],[292,14,257,12],[293,14,258,12],[293,18,258,18,"route"],[293,23,258,23],[293,26,258,26,"state"],[293,31,258,31],[293,32,258,32,"routes"],[293,38,258,38],[293,39,258,39,"routeIndex"],[293,49,258,49],[293,50,258,50],[294,14,259,12],[294,18,259,18,"getId"],[294,23,259,23],[294,26,259,26,"routeGetIdList"],[294,40,259,40],[294,41,259,41,"route"],[294,46,259,46],[294,47,259,47,"name"],[294,51,259,51],[294,52,259,52],[295,14,260,12],[295,18,260,18,"currentId"],[295,27,260,27],[295,30,260,30,"getId"],[295,35,260,35],[295,55,260,30,"getId"],[295,60,260,35],[295,61,260,38],[296,16,261,14,"params"],[296,22,261,20],[296,24,261,22,"route"],[296,29,261,27],[296,30,261,28,"params"],[297,14,262,12],[297,15,262,13],[297,16,262,14],[298,14,263,12],[298,18,263,18,"nextId"],[298,24,263,24],[298,27,263,27,"getId"],[298,32,263,32],[298,52,263,27,"getId"],[298,57,263,32],[298,58,263,35],[299,16,264,14,"params"],[299,22,264,20],[299,24,264,22,"action"],[299,30,264,28],[299,31,264,29,"payload"],[299,38,264,36],[299,39,264,37,"params"],[300,14,265,12],[300,15,265,13],[300,16,265,14],[301,14,266,12],[301,18,266,18,"key"],[301,21,266,21],[301,24,266,24,"currentId"],[301,33,266,33],[301,38,266,38,"nextId"],[301,44,266,44],[301,47,266,47,"route"],[301,52,266,52],[301,53,266,53,"key"],[301,56,266,56],[301,59,266,59],[301,62,266,62,"route"],[301,67,266,67],[301,68,266,68,"name"],[301,72,266,72],[301,76,266,76],[301,80,266,76,"nanoid"],[301,96,266,82],[301,97,266,82,"nanoid"],[301,103,266,82],[301,105,266,83],[301,106,266,84],[301,108,266,86],[302,14,267,12],[302,18,267,18,"params"],[302,24,267,24],[302,27,267,27,"action"],[302,33,267,33],[302,34,267,34,"payload"],[302,41,267,41],[302,42,267,42,"params"],[302,48,267,48],[302,53,267,53,"undefined"],[302,62,267,62],[302,66,267,66,"routeParamList"],[302,80,267,80],[302,81,267,81,"route"],[302,86,267,86],[302,87,267,87,"name"],[302,91,267,91],[302,92,267,92],[302,97,267,97,"undefined"],[302,106,267,106],[302,109,267,106,"Object"],[302,115,267,106],[302,116,267,106,"assign"],[302,122,267,106],[302,127,268,17,"routeParamList"],[302,141,268,31],[302,142,268,32,"route"],[302,147,268,37],[302,148,268,38,"name"],[302,152,268,42],[302,153,268,43],[302,155,269,17,"action"],[302,161,269,23],[302,162,269,24,"payload"],[302,169,269,31],[302,170,269,32,"params"],[302,176,269,38],[302,180,270,16,"undefined"],[302,189,270,25],[303,14,271,12],[303,18,271,18,"newRoute"],[303,26,271,26],[303,29,271,29,"params"],[303,35,271,35],[303,40,271,40,"route"],[303,45,271,45],[303,46,271,46,"params"],[303,52,271,52],[303,55,271,52,"Object"],[303,61,271,52],[303,62,271,52,"assign"],[303,68,271,52],[303,73,272,17,"route"],[303,78,272,22],[304,16,273,14,"key"],[304,19,273,17],[304,21,273,14,"key"],[304,24,273,17],[305,16,274,14,"params"],[305,22,274,20],[305,24,274,14,"params"],[306,14,274,20],[306,19,275,16,"route"],[306,24,275,21],[307,14,276,12],[307,21,276,12,"Object"],[307,27,276,12],[307,28,276,12,"assign"],[307,34,276,12],[307,39,277,17,"state"],[307,44,277,22],[308,16,278,14,"preloadedRouteKeys"],[308,34,278,32],[308,36,278,34,"state"],[308,41,278,39],[308,42,278,40,"preloadedRouteKeys"],[308,60,278,58],[308,61,278,59,"filter"],[308,67,278,65],[308,68,278,66],[308,78,278,66,"key"],[308,81,278,69],[309,18,278,69],[309,25,278,73,"key"],[309,28,278,76],[309,33,278,81,"route"],[309,38,278,86],[309,39,278,87,"key"],[309,42,278,90],[310,16,278,90],[310,18,278,91],[310,19,278,92,"concat"],[310,25,278,98],[310,26,278,99,"newRoute"],[310,34,278,107],[310,35,278,108,"key"],[310,38,278,111],[310,39,278,112],[311,16,279,14,"routes"],[311,22,279,20],[311,24,279,22,"state"],[311,29,279,27],[311,30,279,28,"routes"],[311,36,279,34],[311,37,279,35,"map"],[311,40,279,38],[311,41,279,39],[311,51,279,40,"route"],[311,56,279,45],[311,58,279,47,"index"],[311,63,279,52],[312,18,279,52],[312,25,279,57,"index"],[312,30,279,62],[312,35,279,67,"routeIndex"],[312,45,279,77],[312,48,279,80,"newRoute"],[312,56,279,88],[312,59,279,91,"route"],[312,64,279,96],[313,16,279,96],[313,18,279,97],[314,16,280,14,"history"],[314,23,280,21],[314,25,280,23,"key"],[314,28,280,26],[314,33,280,31,"route"],[314,38,280,36],[314,39,280,37,"key"],[314,42,280,40],[314,45,280,43,"state"],[314,50,280,48],[314,51,280,49,"history"],[314,58,280,56],[314,61,280,59,"state"],[314,66,280,64],[314,67,280,65,"history"],[314,74,280,72],[314,75,280,73,"filter"],[314,81,280,79],[314,82,280,80],[314,92,280,80,"record"],[314,98,280,86],[315,18,280,86],[315,25,280,90,"record"],[315,31,280,96],[315,32,280,97,"key"],[315,35,280,100],[315,40,280,105,"route"],[315,45,280,110],[315,46,280,111,"key"],[315,49,280,114],[316,16,280,114],[317,14,280,115],[318,12,282,10],[319,10,283,8],[320,12,284,10],[320,19,284,17,"BaseRouter"],[320,32,284,27],[320,33,284,27,"BaseRouter"],[320,43,284,27],[320,44,284,28,"getStateForAction"],[320,61,284,45],[320,62,284,46,"state"],[320,67,284,51],[320,69,284,53,"action"],[320,75,284,59],[320,76,284,60],[321,8,285,6],[322,6,286,4],[322,7,286,5],[323,6,287,4,"actionCreators"],[323,20,287,18],[323,22,287,20,"TabActions"],[324,4,287,30],[324,6,288,3],[325,4,289,2],[325,11,289,9,"router"],[325,17,289,15],[326,2,290,0],[327,0,290,1],[327,3]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","history.filter$argument_0","history.findLastIndex$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","state.routes.find$argument_0","routes.map$argument_0","state.history.filter$argument_0","state.preloadedRouteKeys.filter$argument_0","router.getStateForRouteNamesChange","routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","updatedState.preloadedRouteKeys.filter$argument_0","state.routes.findLastIndex$argument_0"],"mappings":"AAA;ECM;GDQ;wBEE;2CCwB,wCD;CFe;oBIC;+BCM,8DD;8DEE,6BF;CJoB;OOC;ICO;oCCK;QDI;KDY;IGC;oCDQ;wCEC,oBF;OCU;mCEE,kBF;4CGC,gCH;6DIS,8BJ;KHE;IQC;oCNK,0BE,yDF;OMI;MFI,yCG,qBH,CE;KRW;IUC;2CCC,kBD;KVK;IYC;iDDS,2CC;uCCM;eDgC;yEEI,mDF;qDGS,kCH;kELM,sCK;sDDO,2CC;kELwB,wBK;uCCC,yDD;gFNC,kCM;KZM;CPI"},"hasCjsExports":false},"type":"js/module"}]}