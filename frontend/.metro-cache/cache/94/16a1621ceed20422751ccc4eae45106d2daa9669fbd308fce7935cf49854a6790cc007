{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.matchDynamicName = matchDynamicName;\n  exports.testNotFound = testNotFound;\n  exports.matchGroupName = matchGroupName;\n  exports.matchLastGroupName = matchLastGroupName;\n  exports.matchArrayGroupName = matchArrayGroupName;\n  exports.getNameFromFilePath = getNameFromFilePath;\n  exports.getContextKey = getContextKey;\n  exports.removeSupportedExtensions = removeSupportedExtensions;\n  exports.removeFileSystemExtensions = removeFileSystemExtensions;\n  exports.removeFileSystemDots = removeFileSystemDots;\n  exports.stripGroupSegmentsFromPath = stripGroupSegmentsFromPath;\n  exports.stripInvisibleSegmentsFromPath = stripInvisibleSegmentsFromPath;\n  exports.isTypedRoute = isTypedRoute;\n  /** Match `[page]` -> `page` or `[...group]` -> `...group` */\n  var dynamicNameRe = /^\\[([^[\\]]+?)\\]$/;\n  /** Match `[page]` -> `page` */\n  function matchDynamicName(name) {\n    var _name$match;\n    var paramName = (_name$match = name.match(dynamicNameRe)) == null ? void 0 : _name$match[1];\n    if (paramName == null) {\n      return undefined;\n    } else if (paramName.startsWith('...')) {\n      return {\n        name: paramName.slice(3),\n        deep: true\n      };\n    } else {\n      return {\n        name: paramName,\n        deep: false\n      };\n    }\n  }\n  /** Test `/` -> `page` */\n  function testNotFound(name) {\n    return /\\+not-found$/.test(name);\n  }\n  /** Match `(page)` -> `page` */\n  function matchGroupName(name) {\n    var _name$match2;\n    return (_name$match2 = name.match(/^(?:[^\\\\()])*?\\(([^\\\\/]+)\\)/)) == null ? void 0 : _name$match2[1];\n  }\n  /** Match `(app)/(page)` -> `page` */\n  function matchLastGroupName(name) {\n    var _name$match3;\n    return (_name$match3 = name.match(/.*(?:\\/|^)\\(([^\\\\/]+)\\)[^\\s]*$/)) == null ? void 0 : _name$match3[1];\n  }\n  /** Match the first array group name `(a,b,c)/(d,c)` -> `'a,b,c'` */\n  function matchArrayGroupName(name) {\n    var _name$match4;\n    return (_name$match4 = name.match(/(?:[^\\\\()])*?\\(([^\\\\/]+,[^\\\\/]+)\\)/)) == null ? void 0 : _name$match4[1];\n  }\n  function getNameFromFilePath(name) {\n    return removeSupportedExtensions(removeFileSystemDots(name));\n  }\n  function getContextKey(name) {\n    // The root path is `` (empty string) so always prepend `/` to ensure\n    // there is some value.\n    var normal = '/' + getNameFromFilePath(name);\n    if (!normal.endsWith('_layout')) {\n      return normal;\n    }\n    return normal.replace(/\\/?_layout$/, '');\n  }\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx`, and the +api suffix */\n  function removeSupportedExtensions(name) {\n    return name.replace(/(\\+api)?\\.[jt]sx?$/g, '');\n  }\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx` */\n  function removeFileSystemExtensions(name) {\n    return name.replace(/\\.[jt]sx?$/g, '');\n  }\n  // Remove any amount of `./` and `../` from the start of the string\n  function removeFileSystemDots(filePath) {\n    return filePath.replace(/^(?:\\.\\.?\\/)+/g, '');\n  }\n  function stripGroupSegmentsFromPath(path) {\n    return path.split('/').reduce(function (acc, v) {\n      if (matchGroupName(v) == null) {\n        acc.push(v);\n      }\n      return acc;\n    }, []).join('/');\n  }\n  function stripInvisibleSegmentsFromPath(path) {\n    return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, '');\n  }\n  /**\n   * Match:\n   *  - _layout files, +html, +not-found, string+api, etc\n   *  - Routes can still use `+`, but it cannot be in the last segment.\n   */\n  function isTypedRoute(name) {\n    return !name.startsWith('+') && name.match(/(_layout|[^/]*?\\+[^/]*?)\\.[tj]sx?$/) === null;\n  }\n});","lineCount":102,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"matchDynamicName"],[7,26,3,24],[7,29,3,27,"matchDynamicName"],[7,45,3,43],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"testNotFound"],[8,22,4,20],[8,25,4,23,"testNotFound"],[8,37,4,35],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"matchGroupName"],[9,24,5,22],[9,27,5,25,"matchGroupName"],[9,41,5,39],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"matchLastGroupName"],[10,28,6,26],[10,31,6,29,"matchLastGroupName"],[10,49,6,47],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"matchArrayGroupName"],[11,29,7,27],[11,32,7,30,"matchArrayGroupName"],[11,51,7,49],[12,2,8,0,"exports"],[12,9,8,7],[12,10,8,8,"getNameFromFilePath"],[12,29,8,27],[12,32,8,30,"getNameFromFilePath"],[12,51,8,49],[13,2,9,0,"exports"],[13,9,9,7],[13,10,9,8,"getContextKey"],[13,23,9,21],[13,26,9,24,"getContextKey"],[13,39,9,37],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"removeSupportedExtensions"],[14,35,10,33],[14,38,10,36,"removeSupportedExtensions"],[14,63,10,61],[15,2,11,0,"exports"],[15,9,11,7],[15,10,11,8,"removeFileSystemExtensions"],[15,36,11,34],[15,39,11,37,"removeFileSystemExtensions"],[15,65,11,63],[16,2,12,0,"exports"],[16,9,12,7],[16,10,12,8,"removeFileSystemDots"],[16,30,12,28],[16,33,12,31,"removeFileSystemDots"],[16,53,12,51],[17,2,13,0,"exports"],[17,9,13,7],[17,10,13,8,"stripGroupSegmentsFromPath"],[17,36,13,34],[17,39,13,37,"stripGroupSegmentsFromPath"],[17,65,13,63],[18,2,14,0,"exports"],[18,9,14,7],[18,10,14,8,"stripInvisibleSegmentsFromPath"],[18,40,14,38],[18,43,14,41,"stripInvisibleSegmentsFromPath"],[18,73,14,71],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"isTypedRoute"],[19,22,15,20],[19,25,15,23,"isTypedRoute"],[19,37,15,35],[20,2,16,0],[21,2,17,0],[21,6,17,6,"dynamicNameRe"],[21,19,17,19],[21,22,17,22],[21,40,17,40],[22,2,18,0],[23,2,19,0],[23,11,19,9,"matchDynamicName"],[23,27,19,25,"matchDynamicName"],[23,28,19,26,"name"],[23,32,19,30],[23,34,19,32],[24,4,19,32],[24,8,19,32,"_name$match"],[24,19,19,32],[25,4,20,4],[25,8,20,10,"paramName"],[25,17,20,19],[25,21,20,19,"_name$match"],[25,32,20,19],[25,35,20,22,"name"],[25,39,20,26],[25,40,20,27,"match"],[25,45,20,32],[25,46,20,33,"dynamicNameRe"],[25,59,20,46],[25,60,20,47],[25,81,20,22,"_name$match"],[25,92,20,22],[25,93,20,50],[25,94,20,51],[25,95,20,52],[26,4,21,4],[26,8,21,8,"paramName"],[26,17,21,17],[26,21,21,21],[26,25,21,25],[26,27,21,27],[27,6,22,8],[27,13,22,15,"undefined"],[27,22,22,24],[28,4,23,4],[28,5,23,5],[28,11,24,9],[28,15,24,13,"paramName"],[28,24,24,22],[28,25,24,23,"startsWith"],[28,35,24,33],[28,36,24,34],[28,41,24,39],[28,42,24,40],[28,44,24,42],[29,6,25,8],[29,13,25,15],[30,8,25,17,"name"],[30,12,25,21],[30,14,25,23,"paramName"],[30,23,25,32],[30,24,25,33,"slice"],[30,29,25,38],[30,30,25,39],[30,31,25,40],[30,32,25,41],[31,8,25,43,"deep"],[31,12,25,47],[31,14,25,49],[32,6,25,54],[32,7,25,55],[33,4,26,4],[33,5,26,5],[33,11,27,9],[34,6,28,8],[34,13,28,15],[35,8,28,17,"name"],[35,12,28,21],[35,14,28,23,"paramName"],[35,23,28,32],[36,8,28,34,"deep"],[36,12,28,38],[36,14,28,40],[37,6,28,46],[37,7,28,47],[38,4,29,4],[39,2,30,0],[40,2,31,0],[41,2,32,0],[41,11,32,9,"testNotFound"],[41,23,32,21,"testNotFound"],[41,24,32,22,"name"],[41,28,32,26],[41,30,32,28],[42,4,33,4],[42,11,33,11],[42,25,33,25],[42,26,33,26,"test"],[42,30,33,30],[42,31,33,31,"name"],[42,35,33,35],[42,36,33,36],[43,2,34,0],[44,2,35,0],[45,2,36,0],[45,11,36,9,"matchGroupName"],[45,25,36,23,"matchGroupName"],[45,26,36,24,"name"],[45,30,36,28],[45,32,36,30],[46,4,36,30],[46,8,36,30,"_name$match2"],[46,20,36,30],[47,4,37,4],[47,12,37,4,"_name$match2"],[47,24,37,4],[47,27,37,11,"name"],[47,31,37,15],[47,32,37,16,"match"],[47,37,37,21],[47,38,37,22],[47,67,37,51],[47,68,37,52],[47,89,37,11,"_name$match2"],[47,101,37,11],[47,102,37,55],[47,103,37,56],[47,104,37,57],[48,2,38,0],[49,2,39,0],[50,2,40,0],[50,11,40,9,"matchLastGroupName"],[50,29,40,27,"matchLastGroupName"],[50,30,40,28,"name"],[50,34,40,32],[50,36,40,34],[51,4,40,34],[51,8,40,34,"_name$match3"],[51,20,40,34],[52,4,41,4],[52,12,41,4,"_name$match3"],[52,24,41,4],[52,27,41,11,"name"],[52,31,41,15],[52,32,41,16,"match"],[52,37,41,21],[52,38,41,22],[52,70,41,54],[52,71,41,55],[52,92,41,11,"_name$match3"],[52,104,41,11],[52,105,41,58],[52,106,41,59],[52,107,41,60],[53,2,42,0],[54,2,43,0],[55,2,44,0],[55,11,44,9,"matchArrayGroupName"],[55,30,44,28,"matchArrayGroupName"],[55,31,44,29,"name"],[55,35,44,33],[55,37,44,35],[56,4,44,35],[56,8,44,35,"_name$match4"],[56,20,44,35],[57,4,45,4],[57,12,45,4,"_name$match4"],[57,24,45,4],[57,27,45,11,"name"],[57,31,45,15],[57,32,45,16,"match"],[57,37,45,21],[57,38,45,22],[57,74,45,58],[57,75,45,59],[57,96,45,11,"_name$match4"],[57,108,45,11],[57,109,45,62],[57,110,45,63],[57,111,45,64],[58,2,46,0],[59,2,47,0],[59,11,47,9,"getNameFromFilePath"],[59,30,47,28,"getNameFromFilePath"],[59,31,47,29,"name"],[59,35,47,33],[59,37,47,35],[60,4,48,4],[60,11,48,11,"removeSupportedExtensions"],[60,36,48,36],[60,37,48,37,"removeFileSystemDots"],[60,57,48,57],[60,58,48,58,"name"],[60,62,48,62],[60,63,48,63],[60,64,48,64],[61,2,49,0],[62,2,50,0],[62,11,50,9,"getContextKey"],[62,24,50,22,"getContextKey"],[62,25,50,23,"name"],[62,29,50,27],[62,31,50,29],[63,4,51,4],[64,4,52,4],[65,4,53,4],[65,8,53,10,"normal"],[65,14,53,16],[65,17,53,19],[65,20,53,22],[65,23,53,25,"getNameFromFilePath"],[65,42,53,44],[65,43,53,45,"name"],[65,47,53,49],[65,48,53,50],[66,4,54,4],[66,8,54,8],[66,9,54,9,"normal"],[66,15,54,15],[66,16,54,16,"endsWith"],[66,24,54,24],[66,25,54,25],[66,34,54,34],[66,35,54,35],[66,37,54,37],[67,6,55,8],[67,13,55,15,"normal"],[67,19,55,21],[68,4,56,4],[69,4,57,4],[69,11,57,11,"normal"],[69,17,57,17],[69,18,57,18,"replace"],[69,25,57,25],[69,26,57,26],[69,39,57,39],[69,41,57,41],[69,43,57,43],[69,44,57,44],[70,2,58,0],[71,2,59,0],[72,2,60,0],[72,11,60,9,"removeSupportedExtensions"],[72,36,60,34,"removeSupportedExtensions"],[72,37,60,35,"name"],[72,41,60,39],[72,43,60,41],[73,4,61,4],[73,11,61,11,"name"],[73,15,61,15],[73,16,61,16,"replace"],[73,23,61,23],[73,24,61,24],[73,45,61,45],[73,47,61,47],[73,49,61,49],[73,50,61,50],[74,2,62,0],[75,2,63,0],[76,2,64,0],[76,11,64,9,"removeFileSystemExtensions"],[76,37,64,35,"removeFileSystemExtensions"],[76,38,64,36,"name"],[76,42,64,40],[76,44,64,42],[77,4,65,4],[77,11,65,11,"name"],[77,15,65,15],[77,16,65,16,"replace"],[77,23,65,23],[77,24,65,24],[77,37,65,37],[77,39,65,39],[77,41,65,41],[77,42,65,42],[78,2,66,0],[79,2,67,0],[80,2,68,0],[80,11,68,9,"removeFileSystemDots"],[80,31,68,29,"removeFileSystemDots"],[80,32,68,30,"filePath"],[80,40,68,38],[80,42,68,40],[81,4,69,4],[81,11,69,11,"filePath"],[81,19,69,19],[81,20,69,20,"replace"],[81,27,69,27],[81,28,69,28],[81,44,69,44],[81,46,69,46],[81,48,69,48],[81,49,69,49],[82,2,70,0],[83,2,71,0],[83,11,71,9,"stripGroupSegmentsFromPath"],[83,37,71,35,"stripGroupSegmentsFromPath"],[83,38,71,36,"path"],[83,42,71,40],[83,44,71,42],[84,4,72,4],[84,11,72,11,"path"],[84,15,72,15],[84,16,73,9,"split"],[84,21,73,14],[84,22,73,15],[84,25,73,18],[84,26,73,19],[84,27,74,9,"reduce"],[84,33,74,15],[84,34,74,16],[84,44,74,17,"acc"],[84,47,74,20],[84,49,74,22,"v"],[84,50,74,23],[84,52,74,28],[85,6,75,8],[85,10,75,12,"matchGroupName"],[85,24,75,26],[85,25,75,27,"v"],[85,26,75,28],[85,27,75,29],[85,31,75,33],[85,35,75,37],[85,37,75,39],[86,8,76,12,"acc"],[86,11,76,15],[86,12,76,16,"push"],[86,16,76,20],[86,17,76,21,"v"],[86,18,76,22],[86,19,76,23],[87,6,77,8],[88,6,78,8],[88,13,78,15,"acc"],[88,16,78,18],[89,4,79,4],[89,5,79,5],[89,7,79,7],[89,9,79,9],[89,10,79,10],[89,11,80,9,"join"],[89,15,80,13],[89,16,80,14],[89,19,80,17],[89,20,80,18],[90,2,81,0],[91,2,82,0],[91,11,82,9,"stripInvisibleSegmentsFromPath"],[91,41,82,39,"stripInvisibleSegmentsFromPath"],[91,42,82,40,"path"],[91,46,82,44],[91,48,82,46],[92,4,83,4],[92,11,83,11,"stripGroupSegmentsFromPath"],[92,37,83,37],[92,38,83,38,"path"],[92,42,83,42],[92,43,83,43],[92,44,83,44,"replace"],[92,51,83,51],[92,52,83,52],[92,63,83,63],[92,65,83,65],[92,67,83,67],[92,68,83,68],[93,2,84,0],[94,2,85,0],[95,0,86,0],[96,0,87,0],[97,0,88,0],[98,0,89,0],[99,2,90,0],[99,11,90,9,"isTypedRoute"],[99,23,90,21,"isTypedRoute"],[99,24,90,22,"name"],[99,28,90,26],[99,30,90,28],[100,4,91,4],[100,11,91,11],[100,12,91,12,"name"],[100,16,91,16],[100,17,91,17,"startsWith"],[100,27,91,27],[100,28,91,28],[100,31,91,31],[100,32,91,32],[100,36,91,36,"name"],[100,40,91,40],[100,41,91,41,"match"],[100,46,91,46],[100,47,91,47],[100,83,91,83],[100,84,91,84],[100,89,91,89],[100,93,91,93],[101,2,92,0],[102,0,92,1],[102,3]],"functionMap":{"names":["<global>","matchDynamicName","testNotFound","matchGroupName","matchLastGroupName","matchArrayGroupName","getNameFromFilePath","getContextKey","removeSupportedExtensions","removeFileSystemExtensions","removeFileSystemDots","stripGroupSegmentsFromPath","path.split.reduce$argument_0","stripInvisibleSegmentsFromPath","isTypedRoute"],"mappings":"AAA;ACkB;CDW;AEE;CFE;AGE;CHE;AIE;CJE;AKE;CLE;AMC;CNE;AOC;CPQ;AQE;CRE;ASE;CTE;AUE;CVE;AWC;gBCG;KDK;CXE;AaC;CbE;AcM;CdE"},"hasCjsExports":true},"type":"js/module"}]}