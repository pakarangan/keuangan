{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveHref = void 0;\n  exports.resolveHrefStringWithSegments = resolveHrefStringWithSegments;\n  /** Resolve an href object into a fully qualified, relative href. */\n  var resolveHref = function resolveHref(href) {\n    var _href$pathname;\n    if (typeof href === 'string') {\n      return (0, exports.resolveHref)({\n        pathname: href\n      });\n    }\n    var path = (_href$pathname = href.pathname) != null ? _href$pathname : '';\n    if (!(href != null && href.params)) {\n      return path;\n    }\n    var _createQualifiedPathn = createQualifiedPathname(path, Object.assign({}, href.params)),\n      pathname = _createQualifiedPathn.pathname,\n      params = _createQualifiedPathn.params;\n    var paramsString = createQueryParams(params);\n    return pathname + (paramsString ? `?${paramsString}` : '');\n  };\n  exports.resolveHref = resolveHref;\n  function resolveHrefStringWithSegments(href) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === void 0 ? [] : _ref$segments,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params;\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      relativeToDirectory = _ref2.relativeToDirectory;\n    if (href.startsWith('.')) {\n      var _segments$map$filter$;\n      // Resolve base path by merging the current segments with the params\n      var base = (_segments$map$filter$ = segments == null ? void 0 : segments.map(function (segment) {\n        if (!segment.startsWith('[')) return segment;\n        if (segment.startsWith('[...')) {\n          segment = segment.slice(4, -1);\n          var param = params[segment];\n          if (Array.isArray(param)) {\n            return param.join('/');\n          } else {\n            var _param$split$join, _param$split;\n            return (_param$split$join = param == null || (_param$split = param.split(',')) == null ? void 0 : _param$split.join('/')) != null ? _param$split$join : '';\n          }\n        } else {\n          segment = segment.slice(1, -1);\n          return params[segment];\n        }\n      }).filter(Boolean).join('/')) != null ? _segments$map$filter$ : '/';\n      if (relativeToDirectory) {\n        base = `${base}/`;\n      }\n      var url = new URL(href, `http://hostname/${base}`);\n      href = `${url.pathname}${url.search}`;\n    }\n    return href;\n  }\n  function createQualifiedPathname(pathname, params) {\n    for (var _ref3 of Object.entries(params)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var _ref4$ = _ref4[1];\n      var value = _ref4$ === void 0 ? '' : _ref4$;\n      var dynamicKey = `[${key}]`;\n      var deepDynamicKey = `[...${key}]`;\n      if (pathname.includes(dynamicKey)) {\n        pathname = pathname.replace(dynamicKey, encodeParam(value));\n      } else if (pathname.includes(deepDynamicKey)) {\n        pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n      } else {\n        continue;\n      }\n      delete params[key];\n    }\n    return {\n      pathname: pathname,\n      params: params\n    };\n  }\n  function encodeParam(param) {\n    if (Array.isArray(param)) {\n      return param.map(function (p) {\n        return encodeParam(p);\n      }).join('/');\n    }\n    return encodeURIComponent(param.toString());\n  }\n  function createQueryParams(params) {\n    return Object.entries(params)\n    // Allow nullish params\n    .filter(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        value = _ref6[1];\n      return value != null;\n    }).map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n      return `${key}=${encodeURIComponent(value.toString())}`;\n    }).join('&');\n  }\n});","lineCount":108,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"resolveHref"],[8,21,3,19],[8,24,3,22],[8,29,3,27],[8,30,3,28],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"resolveHrefStringWithSegments"],[9,39,4,37],[9,42,4,40,"resolveHrefStringWithSegments"],[9,71,4,69],[10,2,5,0],[11,2,6,0],[11,6,6,6,"resolveHref"],[11,17,6,17],[11,20,6,20],[11,29,6,6,"resolveHref"],[11,40,6,17,"resolveHref"],[11,41,6,21,"href"],[11,45,6,25],[11,47,6,30],[12,4,6,30],[12,8,6,30,"_href$pathname"],[12,22,6,30],[13,4,7,4],[13,8,7,8],[13,15,7,15,"href"],[13,19,7,19],[13,24,7,24],[13,32,7,32],[13,34,7,34],[14,6,8,8],[14,13,8,15],[14,14,8,16],[14,15,8,17],[14,17,8,19,"exports"],[14,24,8,26],[14,25,8,27,"resolveHref"],[14,36,8,38],[14,38,8,40],[15,8,8,42,"pathname"],[15,16,8,50],[15,18,8,52,"href"],[16,6,8,57],[16,7,8,58],[16,8,8,59],[17,4,9,4],[18,4,10,4],[18,8,10,10,"path"],[18,12,10,14],[18,16,10,14,"_href$pathname"],[18,30,10,14],[18,33,10,17,"href"],[18,37,10,21],[18,38,10,22,"pathname"],[18,46,10,30],[18,58,10,30,"_href$pathname"],[18,72,10,30],[18,75,10,34],[18,77,10,36],[19,4,11,4],[19,8,11,8],[19,10,11,9,"href"],[19,14,11,13],[19,26,11,9,"href"],[19,30,11,13],[19,31,11,15,"params"],[19,37,11,21],[19,40,11,23],[20,6,12,8],[20,13,12,15,"path"],[20,17,12,19],[21,4,13,4],[22,4,14,4],[22,8,14,4,"_createQualifiedPathn"],[22,29,14,4],[22,32,14,33,"createQualifiedPathname"],[22,55,14,56],[22,56,14,57,"path"],[22,60,14,61],[22,62,14,61,"Object"],[22,68,14,61],[22,69,14,61,"assign"],[22,75,14,61],[22,80,15,11,"href"],[22,84,15,15],[22,85,15,16,"params"],[22,91,15,22],[22,92,16,5],[22,93,16,6],[23,6,14,12,"pathname"],[23,14,14,20],[23,17,14,20,"_createQualifiedPathn"],[23,38,14,20],[23,39,14,12,"pathname"],[23,47,14,20],[24,6,14,22,"params"],[24,12,14,28],[24,15,14,28,"_createQualifiedPathn"],[24,36,14,28],[24,37,14,22,"params"],[24,43,14,28],[25,4,17,4],[25,8,17,10,"paramsString"],[25,20,17,22],[25,23,17,25,"createQueryParams"],[25,40,17,42],[25,41,17,43,"params"],[25,47,17,49],[25,48,17,50],[26,4,18,4],[26,11,18,11,"pathname"],[26,19,18,19],[26,23,18,23,"paramsString"],[26,35,18,35],[26,38,18,38],[26,42,18,42,"paramsString"],[26,54,18,54],[26,56,18,56],[26,59,18,59],[26,61,18,61],[26,62,18,62],[27,2,19,0],[27,3,19,1],[28,2,20,0,"exports"],[28,9,20,7],[28,10,20,8,"resolveHref"],[28,21,20,19],[28,24,20,22,"resolveHref"],[28,35,20,33],[29,2,21,0],[29,11,21,9,"resolveHrefStringWithSegments"],[29,40,21,38,"resolveHrefStringWithSegments"],[29,41,21,39,"href"],[29,45,21,43],[29,47,21,112],[30,4,21,112],[30,8,21,112,"_ref"],[30,12,21,112],[30,15,21,112,"arguments"],[30,24,21,112],[30,25,21,112,"length"],[30,31,21,112],[30,39,21,112,"arguments"],[30,48,21,112],[30,56,21,112,"undefined"],[30,65,21,112],[30,68,21,112,"arguments"],[30,77,21,112],[30,83,21,78],[30,84,21,79],[30,85,21,80],[31,6,21,80,"_ref$segments"],[31,19,21,80],[31,22,21,80,"_ref"],[31,26,21,80],[31,27,21,47,"segments"],[31,35,21,55],[32,6,21,47,"segments"],[32,14,21,55],[32,17,21,55,"_ref$segments"],[32,30,21,55],[32,44,21,58],[32,46,21,60],[32,49,21,60,"_ref$segments"],[32,62,21,60],[33,6,21,60,"_ref$params"],[33,17,21,60],[33,20,21,60,"_ref"],[33,24,21,60],[33,25,21,62,"params"],[33,31,21,68],[34,6,21,62,"params"],[34,12,21,68],[34,15,21,68,"_ref$params"],[34,26,21,68],[34,40,21,71],[34,41,21,72],[34,42,21,73],[34,45,21,73,"_ref$params"],[34,56,21,73],[35,4,21,73],[35,8,21,73,"_ref2"],[35,13,21,73],[35,16,21,73,"arguments"],[35,25,21,73],[35,26,21,73,"length"],[35,32,21,73],[35,40,21,73,"arguments"],[35,49,21,73],[35,57,21,73,"undefined"],[35,66,21,73],[35,69,21,73,"arguments"],[35,78,21,73],[35,84,21,108],[35,85,21,109],[35,86,21,110],[36,6,21,84,"relativeToDirectory"],[36,25,21,103],[36,28,21,103,"_ref2"],[36,33,21,103],[36,34,21,84,"relativeToDirectory"],[36,53,21,103],[37,4,22,4],[37,8,22,8,"href"],[37,12,22,12],[37,13,22,13,"startsWith"],[37,23,22,23],[37,24,22,24],[37,27,22,27],[37,28,22,28],[37,30,22,30],[38,6,22,30],[38,10,22,30,"_segments$map$filter$"],[38,31,22,30],[39,6,23,8],[40,6,24,8],[40,10,24,12,"base"],[40,14,24,16],[40,18,24,16,"_segments$map$filter$"],[40,39,24,16],[40,42,24,19,"segments"],[40,50,24,27],[40,70,24,19,"segments"],[40,78,24,27],[40,79,25,14,"map"],[40,82,25,17],[40,83,25,18],[40,93,25,19,"segment"],[40,100,25,26],[40,102,25,31],[41,8,26,12],[41,12,26,16],[41,13,26,17,"segment"],[41,20,26,24],[41,21,26,25,"startsWith"],[41,31,26,35],[41,32,26,36],[41,35,26,39],[41,36,26,40],[41,38,27,16],[41,45,27,23,"segment"],[41,52,27,30],[42,8,28,12],[42,12,28,16,"segment"],[42,19,28,23],[42,20,28,24,"startsWith"],[42,30,28,34],[42,31,28,35],[42,37,28,41],[42,38,28,42],[42,40,28,44],[43,10,29,16,"segment"],[43,17,29,23],[43,20,29,26,"segment"],[43,27,29,33],[43,28,29,34,"slice"],[43,33,29,39],[43,34,29,40],[43,35,29,41],[43,37,29,43],[43,38,29,44],[43,39,29,45],[43,40,29,46],[44,10,30,16],[44,14,30,22,"param"],[44,19,30,27],[44,22,30,30,"params"],[44,28,30,36],[44,29,30,37,"segment"],[44,36,30,44],[44,37,30,45],[45,10,31,16],[45,14,31,20,"Array"],[45,19,31,25],[45,20,31,26,"isArray"],[45,27,31,33],[45,28,31,34,"param"],[45,33,31,39],[45,34,31,40],[45,36,31,42],[46,12,32,20],[46,19,32,27,"param"],[46,24,32,32],[46,25,32,33,"join"],[46,29,32,37],[46,30,32,38],[46,33,32,41],[46,34,32,42],[47,10,33,16],[47,11,33,17],[47,17,34,21],[48,12,34,21],[48,16,34,21,"_param$split$join"],[48,33,34,21],[48,35,34,21,"_param$split"],[48,47,34,21],[49,12,35,20],[49,20,35,20,"_param$split$join"],[49,37,35,20],[49,40,35,27,"param"],[49,45,35,32],[49,58,35,32,"_param$split"],[49,70,35,32],[49,73,35,27,"param"],[49,78,35,32],[49,79,35,34,"split"],[49,84,35,39],[49,85,35,40],[49,88,35,43],[49,89,35,44],[49,110,35,27,"_param$split"],[49,122,35,27],[49,123,35,46,"join"],[49,127,35,50],[49,128,35,51],[49,131,35,54],[49,132,35,55],[49,144,35,55,"_param$split$join"],[49,161,35,55],[49,164,35,59],[49,166,35,61],[50,10,36,16],[51,8,37,12],[51,9,37,13],[51,15,38,17],[52,10,39,16,"segment"],[52,17,39,23],[52,20,39,26,"segment"],[52,27,39,33],[52,28,39,34,"slice"],[52,33,39,39],[52,34,39,40],[52,35,39,41],[52,37,39,43],[52,38,39,44],[52,39,39,45],[52,40,39,46],[53,10,40,16],[53,17,40,23,"params"],[53,23,40,29],[53,24,40,30,"segment"],[53,31,40,37],[53,32,40,38],[54,8,41,12],[55,6,42,8],[55,7,42,9],[55,8,42,10],[55,9,43,13,"filter"],[55,15,43,19],[55,16,43,20,"Boolean"],[55,23,43,27],[55,24,43,28],[55,25,44,13,"join"],[55,29,44,17],[55,30,44,18],[55,33,44,21],[55,34,44,22],[55,46,44,22,"_segments$map$filter$"],[55,67,44,22],[55,70,44,26],[55,73,44,29],[56,6,45,8],[56,10,45,12,"relativeToDirectory"],[56,29,45,31],[56,31,45,33],[57,8,46,12,"base"],[57,12,46,16],[57,15,46,19],[57,18,46,22,"base"],[57,22,46,26],[57,25,46,29],[58,6,47,8],[59,6,48,8],[59,10,48,14,"url"],[59,13,48,17],[59,16,48,20],[59,20,48,24,"URL"],[59,23,48,27],[59,24,48,28,"href"],[59,28,48,32],[59,30,48,34],[59,49,48,53,"base"],[59,53,48,57],[59,55,48,59],[59,56,48,60],[60,6,49,8,"href"],[60,10,49,12],[60,13,49,15],[60,16,49,18,"url"],[60,19,49,21],[60,20,49,22,"pathname"],[60,28,49,30],[60,31,49,33,"url"],[60,34,49,36],[60,35,49,37,"search"],[60,41,49,43],[60,43,49,45],[61,4,50,4],[62,4,51,4],[62,11,51,11,"href"],[62,15,51,15],[63,2,52,0],[64,2,53,0],[64,11,53,9,"createQualifiedPathname"],[64,34,53,32,"createQualifiedPathname"],[64,35,53,33,"pathname"],[64,43,53,41],[64,45,53,43,"params"],[64,51,53,49],[64,53,53,51],[65,4,54,4],[65,13,54,4,"_ref3"],[65,18,54,4],[65,22,54,36,"Object"],[65,28,54,42],[65,29,54,43,"entries"],[65,36,54,50],[65,37,54,51,"params"],[65,43,54,57],[65,44,54,58],[65,46,54,60],[66,6,54,60],[66,10,54,60,"_ref4"],[66,15,54,60],[66,18,54,60,"_slicedToArray"],[66,32,54,60],[66,33,54,60,"_ref3"],[66,38,54,60],[67,6,54,60],[67,10,54,16,"key"],[67,13,54,19],[67,16,54,19,"_ref4"],[67,21,54,19],[68,6,54,19],[68,10,54,19,"_ref4$"],[68,16,54,19],[68,19,54,19,"_ref4"],[68,24,54,19],[69,6,54,19],[69,10,54,21,"value"],[69,15,54,26],[69,18,54,26,"_ref4$"],[69,24,54,26],[69,38,54,29],[69,40,54,31],[69,43,54,31,"_ref4$"],[69,49,54,31],[70,6,55,8],[70,10,55,14,"dynamicKey"],[70,20,55,24],[70,23,55,27],[70,27,55,31,"key"],[70,30,55,34],[70,33,55,37],[71,6,56,8],[71,10,56,14,"deepDynamicKey"],[71,24,56,28],[71,27,56,31],[71,34,56,38,"key"],[71,37,56,41],[71,40,56,44],[72,6,57,8],[72,10,57,12,"pathname"],[72,18,57,20],[72,19,57,21,"includes"],[72,27,57,29],[72,28,57,30,"dynamicKey"],[72,38,57,40],[72,39,57,41],[72,41,57,43],[73,8,58,12,"pathname"],[73,16,58,20],[73,19,58,23,"pathname"],[73,27,58,31],[73,28,58,32,"replace"],[73,35,58,39],[73,36,58,40,"dynamicKey"],[73,46,58,50],[73,48,58,52,"encodeParam"],[73,59,58,63],[73,60,58,64,"value"],[73,65,58,69],[73,66,58,70],[73,67,58,71],[74,6,59,8],[74,7,59,9],[74,13,60,13],[74,17,60,17,"pathname"],[74,25,60,25],[74,26,60,26,"includes"],[74,34,60,34],[74,35,60,35,"deepDynamicKey"],[74,49,60,49],[74,50,60,50],[74,52,60,52],[75,8,61,12,"pathname"],[75,16,61,20],[75,19,61,23,"pathname"],[75,27,61,31],[75,28,61,32,"replace"],[75,35,61,39],[75,36,61,40,"deepDynamicKey"],[75,50,61,54],[75,52,61,56,"encodeParam"],[75,63,61,67],[75,64,61,68,"value"],[75,69,61,73],[75,70,61,74],[75,71,61,75],[76,6,62,8],[76,7,62,9],[76,13,63,13],[77,8,64,12],[78,6,65,8],[79,6,66,8],[79,13,66,15,"params"],[79,19,66,21],[79,20,66,22,"key"],[79,23,66,25],[79,24,66,26],[80,4,67,4],[81,4,68,4],[81,11,68,11],[82,6,68,13,"pathname"],[82,14,68,21],[82,16,68,13,"pathname"],[82,24,68,21],[83,6,68,23,"params"],[83,12,68,29],[83,14,68,23,"params"],[84,4,68,30],[84,5,68,31],[85,2,69,0],[86,2,70,0],[86,11,70,9,"encodeParam"],[86,22,70,20,"encodeParam"],[86,23,70,21,"param"],[86,28,70,26],[86,30,70,28],[87,4,71,4],[87,8,71,8,"Array"],[87,13,71,13],[87,14,71,14,"isArray"],[87,21,71,21],[87,22,71,22,"param"],[87,27,71,27],[87,28,71,28],[87,30,71,30],[88,6,72,8],[88,13,72,15,"param"],[88,18,72,20],[88,19,72,21,"map"],[88,22,72,24],[88,23,72,25],[88,33,72,26,"p"],[88,34,72,27],[89,8,72,27],[89,15,72,32,"encodeParam"],[89,26,72,43],[89,27,72,44,"p"],[89,28,72,45],[89,29,72,46],[90,6,72,46],[90,8,72,47],[90,9,72,48,"join"],[90,13,72,52],[90,14,72,53],[90,17,72,56],[90,18,72,57],[91,4,73,4],[92,4,74,4],[92,11,74,11,"encodeURIComponent"],[92,29,74,29],[92,30,74,30,"param"],[92,35,74,35],[92,36,74,36,"toString"],[92,44,74,44],[92,45,74,45],[92,46,74,46],[92,47,74,47],[93,2,75,0],[94,2,76,0],[94,11,76,9,"createQueryParams"],[94,28,76,26,"createQueryParams"],[94,29,76,27,"params"],[94,35,76,33],[94,37,76,35],[95,4,77,4],[95,11,77,12,"Object"],[95,17,77,18],[95,18,77,19,"entries"],[95,25,77,26],[95,26,77,27,"params"],[95,32,77,33],[96,4,78,8],[97,4,78,8],[97,5,79,9,"filter"],[97,11,79,15],[97,12,79,16],[97,22,79,16,"_ref5"],[97,27,79,16],[98,6,79,16],[98,10,79,16,"_ref6"],[98,15,79,16],[98,18,79,16,"_slicedToArray"],[98,32,79,16],[98,33,79,16,"_ref5"],[98,38,79,16],[99,8,79,20,"value"],[99,13,79,25],[99,16,79,25,"_ref6"],[99,21,79,25],[100,6,79,25],[100,13,79,31,"value"],[100,18,79,36],[100,22,79,40],[100,26,79,44],[101,4,79,44],[101,6,79,45],[101,7,80,9,"map"],[101,10,80,12],[101,11,80,13],[101,21,80,13,"_ref7"],[101,26,80,13],[102,6,80,13],[102,10,80,13,"_ref8"],[102,15,80,13],[102,18,80,13,"_slicedToArray"],[102,32,80,13],[102,33,80,13,"_ref7"],[102,38,80,13],[103,8,80,15,"key"],[103,11,80,18],[103,14,80,18,"_ref8"],[103,19,80,18],[104,8,80,20,"value"],[104,13,80,25],[104,16,80,25,"_ref8"],[104,21,80,25],[105,6,80,25],[105,13,80,31],[105,16,80,34,"key"],[105,19,80,37],[105,23,80,41,"encodeURIComponent"],[105,41,80,59],[105,42,80,60,"value"],[105,47,80,65],[105,48,80,66,"toString"],[105,56,80,74],[105,57,80,75],[105,58,80,76],[105,59,80,77],[105,61,80,79],[106,4,80,79],[106,6,80,80],[106,7,81,9,"join"],[106,11,81,13],[106,12,81,14],[106,15,81,17],[106,16,81,18],[107,2,82,0],[108,0,82,1],[108,3]],"functionMap":{"names":["<global>","resolveHref","resolveHrefStringWithSegments","segments.map$argument_0","createQualifiedPathname","encodeParam","param.map$argument_0","createQueryParams","Object.entries.filter$argument_0","Object.entries.filter.map$argument_0"],"mappings":"AAA;oBCK;CDa;AEE;kBCI;SDiB;CFU;AIC;CJgB;AKC;yBCE,qBD;CLG;AOC;gBCG,4BD;aEC,kEF;CPE"},"hasCjsExports":true},"type":"js/module"}]}