{"dependencies":[{"name":"./lib/markup","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}}],"key":"jmWyOIwUhawNxN+alOZIsh3EVEk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = exports.default = void 0;\n  var _markup = require(_dependencyMap[0], \"./lib/markup\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n  var testHasAttribute = function testHasAttribute(val) {\n    try {\n      return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n    } catch (_unused) {\n      return false;\n    }\n  };\n  var testNode = function testNode(val) {\n    var constructorName = val.constructor.name;\n    var nodeType = val.nodeType,\n      tagName = val.tagName;\n    var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || testHasAttribute(val);\n    return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n  };\n  var test = function test(val) {\n    var _val$constructor;\n    return (val == null || (_val$constructor = val.constructor) == null ? void 0 : _val$constructor.name) && testNode(val);\n  };\n  exports.test = test;\n  function nodeIsText(node) {\n    return node.nodeType === TEXT_NODE;\n  }\n  function nodeIsComment(node) {\n    return node.nodeType === COMMENT_NODE;\n  }\n  function nodeIsFragment(node) {\n    return node.nodeType === FRAGMENT_NODE;\n  }\n  var serialize = function serialize(node, config, indentation, depth, refs, printer) {\n    if (nodeIsText(node)) {\n      return (0, _markup.printText)(node.data, config);\n    }\n    if (nodeIsComment(node)) {\n      return (0, _markup.printComment)(node.data, config);\n    }\n    var type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase();\n    if (++depth > config.maxDepth) {\n      return (0, _markup.printElementAsLeaf)(type, config);\n    }\n    return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes, function (attr) {\n      return attr.name;\n    }).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce(function (props, attribute) {\n      props[attribute.name] = attribute.value;\n      return props;\n    }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n  exports.serialize = serialize;\n  var plugin = {\n    serialize: serialize,\n    test: test\n  };\n  var _default = plugin;\n  exports.default = _default;\n});","lineCount":74,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"test"],[7,14,6,12],[7,17,6,15,"exports"],[7,24,6,22],[7,25,6,23,"serialize"],[7,34,6,32],[7,37,6,35,"exports"],[7,44,6,42],[7,45,6,43,"default"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,7,0],[8,6,7,4,"_markup"],[8,13,7,11],[8,16,7,14,"require"],[8,23,7,21],[8,24,7,21,"_dependencyMap"],[8,38,7,21],[8,57,7,36],[8,58,7,37],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[16,2,15,0],[16,6,15,6,"ELEMENT_NODE"],[16,18,15,18],[16,21,15,21],[16,22,15,22],[17,2,16,0],[17,6,16,6,"TEXT_NODE"],[17,15,16,15],[17,18,16,18],[17,19,16,19],[18,2,17,0],[18,6,17,6,"COMMENT_NODE"],[18,18,17,18],[18,21,17,21],[18,22,17,22],[19,2,18,0],[19,6,18,6,"FRAGMENT_NODE"],[19,19,18,19],[19,22,18,22],[19,24,18,24],[20,2,19,0],[20,6,19,6,"ELEMENT_REGEXP"],[20,20,19,20],[20,23,19,23],[20,50,19,50],[21,2,20,0],[21,6,20,6,"testHasAttribute"],[21,22,20,22],[21,25,20,25],[21,34,20,6,"testHasAttribute"],[21,50,20,22,"testHasAttribute"],[21,51,20,25,"val"],[21,54,20,28],[21,56,20,32],[22,4,21,2],[22,8,21,6],[23,6,22,4],[23,13,22,11],[23,20,22,18,"val"],[23,23,22,21],[23,24,22,22,"hasAttribute"],[23,36,22,34],[23,41,22,39],[23,51,22,49],[23,55,22,53,"val"],[23,58,22,56],[23,59,22,57,"hasAttribute"],[23,71,22,69],[23,72,22,70],[23,76,22,74],[23,77,22,75],[24,4,23,2],[24,5,23,3],[24,6,23,4],[24,13,23,4,"_unused"],[24,20,23,4],[24,22,23,10],[25,6,24,4],[25,13,24,11],[25,18,24,16],[26,4,25,2],[27,2,26,0],[27,3,26,1],[28,2,27,0],[28,6,27,6,"testNode"],[28,14,27,14],[28,17,27,17],[28,26,27,6,"testNode"],[28,34,27,14,"testNode"],[28,35,27,17,"val"],[28,38,27,20],[28,40,27,24],[29,4,28,2],[29,8,28,8,"constructorName"],[29,23,28,23],[29,26,28,26,"val"],[29,29,28,29],[29,30,28,30,"constructor"],[29,41,28,41],[29,42,28,42,"name"],[29,46,28,46],[30,4,29,2],[30,8,29,9,"nodeType"],[30,16,29,17],[30,19,29,30,"val"],[30,22,29,33],[30,23,29,9,"nodeType"],[30,31,29,17],[31,6,29,19,"tagName"],[31,13,29,26],[31,16,29,30,"val"],[31,19,29,33],[31,20,29,19,"tagName"],[31,27,29,26],[32,4,30,2],[32,8,30,8,"isCustomElement"],[32,23,30,23],[32,26,31,5],[32,33,31,12,"tagName"],[32,40,31,19],[32,45,31,24],[32,53,31,32],[32,57,31,36,"tagName"],[32,64,31,43],[32,65,31,44,"includes"],[32,73,31,52],[32,74,31,53],[32,77,31,56],[32,78,31,57],[32,82,32,4,"testHasAttribute"],[32,98,32,20],[32,99,32,21,"val"],[32,102,32,24],[32,103,32,25],[33,4,33,2],[33,11,34,5,"nodeType"],[33,19,34,13],[33,24,34,18,"ELEMENT_NODE"],[33,36,34,30],[33,41,35,7,"ELEMENT_REGEXP"],[33,55,35,21],[33,56,35,22,"test"],[33,60,35,26],[33,61,35,27,"constructorName"],[33,76,35,42],[33,77,35,43],[33,81,35,47,"isCustomElement"],[33,96,35,62],[33,97,35,63],[33,101,36,5,"nodeType"],[33,109,36,13],[33,114,36,18,"TEXT_NODE"],[33,123,36,27],[33,127,36,31,"constructorName"],[33,142,36,46],[33,147,36,51],[33,153,36,58],[33,157,37,5,"nodeType"],[33,165,37,13],[33,170,37,18,"COMMENT_NODE"],[33,182,37,30],[33,186,37,34,"constructorName"],[33,201,37,49],[33,206,37,54],[33,215,37,64],[33,219,38,5,"nodeType"],[33,227,38,13],[33,232,38,18,"FRAGMENT_NODE"],[33,245,38,31],[33,249,38,35,"constructorName"],[33,264,38,50],[33,269,38,55],[33,287,38,74],[34,2,40,0],[34,3,40,1],[35,2,41,0],[35,6,41,6,"test"],[35,10,41,10],[35,13,41,13],[35,22,41,6,"test"],[35,26,41,10,"test"],[35,27,41,13,"val"],[35,30,41,16],[36,4,41,16],[36,8,41,16,"_val$constructor"],[36,24,41,16],[37,4,41,16],[37,11,41,20],[37,12,41,20,"val"],[37,15,41,23],[37,28,41,23,"_val$constructor"],[37,44,41,23],[37,47,41,20,"val"],[37,50,41,23],[37,51,41,25,"constructor"],[37,62,41,36],[37,83,41,20,"_val$constructor"],[37,99,41,20],[37,100,41,38,"name"],[37,104,41,42],[37,109,41,46,"testNode"],[37,117,41,54],[37,118,41,55,"val"],[37,121,41,58],[37,122,41,59],[38,2,41,59],[39,2,42,0,"exports"],[39,9,42,7],[39,10,42,8,"test"],[39,14,42,12],[39,17,42,15,"test"],[39,21,42,19],[40,2,43,0],[40,11,43,9,"nodeIsText"],[40,21,43,19,"nodeIsText"],[40,22,43,20,"node"],[40,26,43,24],[40,28,43,26],[41,4,44,2],[41,11,44,9,"node"],[41,15,44,13],[41,16,44,14,"nodeType"],[41,24,44,22],[41,29,44,27,"TEXT_NODE"],[41,38,44,36],[42,2,45,0],[43,2,46,0],[43,11,46,9,"nodeIsComment"],[43,24,46,22,"nodeIsComment"],[43,25,46,23,"node"],[43,29,46,27],[43,31,46,29],[44,4,47,2],[44,11,47,9,"node"],[44,15,47,13],[44,16,47,14,"nodeType"],[44,24,47,22],[44,29,47,27,"COMMENT_NODE"],[44,41,47,39],[45,2,48,0],[46,2,49,0],[46,11,49,9,"nodeIsFragment"],[46,25,49,23,"nodeIsFragment"],[46,26,49,24,"node"],[46,30,49,28],[46,32,49,30],[47,4,50,2],[47,11,50,9,"node"],[47,15,50,13],[47,16,50,14,"nodeType"],[47,24,50,22],[47,29,50,27,"FRAGMENT_NODE"],[47,42,50,40],[48,2,51,0],[49,2,52,0],[49,6,52,6,"serialize"],[49,15,52,15],[49,18,52,18],[49,27,52,6,"serialize"],[49,36,52,15,"serialize"],[49,37,52,19,"node"],[49,41,52,23],[49,43,52,25,"config"],[49,49,52,31],[49,51,52,33,"indentation"],[49,62,52,44],[49,64,52,46,"depth"],[49,69,52,51],[49,71,52,53,"refs"],[49,75,52,57],[49,77,52,59,"printer"],[49,84,52,66],[49,86,52,71],[50,4,53,2],[50,8,53,6,"nodeIsText"],[50,18,53,16],[50,19,53,17,"node"],[50,23,53,21],[50,24,53,22],[50,26,53,24],[51,6,54,4],[51,13,54,11],[51,14,54,12],[51,15,54,13],[51,17,54,15,"_markup"],[51,24,54,22],[51,25,54,23,"printText"],[51,34,54,32],[51,36,54,34,"node"],[51,40,54,38],[51,41,54,39,"data"],[51,45,54,43],[51,47,54,45,"config"],[51,53,54,51],[51,54,54,52],[52,4,55,2],[53,4,56,2],[53,8,56,6,"nodeIsComment"],[53,21,56,19],[53,22,56,20,"node"],[53,26,56,24],[53,27,56,25],[53,29,56,27],[54,6,57,4],[54,13,57,11],[54,14,57,12],[54,15,57,13],[54,17,57,15,"_markup"],[54,24,57,22],[54,25,57,23,"printComment"],[54,37,57,35],[54,39,57,37,"node"],[54,43,57,41],[54,44,57,42,"data"],[54,48,57,46],[54,50,57,48,"config"],[54,56,57,54],[54,57,57,55],[55,4,58,2],[56,4,59,2],[56,8,59,8,"type"],[56,12,59,12],[56,15,59,15,"nodeIsFragment"],[56,29,59,29],[56,30,59,30,"node"],[56,34,59,34],[56,35,59,35],[56,38,60,6],[56,56,60,24],[56,59,61,6,"node"],[56,63,61,10],[56,64,61,11,"tagName"],[56,71,61,18],[56,72,61,19,"toLowerCase"],[56,83,61,30],[56,84,61,31],[56,85,61,32],[57,4,62,2],[57,8,62,6],[57,10,62,8,"depth"],[57,15,62,13],[57,18,62,16,"config"],[57,24,62,22],[57,25,62,23,"maxDepth"],[57,33,62,31],[57,35,62,33],[58,6,63,4],[58,13,63,11],[58,14,63,12],[58,15,63,13],[58,17,63,15,"_markup"],[58,24,63,22],[58,25,63,23,"printElementAsLeaf"],[58,43,63,41],[58,45,63,43,"type"],[58,49,63,47],[58,51,63,49,"config"],[58,57,63,55],[58,58,63,56],[59,4,64,2],[60,4,65,2],[60,11,65,9],[60,12,65,10],[60,13,65,11],[60,15,65,13,"_markup"],[60,22,65,20],[60,23,65,21,"printElement"],[60,35,65,33],[60,37,66,4,"type"],[60,41,66,8],[60,43,67,4],[60,44,67,5],[60,45,67,6],[60,47,67,8,"_markup"],[60,54,67,15],[60,55,67,16,"printProps"],[60,65,67,26],[60,67,68,6,"nodeIsFragment"],[60,81,68,20],[60,82,68,21,"node"],[60,86,68,25],[60,87,68,26],[60,90,69,10],[60,92,69,12],[60,95,70,10,"Array"],[60,100,70,15],[60,101,70,16,"from"],[60,105,70,20],[60,106,70,21,"node"],[60,110,70,25],[60,111,70,26,"attributes"],[60,121,70,36],[60,123,70,38],[60,133,70,38,"attr"],[60,137,70,42],[61,6,70,42],[61,13,70,46,"attr"],[61,17,70,50],[61,18,70,51,"name"],[61,22,70,55],[62,4,70,55],[62,6,70,56],[62,7,70,57,"sort"],[62,11,70,61],[62,12,70,62],[62,13,70,63],[62,15,71,6,"nodeIsFragment"],[62,29,71,20],[62,30,71,21,"node"],[62,34,71,25],[62,35,71,26],[62,38,72,10],[62,39,72,11],[62,40,72,12],[62,43,73,10,"Array"],[62,48,73,15],[62,49,73,16,"from"],[62,53,73,20],[62,54,73,21,"node"],[62,58,73,25],[62,59,73,26,"attributes"],[62,69,73,36],[62,70,73,37],[62,71,73,38,"reduce"],[62,77,73,44],[62,78,73,45],[62,88,73,46,"props"],[62,93,73,51],[62,95,73,53,"attribute"],[62,104,73,62],[62,106,73,67],[63,6,74,12,"props"],[63,11,74,17],[63,12,74,18,"attribute"],[63,21,74,27],[63,22,74,28,"name"],[63,26,74,32],[63,27,74,33],[63,30,74,36,"attribute"],[63,39,74,45],[63,40,74,46,"value"],[63,45,74,51],[64,6,75,12],[64,13,75,19,"props"],[64,18,75,24],[65,4,76,10],[65,5,76,11],[65,7,76,13],[65,8,76,14],[65,9,76,15],[65,10,76,16],[65,12,77,6,"config"],[65,18,77,12],[65,20,78,6,"indentation"],[65,31,78,17],[65,34,78,20,"config"],[65,40,78,26],[65,41,78,27,"indent"],[65,47,78,33],[65,49,79,6,"depth"],[65,54,79,11],[65,56,80,6,"refs"],[65,60,80,10],[65,62,81,6,"printer"],[65,69,82,4],[65,70,82,5],[65,72,83,4],[65,73,83,5],[65,74,83,6],[65,76,83,8,"_markup"],[65,83,83,15],[65,84,83,16,"printChildren"],[65,97,83,29],[65,99,84,6,"Array"],[65,104,84,11],[65,105,84,12,"prototype"],[65,114,84,21],[65,115,84,22,"slice"],[65,120,84,27],[65,121,84,28,"call"],[65,125,84,32],[65,126,84,33,"node"],[65,130,84,37],[65,131,84,38,"childNodes"],[65,141,84,48],[65,145,84,52,"node"],[65,149,84,56],[65,150,84,57,"children"],[65,158,84,65],[65,159,84,66],[65,161,85,6,"config"],[65,167,85,12],[65,169,86,6,"indentation"],[65,180,86,17],[65,183,86,20,"config"],[65,189,86,26],[65,190,86,27,"indent"],[65,196,86,33],[65,198,87,6,"depth"],[65,203,87,11],[65,205,88,6,"refs"],[65,209,88,10],[65,211,89,6,"printer"],[65,218,90,4],[65,219,90,5],[65,221,91,4,"config"],[65,227,91,10],[65,229,92,4,"indentation"],[65,240,93,2],[65,241,93,3],[66,2,94,0],[66,3,94,1],[67,2,95,0,"exports"],[67,9,95,7],[67,10,95,8,"serialize"],[67,19,95,17],[67,22,95,20,"serialize"],[67,31,95,29],[68,2,96,0],[68,6,96,6,"plugin"],[68,12,96,12],[68,15,96,15],[69,4,97,2,"serialize"],[69,13,97,11],[69,15,97,2,"serialize"],[69,24,97,11],[70,4,98,2,"test"],[70,8,98,6],[70,10,98,2,"test"],[71,2,99,0],[71,3,99,1],[72,2,100,0],[72,6,100,4,"_default"],[72,14,100,12],[72,17,100,15,"plugin"],[72,23,100,21],[73,2,101,0,"exports"],[73,9,101,7],[73,10,101,8,"default"],[73,17,101,15],[73,20,101,18,"_default"],[73,28,101,26],[74,0,101,27],[74,3]],"functionMap":{"names":["<global>","testHasAttribute","testNode","test","nodeIsText","nodeIsComment","nodeIsFragment","serialize","Array.from$argument_1","Array.from.reduce$argument_0"],"mappings":"AAA;yBCmB;CDM;iBEC;CFa;aGC,8CH;AIE;CJE;AKC;CLE;AMC;CNE;kBOC;sCCkB,iBD;6CEG;WFG;CPkB"},"hasCjsExports":true},"type":"js/module"}]}