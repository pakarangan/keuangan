{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":57,"index":103}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./AssetSourceResolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":56,"index":160}}],"key":"1XREZLfiB40YsGJEOFyn6rrYKeQ=","exportNames":["*"],"imports":1}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.selectAssetSource = selectAssetSource;\n  exports.resolveUri = resolveUri;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _AssetSourceResolver = require(_dependencyMap[2], \"./AssetSourceResolver\");\n  var AssetSourceResolver = _interopDefault(_AssetSourceResolver);\n  var _PlatformUtils = require(_dependencyMap[3], \"./PlatformUtils\");\n  /**\n   * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n   * a { uri, hash } pair for the specific asset file.\n   *\n   * If the asset isn't an image with multiple scales, the first file is selected.\n   */\n  function selectAssetSource(meta) {\n    var _meta$fileHashes$inde, _meta$fileUris$index, _manifest2$extra;\n    // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n    // explicitly provided URIs\n    var scale = AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get());\n    var index = meta.scales.findIndex(function (s) {\n      return s === scale;\n    });\n    var hash = meta.fileHashes ? (_meta$fileHashes$inde = meta.fileHashes[index]) != null ? _meta$fileHashes$inde : meta.fileHashes[0] : meta.hash;\n    // Allow asset processors to directly provide the URL to load\n    var uri = meta.fileUris ? (_meta$fileUris$index = meta.fileUris[index]) != null ? _meta$fileUris$index : meta.fileUris[0] : meta.uri;\n    if (uri) {\n      return {\n        uri: resolveUri(uri),\n        hash: hash\n      };\n    }\n    var fileScale = scale === 1 ? '' : `@${scale}x`;\n    var fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n    var suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n    var params = new URLSearchParams({\n      platform: _expoModulesCore.Platform.OS,\n      hash: meta.hash\n    });\n    // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n    // development server or production CDN URL origin\n    if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n      var _uri = meta.httpServerLocation + suffix + '?' + params;\n      return {\n        uri: _uri,\n        hash: hash\n      };\n    }\n    // For assets during development using manifest2, we use the development server's URL origin\n    var manifest2 = (0, _PlatformUtils.getManifest2)();\n    var devServerUrl = manifest2 != null && (_manifest2$extra = manifest2.extra) != null && (_manifest2$extra = _manifest2$extra.expoGo) != null && _manifest2$extra.developer ? 'http://' + manifest2.extra.expoGo.debuggerHost : null;\n    if (devServerUrl) {\n      var baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n      baseUrl.searchParams.set('platform', _expoModulesCore.Platform.OS);\n      baseUrl.searchParams.set('hash', meta.hash);\n      return {\n        uri: baseUrl.href,\n        hash: hash\n      };\n    }\n    // Temporary fallback for loading assets in Expo Go home\n    if (_reactNative.NativeModules['ExponentKernel']) {\n      return {\n        uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n        hash: hash\n      };\n    }\n    // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n    // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n    // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n    // string) as a placeholder.\n    return {\n      uri: '',\n      hash: hash\n    };\n  }\n  /**\n   * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n   * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n   * base URI.\n   */\n  function resolveUri(uri) {\n    // `manifestBaseUrl` is always an absolute URL or `null`.\n    return _PlatformUtils.manifestBaseUrl ? new URL(uri, _PlatformUtils.manifestBaseUrl).href : uri;\n  }\n});","lineCount":95,"map":[[12,2,11,0,"exports"],[12,9,11,0],[12,10,11,0,"selectAssetSource"],[12,27,11,0],[12,30,11,0,"selectAssetSource"],[12,47,11,0],[13,2,64,0,"exports"],[13,9,64,0],[13,10,64,0,"resolveUri"],[13,20,64,0],[13,23,64,0,"resolveUri"],[13,33,64,0],[14,2,1,0],[14,6,1,0,"_expoModulesCore"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,3,0],[16,6,3,0,"_AssetSourceResolver"],[16,26,3,0],[16,29,3,0,"require"],[16,36,3,0],[16,37,3,0,"_dependencyMap"],[16,51,3,0],[17,2,3,0],[17,6,3,0,"AssetSourceResolver"],[17,25,3,0],[17,28,3,0,"_interopDefault"],[17,43,3,0],[17,44,3,0,"_AssetSourceResolver"],[17,64,3,0],[18,2,4,0],[18,6,4,0,"_PlatformUtils"],[18,20,4,0],[18,23,4,0,"require"],[18,30,4,0],[18,31,4,0,"_dependencyMap"],[18,45,4,0],[19,2,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,2,11,7],[25,11,11,16,"selectAssetSource"],[25,28,11,33,"selectAssetSource"],[25,29,11,34,"meta"],[25,33,11,38],[25,35,11,40],[26,4,11,40],[26,8,11,40,"_meta$fileHashes$inde"],[26,29,11,40],[26,31,11,40,"_meta$fileUris$index"],[26,51,11,40],[26,53,11,40,"_manifest2$extra"],[26,69,11,40],[27,4,12,4],[28,4,13,4],[29,4,14,4],[29,8,14,10,"scale"],[29,13,14,15],[29,16,14,18,"AssetSourceResolver"],[29,35,14,37],[29,36,14,37,"default"],[29,43,14,37],[29,44,14,38,"pickScale"],[29,53,14,47],[29,54,14,48,"meta"],[29,58,14,52],[29,59,14,53,"scales"],[29,65,14,59],[29,67,14,61,"PixelRatio"],[29,79,14,71],[29,80,14,71,"PixelRatio"],[29,90,14,71],[29,91,14,72,"get"],[29,94,14,75],[29,95,14,76],[29,96,14,77],[29,97,14,78],[30,4,15,4],[30,8,15,10,"index"],[30,13,15,15],[30,16,15,18,"meta"],[30,20,15,22],[30,21,15,23,"scales"],[30,27,15,29],[30,28,15,30,"findIndex"],[30,37,15,39],[30,38,15,40],[30,48,15,41,"s"],[30,49,15,42],[31,6,15,42],[31,13,15,47,"s"],[31,14,15,48],[31,19,15,53,"scale"],[31,24,15,58],[32,4,15,58],[32,6,15,59],[33,4,16,4],[33,8,16,10,"hash"],[33,12,16,14],[33,15,16,17,"meta"],[33,19,16,21],[33,20,16,22,"fileHashes"],[33,30,16,32],[33,34,16,32,"_meta$fileHashes$inde"],[33,55,16,32],[33,58,16,36,"meta"],[33,62,16,40],[33,63,16,41,"fileHashes"],[33,73,16,51],[33,74,16,52,"index"],[33,79,16,57],[33,80,16,58],[33,92,16,58,"_meta$fileHashes$inde"],[33,113,16,58],[33,116,16,62,"meta"],[33,120,16,66],[33,121,16,67,"fileHashes"],[33,131,16,77],[33,132,16,78],[33,133,16,79],[33,134,16,80],[33,137,16,84,"meta"],[33,141,16,88],[33,142,16,89,"hash"],[33,146,16,93],[34,4,17,4],[35,4,18,4],[35,8,18,10,"uri"],[35,11,18,13],[35,14,18,16,"meta"],[35,18,18,20],[35,19,18,21,"fileUris"],[35,27,18,29],[35,31,18,29,"_meta$fileUris$index"],[35,51,18,29],[35,54,18,33,"meta"],[35,58,18,37],[35,59,18,38,"fileUris"],[35,67,18,46],[35,68,18,47,"index"],[35,73,18,52],[35,74,18,53],[35,86,18,53,"_meta$fileUris$index"],[35,106,18,53],[35,109,18,57,"meta"],[35,113,18,61],[35,114,18,62,"fileUris"],[35,122,18,70],[35,123,18,71],[35,124,18,72],[35,125,18,73],[35,128,18,77,"meta"],[35,132,18,81],[35,133,18,82,"uri"],[35,136,18,85],[36,4,19,4],[36,8,19,8,"uri"],[36,11,19,11],[36,13,19,13],[37,6,20,8],[37,13,20,15],[38,8,20,17,"uri"],[38,11,20,20],[38,13,20,22,"resolveUri"],[38,23,20,32],[38,24,20,33,"uri"],[38,27,20,36],[38,28,20,37],[39,8,20,39,"hash"],[39,12,20,43],[39,14,20,39,"hash"],[40,6,20,44],[40,7,20,45],[41,4,21,4],[42,4,22,4],[42,8,22,10,"fileScale"],[42,17,22,19],[42,20,22,22,"scale"],[42,25,22,27],[42,30,22,32],[42,31,22,33],[42,34,22,36],[42,36,22,38],[42,39,22,41],[42,43,22,45,"scale"],[42,48,22,50],[42,51,22,53],[43,4,23,4],[43,8,23,10,"fileExtension"],[43,21,23,23],[43,24,23,26,"meta"],[43,28,23,30],[43,29,23,31,"type"],[43,33,23,35],[43,36,23,38],[43,40,23,42,"encodeURIComponent"],[43,58,23,60],[43,59,23,61,"meta"],[43,63,23,65],[43,64,23,66,"type"],[43,68,23,70],[43,69,23,71],[43,71,23,73],[43,74,23,76],[43,76,23,78],[44,4,24,4],[44,8,24,10,"suffix"],[44,14,24,16],[44,17,24,19],[44,21,24,23,"encodeURIComponent"],[44,39,24,41],[44,40,24,42,"meta"],[44,44,24,46],[44,45,24,47,"name"],[44,49,24,51],[44,50,24,52],[44,53,24,55,"fileScale"],[44,62,24,64],[44,65,24,67,"fileExtension"],[44,78,24,80],[44,80,24,82],[45,4,25,4],[45,8,25,10,"params"],[45,14,25,16],[45,17,25,19],[45,21,25,23,"URLSearchParams"],[45,36,25,38],[45,37,25,39],[46,6,26,8,"platform"],[46,14,26,16],[46,16,26,18,"Platform"],[46,32,26,26],[46,33,26,26,"Platform"],[46,41,26,26],[46,42,26,27,"OS"],[46,44,26,29],[47,6,27,8,"hash"],[47,10,27,12],[47,12,27,14,"meta"],[47,16,27,18],[47,17,27,19,"hash"],[48,4,28,4],[48,5,28,5],[48,6,28,6],[49,4,29,4],[50,4,30,4],[51,4,31,4],[51,8,31,8],[51,22,31,22],[51,23,31,23,"test"],[51,27,31,27],[51,28,31,28,"meta"],[51,32,31,32],[51,33,31,33,"httpServerLocation"],[51,51,31,51],[51,52,31,52],[51,54,31,54],[52,6,32,8],[52,10,32,14,"uri"],[52,14,32,17],[52,17,32,20,"meta"],[52,21,32,24],[52,22,32,25,"httpServerLocation"],[52,40,32,43],[52,43,32,46,"suffix"],[52,49,32,52],[52,52,32,55],[52,55,32,58],[52,58,32,61,"params"],[52,64,32,67],[53,6,33,8],[53,13,33,15],[54,8,33,17,"uri"],[54,11,33,20],[54,13,33,17,"uri"],[54,17,33,20],[55,8,33,22,"hash"],[55,12,33,26],[55,14,33,22,"hash"],[56,6,33,27],[56,7,33,28],[57,4,34,4],[58,4,35,4],[59,4,36,4],[59,8,36,10,"manifest2"],[59,17,36,19],[59,20,36,22],[59,24,36,22,"getManifest2"],[59,38,36,34],[59,39,36,34,"getManifest2"],[59,51,36,34],[59,53,36,35],[59,54,36,36],[60,4,37,4],[60,8,37,10,"devServerUrl"],[60,20,37,22],[60,23,37,25,"manifest2"],[60,32,37,34],[60,45,37,34,"_manifest2$extra"],[60,61,37,34],[60,64,37,25,"manifest2"],[60,73,37,34],[60,74,37,36,"extra"],[60,79,37,41],[60,93,37,41,"_manifest2$extra"],[60,109,37,41],[60,112,37,25,"_manifest2$extra"],[60,128,37,25],[60,129,37,43,"expoGo"],[60,135,37,49],[60,148,37,25,"_manifest2$extra"],[60,164,37,25],[60,165,37,51,"developer"],[60,174,37,60],[60,177,38,10],[60,186,38,19],[60,189,38,22,"manifest2"],[60,198,38,31],[60,199,38,32,"extra"],[60,204,38,37],[60,205,38,38,"expoGo"],[60,211,38,44],[60,212,38,45,"debuggerHost"],[60,224,38,57],[60,227,39,10],[60,231,39,14],[61,4,40,4],[61,8,40,8,"devServerUrl"],[61,20,40,20],[61,22,40,22],[62,6,41,8],[62,10,41,14,"baseUrl"],[62,17,41,21],[62,20,41,24],[62,24,41,28,"URL"],[62,27,41,31],[62,28,41,32,"meta"],[62,32,41,36],[62,33,41,37,"httpServerLocation"],[62,51,41,55],[62,54,41,58,"suffix"],[62,60,41,64],[62,62,41,66,"devServerUrl"],[62,74,41,78],[62,75,41,79],[63,6,42,8,"baseUrl"],[63,13,42,15],[63,14,42,16,"searchParams"],[63,26,42,28],[63,27,42,29,"set"],[63,30,42,32],[63,31,42,33],[63,41,42,43],[63,43,42,45,"Platform"],[63,59,42,53],[63,60,42,53,"Platform"],[63,68,42,53],[63,69,42,54,"OS"],[63,71,42,56],[63,72,42,57],[64,6,43,8,"baseUrl"],[64,13,43,15],[64,14,43,16,"searchParams"],[64,26,43,28],[64,27,43,29,"set"],[64,30,43,32],[64,31,43,33],[64,37,43,39],[64,39,43,41,"meta"],[64,43,43,45],[64,44,43,46,"hash"],[64,48,43,50],[64,49,43,51],[65,6,44,8],[65,13,44,15],[66,8,45,12,"uri"],[66,11,45,15],[66,13,45,17,"baseUrl"],[66,20,45,24],[66,21,45,25,"href"],[66,25,45,29],[67,8,46,12,"hash"],[67,12,46,16],[67,14,46,12,"hash"],[68,6,47,8],[68,7,47,9],[69,4,48,4],[70,4,49,4],[71,4,50,4],[71,8,50,8,"NativeModules"],[71,20,50,21],[71,21,50,21,"NativeModules"],[71,34,50,21],[71,35,50,22],[71,51,50,38],[71,52,50,39],[71,54,50,41],[72,6,51,8],[72,13,51,15],[73,8,51,17,"uri"],[73,11,51,20],[73,13,51,22],[73,58,51,67,"encodeURIComponent"],[73,76,51,85],[73,77,51,86,"hash"],[73,81,51,90],[73,82,51,91],[73,84,51,93],[74,8,51,95,"hash"],[74,12,51,99],[74,14,51,95,"hash"],[75,6,51,100],[75,7,51,101],[76,4,52,4],[77,4,53,4],[78,4,54,4],[79,4,55,4],[80,4,56,4],[81,4,57,4],[81,11,57,11],[82,6,57,13,"uri"],[82,9,57,16],[82,11,57,18],[82,13,57,20],[83,6,57,22,"hash"],[83,10,57,26],[83,12,57,22,"hash"],[84,4,57,27],[84,5,57,28],[85,2,58,0],[86,2,59,0],[87,0,60,0],[88,0,61,0],[89,0,62,0],[90,0,63,0],[91,2,64,7],[91,11,64,16,"resolveUri"],[91,21,64,26,"resolveUri"],[91,22,64,27,"uri"],[91,25,64,30],[91,27,64,32],[92,4,65,4],[93,4,66,4],[93,11,66,11,"manifestBaseUrl"],[93,25,66,26],[93,26,66,26,"manifestBaseUrl"],[93,41,66,26],[93,44,66,29],[93,48,66,33,"URL"],[93,51,66,36],[93,52,66,37,"uri"],[93,55,66,40],[93,57,66,42,"manifestBaseUrl"],[93,71,66,57],[93,72,66,57,"manifestBaseUrl"],[93,87,66,57],[93,88,66,58],[93,89,66,59,"href"],[93,93,66,63],[93,96,66,66,"uri"],[93,99,66,69],[94,2,67,0],[95,0,67,1],[95,3]],"functionMap":{"names":["<global>","selectAssetSource","meta.scales.findIndex$argument_0","resolveUri"],"mappings":"AAA;OCU;wCCI,kBD;CD2C;OGM;CHG"},"hasCjsExports":false},"type":"js/module"}]}