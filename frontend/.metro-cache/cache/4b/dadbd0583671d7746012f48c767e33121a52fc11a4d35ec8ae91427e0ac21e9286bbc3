{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.validatePathConfig = validatePathConfig;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var formatToList = function formatToList(items) {\n    return Object.entries(items).map(function (_ref) {\n      var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      return `- ${key} (${value})`;\n    }).join('\\n');\n  };\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validation = Object.assign({\n      path: 'string',\n      initialRouteName: 'string',\n      screens: 'object'\n    }, root ? null : {\n      alias: 'array',\n      exact: 'boolean',\n      stringify: 'object',\n      parse: 'object'\n    });\n    if (typeof config !== 'object' || config === null) {\n      throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(config)}.`);\n    }\n    var validationErrors = Object.fromEntries(Object.keys(config).map(function (key) {\n      if (key in validation) {\n        var type = validation[key];\n        // @ts-expect-error: we know the key exists\n        var value = config[key];\n        if (value !== undefined) {\n          if (type === 'array') {\n            if (!Array.isArray(value)) {\n              return [key, `expected 'Array', got '${typeof value}'`];\n            }\n          } else if (typeof value !== type) {\n            return [key, `expected '${type}', got '${typeof value}'`];\n          }\n        }\n      } else {\n        return [key, 'extraneous'];\n      }\n      return null;\n    }).filter(Boolean));\n    if (Object.keys(validationErrors).length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(validationErrors)}\\n\\nYou can only specify the following properties:\\n${formatToList(validation)}\\n\\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (root && 'path' in config && typeof config.path === 'string' && config.path.includes(':')) {\n      throw new Error(`Found invalid path '${config.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);\n    }\n    if ('screens' in config && config.screens) {\n      Object.entries(config.screens).forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray.default)(_ref3, 2),\n          _ = _ref4[0],\n          value = _ref4[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":74,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"validatePathConfig"],[12,28,4,0],[12,31,4,0,"validatePathConfig"],[12,49,4,0],[13,2,51,1],[13,6,51,1,"_babelRuntimeHelpersSlicedToArray"],[13,39,51,1],[13,42,51,1,"require"],[13,49,51,1],[13,50,51,1,"_dependencyMap"],[13,64,51,1],[14,2,51,1],[14,6,51,1,"_slicedToArray"],[14,20,51,1],[14,23,51,1,"_interopDefault"],[14,38,51,1],[14,39,51,1,"_babelRuntimeHelpersSlicedToArray"],[14,72,51,1],[15,2,3,0],[15,6,3,6,"formatToList"],[15,18,3,18],[15,21,3,21],[15,30,3,6,"formatToList"],[15,42,3,18,"formatToList"],[15,43,3,21,"items"],[15,48,3,26],[16,4,3,26],[16,11,3,30,"Object"],[16,17,3,36],[16,18,3,37,"entries"],[16,25,3,44],[16,26,3,45,"items"],[16,31,3,50],[16,32,3,51],[16,33,3,52,"map"],[16,36,3,55],[16,37,3,56],[16,47,3,56,"_ref"],[16,51,3,56],[17,6,3,56],[17,10,3,56,"_ref2"],[17,15,3,56],[17,22,3,56,"_slicedToArray"],[17,36,3,56],[17,37,3,56,"default"],[17,44,3,56],[17,46,3,56,"_ref"],[17,50,3,56],[18,8,3,58,"key"],[18,11,3,61],[18,14,3,61,"_ref2"],[18,19,3,61],[19,8,3,63,"value"],[19,13,3,68],[19,16,3,68,"_ref2"],[19,21,3,68],[20,6,3,68],[20,13,3,74],[20,18,3,79,"key"],[20,21,3,82],[20,26,3,87,"value"],[20,31,3,92],[20,34,3,95],[21,4,3,95],[21,6,3,96],[21,7,3,97,"join"],[21,11,3,101],[21,12,3,102],[21,16,3,106],[21,17,3,107],[22,2,3,107],[23,2,4,7],[23,11,4,16,"validatePathConfig"],[23,29,4,34,"validatePathConfig"],[23,30,4,35,"config"],[23,36,4,41],[23,38,4,56],[24,4,4,56],[24,8,4,43,"root"],[24,12,4,47],[24,15,4,47,"arguments"],[24,24,4,47],[24,25,4,47,"length"],[24,31,4,47],[24,39,4,47,"arguments"],[24,48,4,47],[24,56,4,47,"undefined"],[24,65,4,47],[24,68,4,47,"arguments"],[24,77,4,47],[24,83,4,50],[24,87,4,54],[25,4,5,2],[25,8,5,8,"validation"],[25,18,5,18],[25,21,5,18,"Object"],[25,27,5,18],[25,28,5,18,"assign"],[25,34,5,18],[26,6,6,4,"path"],[26,10,6,8],[26,12,6,10],[26,20,6,18],[27,6,7,4,"initialRouteName"],[27,22,7,20],[27,24,7,22],[27,32,7,30],[28,6,8,4,"screens"],[28,13,8,11],[28,15,8,13],[29,4,8,21],[29,7,9,8,"root"],[29,11,9,12],[29,14,9,15],[29,18,9,19],[29,21,9,22],[30,6,10,6,"alias"],[30,11,10,11],[30,13,10,13],[30,20,10,20],[31,6,11,6,"exact"],[31,11,11,11],[31,13,11,13],[31,22,11,22],[32,6,12,6,"stringify"],[32,15,12,15],[32,17,12,17],[32,25,12,25],[33,6,13,6,"parse"],[33,11,13,11],[33,13,13,13],[34,4,14,4],[34,5,14,5],[34,6,15,3],[35,4,16,2],[35,8,16,6],[35,15,16,13,"config"],[35,21,16,19],[35,26,16,24],[35,34,16,32],[35,38,16,36,"config"],[35,44,16,42],[35,49,16,47],[35,53,16,51],[35,55,16,53],[36,6,17,4],[36,12,17,10],[36,16,17,14,"Error"],[36,21,17,19],[36,22,17,20],[36,77,17,75,"JSON"],[36,81,17,79],[36,82,17,80,"stringify"],[36,91,17,89],[36,92,17,90,"config"],[36,98,17,96],[36,99,17,97],[36,102,17,100],[36,103,17,101],[37,4,18,2],[38,4,19,2],[38,8,19,8,"validationErrors"],[38,24,19,24],[38,27,19,27,"Object"],[38,33,19,33],[38,34,19,34,"fromEntries"],[38,45,19,45],[38,46,19,46,"Object"],[38,52,19,52],[38,53,19,53,"keys"],[38,57,19,57],[38,58,19,58,"config"],[38,64,19,64],[38,65,19,65],[38,66,19,66,"map"],[38,69,19,69],[38,70,19,70],[38,80,19,70,"key"],[38,83,19,73],[38,85,19,77],[39,6,20,4],[39,10,20,8,"key"],[39,13,20,11],[39,17,20,15,"validation"],[39,27,20,25],[39,29,20,27],[40,8,21,6],[40,12,21,12,"type"],[40,16,21,16],[40,19,21,19,"validation"],[40,29,21,29],[40,30,21,30,"key"],[40,33,21,33],[40,34,21,34],[41,8,22,6],[42,8,23,6],[42,12,23,12,"value"],[42,17,23,17],[42,20,23,20,"config"],[42,26,23,26],[42,27,23,27,"key"],[42,30,23,30],[42,31,23,31],[43,8,24,6],[43,12,24,10,"value"],[43,17,24,15],[43,22,24,20,"undefined"],[43,31,24,29],[43,33,24,31],[44,10,25,8],[44,14,25,12,"type"],[44,18,25,16],[44,23,25,21],[44,30,25,28],[44,32,25,30],[45,12,26,10],[45,16,26,14],[45,17,26,15,"Array"],[45,22,26,20],[45,23,26,21,"isArray"],[45,30,26,28],[45,31,26,29,"value"],[45,36,26,34],[45,37,26,35],[45,39,26,37],[46,14,27,12],[46,21,27,19],[46,22,27,20,"key"],[46,25,27,23],[46,27,27,25],[46,53,27,51],[46,60,27,58,"value"],[46,65,27,63],[46,68,27,66],[46,69,27,67],[47,12,28,10],[48,10,29,8],[48,11,29,9],[48,17,29,15],[48,21,29,19],[48,28,29,26,"value"],[48,33,29,31],[48,38,29,36,"type"],[48,42,29,40],[48,44,29,42],[49,12,30,10],[49,19,30,17],[49,20,30,18,"key"],[49,23,30,21],[49,25,30,23],[49,38,30,36,"type"],[49,42,30,40],[49,53,30,51],[49,60,30,58,"value"],[49,65,30,63],[49,68,30,66],[49,69,30,67],[50,10,31,8],[51,8,32,6],[52,6,33,4],[52,7,33,5],[52,13,33,11],[53,8,34,6],[53,15,34,13],[53,16,34,14,"key"],[53,19,34,17],[53,21,34,19],[53,33,34,31],[53,34,34,32],[54,6,35,4],[55,6,36,4],[55,13,36,11],[55,17,36,15],[56,4,37,2],[56,5,37,3],[56,6,37,4],[56,7,37,5,"filter"],[56,13,37,11],[56,14,37,12,"Boolean"],[56,21,37,19],[56,22,37,20],[56,23,37,21],[57,4,38,2],[57,8,38,6,"Object"],[57,14,38,12],[57,15,38,13,"keys"],[57,19,38,17],[57,20,38,18,"validationErrors"],[57,36,38,34],[57,37,38,35],[57,38,38,36,"length"],[57,44,38,42],[57,46,38,44],[58,6,39,4],[58,12,39,10],[58,16,39,14,"Error"],[58,21,39,19],[58,22,39,20],[58,73,39,71,"formatToList"],[58,85,39,83],[58,86,39,84,"validationErrors"],[58,102,39,100],[58,103,39,101],[58,158,39,156,"formatToList"],[58,170,39,168],[58,171,39,169,"validation"],[58,181,39,179],[58,182,39,180],[58,408,39,406],[58,409,39,407],[59,4,40,2],[60,4,41,2],[60,8,41,6,"root"],[60,12,41,10],[60,16,41,14],[60,22,41,20],[60,26,41,24,"config"],[60,32,41,30],[60,36,41,34],[60,43,41,41,"config"],[60,49,41,47],[60,50,41,48,"path"],[60,54,41,52],[60,59,41,57],[60,67,41,65],[60,71,41,69,"config"],[60,77,41,75],[60,78,41,76,"path"],[60,82,41,80],[60,83,41,81,"includes"],[60,91,41,89],[60,92,41,90],[60,95,41,93],[60,96,41,94],[60,98,41,96],[61,6,42,4],[61,12,42,10],[61,16,42,14,"Error"],[61,21,42,19],[61,22,42,20],[61,45,42,43,"config"],[61,51,42,49],[61,52,42,50,"path"],[61,56,42,54],[61,138,42,136],[61,139,42,137],[62,4,43,2],[63,4,44,2],[63,8,44,6],[63,17,44,15],[63,21,44,19,"config"],[63,27,44,25],[63,31,44,29,"config"],[63,37,44,35],[63,38,44,36,"screens"],[63,45,44,43],[63,47,44,45],[64,6,45,4,"Object"],[64,12,45,10],[64,13,45,11,"entries"],[64,20,45,18],[64,21,45,19,"config"],[64,27,45,25],[64,28,45,26,"screens"],[64,35,45,33],[64,36,45,34],[64,37,45,35,"forEach"],[64,44,45,42],[64,45,45,43],[64,55,45,43,"_ref3"],[64,60,45,43],[64,62,45,59],[65,8,45,59],[65,12,45,59,"_ref4"],[65,17,45,59],[65,24,45,59,"_slicedToArray"],[65,38,45,59],[65,39,45,59,"default"],[65,46,45,59],[65,48,45,59,"_ref3"],[65,53,45,59],[66,10,45,45,"_"],[66,11,45,46],[66,14,45,46,"_ref4"],[66,19,45,46],[67,10,45,48,"value"],[67,15,45,53],[67,18,45,53,"_ref4"],[67,23,45,53],[68,8,46,6],[68,12,46,10],[68,19,46,17,"value"],[68,24,46,22],[68,29,46,27],[68,37,46,35],[68,39,46,37],[69,10,47,8,"validatePathConfig"],[69,28,47,26],[69,29,47,27,"value"],[69,34,47,32],[69,36,47,34],[69,41,47,39],[69,42,47,40],[70,8,48,6],[71,6,49,4],[71,7,49,5],[71,8,49,6],[72,4,50,2],[73,2,51,0],[74,0,51,1],[74,3]],"functionMap":{"names":["<global>","formatToList","Object.entries.map$argument_0","validatePathConfig","Object.keys.map$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;qBCE,mCC,uCD,YD;OGC;sECe;GDkB;2CEQ;KFI;CHE"},"hasCjsExports":false},"type":"js/module"}]}