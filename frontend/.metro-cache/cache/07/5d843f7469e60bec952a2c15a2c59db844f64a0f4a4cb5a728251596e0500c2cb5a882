{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BaseRouter\", {\n    enumerable: true,\n    get: function () {\n      return BaseRouter;\n    }\n  });\n  var _nanoidNonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  var BaseRouter = {\n    getStateForAction: function getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n        case 'REPLACE_PARAMS':\n          {\n            var index = action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return Object.assign({}, state, {\n              routes: state.routes.map(function (r, i) {\n                return i === index ? Object.assign({}, r, {\n                  params: action.type === 'REPLACE_PARAMS' ? action.payload.params : Object.assign({}, r.params, action.payload.params)\n                }) : r;\n              })\n            });\n          }\n        case 'RESET':\n          {\n            var nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(function (route) {\n              return !state.routeNames.includes(route.name);\n            })) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(function (name) {\n                return !state.routeNames.includes(name);\n              })) {\n                return null;\n              }\n              return Object.assign({}, nextState, {\n                routes: nextState.routes.map(function (route) {\n                  return route.key ? route : Object.assign({}, route, {\n                    key: `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`\n                  });\n                })\n              });\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":70,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,8,0,"Object"],[7,8,8,0],[7,9,8,0,"defineProperty"],[7,23,8,0],[7,24,8,0,"exports"],[7,31,8,0],[8,4,8,0,"enumerable"],[8,14,8,0],[9,4,8,0,"get"],[9,7,8,0],[9,18,8,0,"get"],[9,19,8,0],[10,6,8,0],[10,13,8,0,"BaseRouter"],[10,23,8,0],[11,4,8,0],[12,2,8,0],[13,2,3,0],[13,6,3,0,"_nanoidNonSecure"],[13,22,3,0],[13,25,3,0,"require"],[13,32,3,0],[13,33,3,0,"_dependencyMap"],[13,47,3,0],[14,2,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,2,8,7],[18,6,8,13,"BaseRouter"],[18,16,8,23],[18,19,8,26],[19,4,9,2,"getStateForAction"],[19,21,9,19],[19,32,9,2,"getStateForAction"],[19,49,9,19,"getStateForAction"],[19,50,9,20,"state"],[19,55,9,25],[19,57,9,27,"action"],[19,63,9,33],[19,65,9,35],[20,6,10,4],[20,14,10,12,"action"],[20,20,10,18],[20,21,10,19,"type"],[20,25,10,23],[21,8,11,6],[21,13,11,11],[21,25,11,23],[22,8,12,6],[22,13,12,11],[22,29,12,27],[23,10,13,8],[24,12,14,10],[24,16,14,16,"index"],[24,21,14,21],[24,24,14,24,"action"],[24,30,14,30],[24,31,14,31,"source"],[24,37,14,37],[24,40,14,40,"state"],[24,45,14,45],[24,46,14,46,"routes"],[24,52,14,52],[24,53,14,53,"findIndex"],[24,62,14,62],[24,63,14,63],[24,73,14,63,"r"],[24,74,14,64],[25,14,14,64],[25,21,14,68,"r"],[25,22,14,69],[25,23,14,70,"key"],[25,26,14,73],[25,31,14,78,"action"],[25,37,14,84],[25,38,14,85,"source"],[25,44,14,91],[26,12,14,91],[26,14,14,92],[26,17,14,95,"state"],[26,22,14,100],[26,23,14,101,"index"],[26,28,14,106],[27,12,15,10],[27,16,15,14,"index"],[27,21,15,19],[27,26,15,24],[27,27,15,25],[27,28,15,26],[27,30,15,28],[28,14,16,12],[28,21,16,19],[28,25,16,23],[29,12,17,10],[30,12,18,10],[30,19,18,10,"Object"],[30,25,18,10],[30,26,18,10,"assign"],[30,32,18,10],[30,37,19,15,"state"],[30,42,19,20],[31,14,20,12,"routes"],[31,20,20,18],[31,22,20,20,"state"],[31,27,20,25],[31,28,20,26,"routes"],[31,34,20,32],[31,35,20,33,"map"],[31,38,20,36],[31,39,20,37],[31,49,20,38,"r"],[31,50,20,39],[31,52,20,41,"i"],[31,53,20,42],[32,16,20,42],[32,23,20,47,"i"],[32,24,20,48],[32,29,20,53,"index"],[32,34,20,58],[32,37,20,58,"Object"],[32,43,20,58],[32,44,20,58,"assign"],[32,50,20,58],[32,55,21,17,"r"],[32,56,21,18],[33,18,22,14,"params"],[33,24,22,20],[33,26,22,22,"action"],[33,32,22,28],[33,33,22,29,"type"],[33,37,22,33],[33,42,22,38],[33,58,22,54],[33,61,22,57,"action"],[33,67,22,63],[33,68,22,64,"payload"],[33,75,22,71],[33,76,22,72,"params"],[33,82,22,78],[33,85,22,78,"Object"],[33,91,22,78],[33,92,22,78,"assign"],[33,98,22,78],[33,103,23,19,"r"],[33,104,23,20],[33,105,23,21,"params"],[33,111,23,27],[33,113,24,19,"action"],[33,119,24,25],[33,120,24,26,"payload"],[33,127,24,33],[33,128,24,34,"params"],[33,134,24,40],[34,16,25,15],[34,21,26,16,"r"],[34,22,26,17],[35,14,26,17],[36,12,26,18],[37,10,28,8],[38,8,29,6],[38,13,29,11],[38,20,29,18],[39,10,30,8],[40,12,31,10],[40,16,31,16,"nextState"],[40,25,31,25],[40,28,31,28,"action"],[40,34,31,34],[40,35,31,35,"payload"],[40,42,31,42],[41,12,32,10],[41,16,32,14,"nextState"],[41,25,32,23],[41,26,32,24,"routes"],[41,32,32,30],[41,33,32,31,"length"],[41,39,32,37],[41,44,32,42],[41,45,32,43],[41,49,32,47,"nextState"],[41,58,32,56],[41,59,32,57,"routes"],[41,65,32,63],[41,66,32,64,"some"],[41,70,32,68],[41,71,32,69],[41,81,32,69,"route"],[41,86,32,74],[42,14,32,74],[42,21,32,78],[42,22,32,79,"state"],[42,27,32,84],[42,28,32,85,"routeNames"],[42,38,32,95],[42,39,32,96,"includes"],[42,47,32,104],[42,48,32,105,"route"],[42,53,32,110],[42,54,32,111,"name"],[42,58,32,115],[42,59,32,116],[43,12,32,116],[43,14,32,117],[43,16,32,119],[44,14,33,12],[44,21,33,19],[44,25,33,23],[45,12,34,10],[46,12,35,10],[46,16,35,14,"nextState"],[46,25,35,23],[46,26,35,24,"stale"],[46,31,35,29],[46,36,35,34],[46,41,35,39],[46,43,35,41],[47,14,36,12],[47,18,36,16,"state"],[47,23,36,21],[47,24,36,22,"routeNames"],[47,34,36,32],[47,35,36,33,"length"],[47,41,36,39],[47,46,36,44,"nextState"],[47,55,36,53],[47,56,36,54,"routeNames"],[47,66,36,64],[47,67,36,65,"length"],[47,73,36,71],[47,77,36,75,"nextState"],[47,86,36,84],[47,87,36,85,"routeNames"],[47,97,36,95],[47,98,36,96,"some"],[47,102,36,100],[47,103,36,101],[47,113,36,101,"name"],[47,117,36,105],[48,16,36,105],[48,23,36,109],[48,24,36,110,"state"],[48,29,36,115],[48,30,36,116,"routeNames"],[48,40,36,126],[48,41,36,127,"includes"],[48,49,36,135],[48,50,36,136,"name"],[48,54,36,140],[48,55,36,141],[49,14,36,141],[49,16,36,142],[49,18,36,144],[50,16,37,14],[50,23,37,21],[50,27,37,25],[51,14,38,12],[52,14,39,12],[52,21,39,12,"Object"],[52,27,39,12],[52,28,39,12,"assign"],[52,34,39,12],[52,39,40,17,"nextState"],[52,48,40,26],[53,16,41,14,"routes"],[53,22,41,20],[53,24,41,22,"nextState"],[53,33,41,31],[53,34,41,32,"routes"],[53,40,41,38],[53,41,41,39,"map"],[53,44,41,42],[53,45,41,43],[53,55,41,43,"route"],[53,60,41,48],[54,18,41,48],[54,25,41,52,"route"],[54,30,41,57],[54,31,41,58,"key"],[54,34,41,61],[54,37,41,64,"route"],[54,42,41,69],[54,45,41,69,"Object"],[54,51,41,69],[54,52,41,69,"assign"],[54,58,41,69],[54,63,42,19,"route"],[54,68,42,24],[55,20,43,16,"key"],[55,23,43,19],[55,25,43,21],[55,28,43,24,"route"],[55,33,43,29],[55,34,43,30,"name"],[55,38,43,34],[55,42,43,38],[55,46,43,38,"nanoid"],[55,62,43,44],[55,63,43,44,"nanoid"],[55,69,43,44],[55,71,43,45],[55,72,43,46],[56,18,43,48],[56,20,44,15],[57,16,44,15],[58,14,44,16],[59,12,46,10],[60,12,47,10],[60,19,47,17,"nextState"],[60,28,47,26],[61,10,48,8],[62,8,49,6],[63,10,50,8],[63,17,50,15],[63,21,50,19],[64,6,51,4],[65,4,52,2],[65,5,52,3],[66,4,53,2,"shouldActionChangeFocus"],[66,27,53,25],[66,38,53,2,"shouldActionChangeFocus"],[66,61,53,25,"shouldActionChangeFocus"],[66,62,53,26,"action"],[66,68,53,32],[66,70,53,34],[67,6,54,4],[67,13,54,11,"action"],[67,19,54,17],[67,20,54,18,"type"],[67,24,54,22],[67,29,54,27],[67,39,54,37],[67,43,54,41,"action"],[67,49,54,47],[67,50,54,48,"type"],[67,54,54,52],[67,59,54,57],[67,80,54,78],[68,4,55,2],[69,2,56,0],[69,3,56,1],[70,0,56,2],[70,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCK,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"},"hasCjsExports":false},"type":"js/module"}]}