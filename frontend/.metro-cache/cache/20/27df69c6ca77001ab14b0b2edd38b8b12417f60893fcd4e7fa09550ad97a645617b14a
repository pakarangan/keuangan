{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.formatProjectFilePath = formatProjectFilePath;\n  exports.getStackFormattedLocation = getStackFormattedLocation;\n  function formatProjectFilePath(projectRoot, file) {\n    if (file == null) {\n      return '<unknown>';\n    }\n    return pathRelativeToPath(file.replace(/\\\\/g, '/'), projectRoot.replace(/\\\\/g, '/')).replace(/\\?.*$/, '');\n  }\n  function pathRelativeToPath(path, relativeTo) {\n    var sep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n    var relativeToParts = relativeTo.split(sep);\n    var pathParts = path.split(sep);\n    var i = 0;\n    while (i < relativeToParts.length && i < pathParts.length) {\n      if (relativeToParts[i] !== pathParts[i]) {\n        break;\n      }\n      i++;\n    }\n    return pathParts.slice(i).join(sep);\n  }\n  function getStackFormattedLocation(projectRoot, frame) {\n    var column = frame.column != null && parseInt(String(frame.column), 10);\n    var location = formatProjectFilePath(projectRoot, frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n    return location;\n  }\n});","lineCount":33,"map":[[7,2,5,0,"exports"],[7,9,5,0],[7,10,5,0,"formatProjectFilePath"],[7,31,5,0],[7,34,5,0,"formatProjectFilePath"],[7,55,5,0],[8,2,29,0,"exports"],[8,9,29,0],[8,10,29,0,"getStackFormattedLocation"],[8,35,29,0],[8,38,29,0,"getStackFormattedLocation"],[8,63,29,0],[9,2,5,7],[9,11,5,16,"formatProjectFilePath"],[9,32,5,37,"formatProjectFilePath"],[9,33,5,38,"projectRoot"],[9,44,5,57],[9,46,5,59,"file"],[9,50,5,79],[9,52,5,89],[10,4,6,2],[10,8,6,6,"file"],[10,12,6,10],[10,16,6,14],[10,20,6,18],[10,22,6,20],[11,6,7,4],[11,13,7,11],[11,24,7,22],[12,4,8,2],[13,4,10,2],[13,11,10,9,"pathRelativeToPath"],[13,29,10,27],[13,30,10,28,"file"],[13,34,10,32],[13,35,10,33,"replace"],[13,42,10,40],[13,43,10,41],[13,48,10,46],[13,50,10,48],[13,53,10,51],[13,54,10,52],[13,56,10,54,"projectRoot"],[13,67,10,65],[13,68,10,66,"replace"],[13,75,10,73],[13,76,10,74],[13,81,10,79],[13,83,10,81],[13,86,10,84],[13,87,10,85],[13,88,10,86],[13,89,10,87,"replace"],[13,96,10,94],[13,97,11,4],[13,104,11,11],[13,106,12,4],[13,108,13,2],[13,109,13,3],[14,2,14,0],[15,2,16,0],[15,11,16,9,"pathRelativeToPath"],[15,29,16,27,"pathRelativeToPath"],[15,30,16,28,"path"],[15,34,16,40],[15,36,16,42,"relativeTo"],[15,46,16,60],[15,48,16,73],[16,4,16,73],[16,8,16,62,"sep"],[16,11,16,65],[16,14,16,65,"arguments"],[16,23,16,65],[16,24,16,65,"length"],[16,30,16,65],[16,38,16,65,"arguments"],[16,47,16,65],[16,55,16,65,"undefined"],[16,64,16,65],[16,67,16,65,"arguments"],[16,76,16,65],[16,82,16,68],[16,85,16,71],[17,4,17,2],[17,8,17,8,"relativeToParts"],[17,23,17,23],[17,26,17,26,"relativeTo"],[17,36,17,36],[17,37,17,37,"split"],[17,42,17,42],[17,43,17,43,"sep"],[17,46,17,46],[17,47,17,47],[18,4,18,2],[18,8,18,8,"pathParts"],[18,17,18,17],[18,20,18,20,"path"],[18,24,18,24],[18,25,18,25,"split"],[18,30,18,30],[18,31,18,31,"sep"],[18,34,18,34],[18,35,18,35],[19,4,19,2],[19,8,19,6,"i"],[19,9,19,7],[19,12,19,10],[19,13,19,11],[20,4,20,2],[20,11,20,9,"i"],[20,12,20,10],[20,15,20,13,"relativeToParts"],[20,30,20,28],[20,31,20,29,"length"],[20,37,20,35],[20,41,20,39,"i"],[20,42,20,40],[20,45,20,43,"pathParts"],[20,54,20,52],[20,55,20,53,"length"],[20,61,20,59],[20,63,20,61],[21,6,21,4],[21,10,21,8,"relativeToParts"],[21,25,21,23],[21,26,21,24,"i"],[21,27,21,25],[21,28,21,26],[21,33,21,31,"pathParts"],[21,42,21,40],[21,43,21,41,"i"],[21,44,21,42],[21,45,21,43],[21,47,21,45],[22,8,22,6],[23,6,23,4],[24,6,24,4,"i"],[24,7,24,5],[24,9,24,7],[25,4,25,2],[26,4,26,2],[26,11,26,9,"pathParts"],[26,20,26,18],[26,21,26,19,"slice"],[26,26,26,24],[26,27,26,25,"i"],[26,28,26,26],[26,29,26,27],[26,30,26,28,"join"],[26,34,26,32],[26,35,26,33,"sep"],[26,38,26,36],[26,39,26,37],[27,2,27,0],[28,2,29,7],[28,11,29,16,"getStackFormattedLocation"],[28,36,29,41,"getStackFormattedLocation"],[28,37,29,42,"projectRoot"],[28,48,29,61],[28,50,29,63,"frame"],[28,55,29,85],[28,57,29,87],[29,4,30,2],[29,8,30,8,"column"],[29,14,30,14],[29,17,30,17,"frame"],[29,22,30,22],[29,23,30,23,"column"],[29,29,30,29],[29,33,30,33],[29,37,30,37],[29,41,30,41,"parseInt"],[29,49,30,49],[29,50,30,50,"String"],[29,56,30,56],[29,57,30,57,"frame"],[29,62,30,62],[29,63,30,63,"column"],[29,69,30,69],[29,70,30,70],[29,72,30,72],[29,74,30,74],[29,75,30,75],[30,4,31,2],[30,8,31,8,"location"],[30,16,31,16],[30,19,32,4,"formatProjectFilePath"],[30,40,32,25],[30,41,32,26,"projectRoot"],[30,52,32,37],[30,54,32,39,"frame"],[30,59,32,44],[30,60,32,45,"file"],[30,64,32,49],[30,65,32,50],[30,69,33,5,"frame"],[30,74,33,10],[30,75,33,11,"lineNumber"],[30,85,33,21],[30,89,33,25],[30,93,33,29],[30,96,34,8],[30,99,34,11],[30,102,34,14,"frame"],[30,107,34,19],[30,108,34,20,"lineNumber"],[30,118,34,30],[30,122,34,34,"column"],[30,128,34,40],[30,132,34,44],[30,133,34,45,"isNaN"],[30,138,34,50],[30,139,34,51,"column"],[30,145,34,57],[30,146,34,58],[30,149,34,61],[30,152,34,64],[30,156,34,68,"column"],[30,162,34,74],[30,165,34,77],[30,166,34,78],[30,167,34,79],[30,170,34,82],[30,172,34,84],[30,173,34,85],[30,176,35,8],[30,178,35,10],[30,179,35,11],[31,4,37,2],[31,11,37,9,"location"],[31,19,37,17],[32,2,38,0],[33,0,38,1],[33,3]],"functionMap":{"names":["<global>","formatProjectFilePath","pathRelativeToPath","getStackFormattedLocation"],"mappings":"AAA;OCI;CDS;AEE;CFW;OGE;CHS"},"hasCjsExports":false},"type":"js/module"}]}