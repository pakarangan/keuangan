{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  exports.__esModule = true;\n  exports.default = exports.ImageUriCache = void 0;\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  var dataUriPattern = /^data:/;\n  var ImageUriCache = /*#__PURE__*/function () {\n    function ImageUriCache() {\n      _classCallCheck(this, ImageUriCache);\n    }\n    return _createClass(ImageUriCache, null, [{\n      key: \"has\",\n      value: function has(uri) {\n        var entries = ImageUriCache._entries;\n        var isDataUri = dataUriPattern.test(uri);\n        return isDataUri || Boolean(entries[uri]);\n      }\n    }, {\n      key: \"add\",\n      value: function add(uri) {\n        var entries = ImageUriCache._entries;\n        var lastUsedTimestamp = Date.now();\n        if (entries[uri]) {\n          entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n          entries[uri].refCount += 1;\n        } else {\n          entries[uri] = {\n            lastUsedTimestamp: lastUsedTimestamp,\n            refCount: 1\n          };\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(uri) {\n        var entries = ImageUriCache._entries;\n        if (entries[uri]) {\n          entries[uri].refCount -= 1;\n        }\n        // Free up entries when the cache is \"full\"\n        ImageUriCache._cleanUpIfNeeded();\n      }\n    }, {\n      key: \"_cleanUpIfNeeded\",\n      value: function _cleanUpIfNeeded() {\n        var entries = ImageUriCache._entries;\n        var imageUris = Object.keys(entries);\n        if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n          var leastRecentlyUsedKey;\n          var leastRecentlyUsedEntry;\n          imageUris.forEach(function (uri) {\n            var entry = entries[uri];\n            if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n              leastRecentlyUsedKey = uri;\n              leastRecentlyUsedEntry = entry;\n            }\n          });\n          if (leastRecentlyUsedKey) {\n            delete entries[leastRecentlyUsedKey];\n          }\n        }\n      }\n    }]);\n  }();\n  exports.ImageUriCache = ImageUriCache;\n  ImageUriCache._maximumEntries = 256;\n  ImageUriCache._entries = {};\n  var id = 0;\n  var requests = {};\n  var ImageLoader = {\n    abort: function abort(requestId) {\n      var image = requests[\"\" + requestId];\n      if (image) {\n        image.onerror = null;\n        image.onload = null;\n        image = null;\n        delete requests[\"\" + requestId];\n      }\n    },\n    getSize: function getSize(uri, success, failure) {\n      var complete = false;\n      var interval = setInterval(callback, 16);\n      var requestId = ImageLoader.load(uri, callback, errorCallback);\n      function callback() {\n        var image = requests[\"\" + requestId];\n        if (image) {\n          var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n          if (naturalHeight && naturalWidth) {\n            success(naturalWidth, naturalHeight);\n            complete = true;\n          }\n        }\n        if (complete) {\n          ImageLoader.abort(requestId);\n          clearInterval(interval);\n        }\n      }\n      function errorCallback() {\n        if (typeof failure === 'function') {\n          failure();\n        }\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    },\n    has: function has(uri) {\n      return ImageUriCache.has(uri);\n    },\n    load: function load(uri, onLoad, onError) {\n      id += 1;\n      var image = new window.Image();\n      image.onerror = onError;\n      image.onload = function (e) {\n        // avoid blocking the main thread\n        var onDecode = function onDecode() {\n          return onLoad({\n            nativeEvent: e\n          });\n        };\n        if (typeof image.decode === 'function') {\n          // Safari currently throws exceptions when decoding svgs.\n          // We want to catch that error and allow the load handler\n          // to be forwarded to the onLoad handler in this case\n          image.decode().then(onDecode, onDecode);\n        } else {\n          setTimeout(onDecode, 0);\n        }\n      };\n      image.src = uri;\n      requests[\"\" + id] = image;\n      return id;\n    },\n    prefetch: function prefetch(uri) {\n      return new Promise(function (resolve, reject) {\n        ImageLoader.load(uri, function () {\n          // Add the uri to the cache so it can be immediately displayed when used\n          // but also immediately remove it to correctly reflect that it has no active references\n          ImageUriCache.add(uri);\n          ImageUriCache.remove(uri);\n          resolve();\n        }, reject);\n      });\n    },\n    queryCache: function queryCache(uris) {\n      var result = {};\n      uris.forEach(function (u) {\n        if (ImageUriCache.has(u)) {\n          result[u] = 'disk/memory';\n        }\n      });\n      return Promise.resolve(result);\n    }\n  };\n  var _default = exports.default = ImageLoader;\n});","lineCount":167,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[5,86,1,13,"default"],[5,93,1,13],[6,2,3,0,"exports"],[6,9,3,7],[6,10,3,8,"__esModule"],[6,20,3,18],[6,23,3,21],[6,27,3,25],[7,2,4,0,"exports"],[7,9,4,7],[7,10,4,8,"default"],[7,17,4,15],[7,20,4,18,"exports"],[7,27,4,25],[7,28,4,26,"ImageUriCache"],[7,41,4,39],[7,44,4,42],[7,49,4,47],[7,50,4,48],[8,2,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[17,2,14,0],[17,6,14,4,"dataUriPattern"],[17,20,14,18],[17,23,14,21],[17,31,14,29],[18,2,14,30],[18,6,15,6,"ImageUriCache"],[18,19,15,19],[19,4,15,19],[19,13,15,19,"ImageUriCache"],[19,27,15,19],[20,6,15,19,"_classCallCheck"],[20,21,15,19],[20,28,15,19,"ImageUriCache"],[20,41,15,19],[21,4,15,19],[22,4,15,19],[22,11,15,19,"_createClass"],[22,23,15,19],[22,24,15,19,"ImageUriCache"],[22,37,15,19],[23,6,15,19,"key"],[23,9,15,19],[24,6,15,19,"value"],[24,11,15,19],[24,13,16,2],[24,22,16,9,"has"],[24,25,16,12,"has"],[24,26,16,13,"uri"],[24,29,16,16],[24,31,16,18],[25,8,17,4],[25,12,17,8,"entries"],[25,19,17,15],[25,22,17,18,"ImageUriCache"],[25,35,17,31],[25,36,17,32,"_entries"],[25,44,17,40],[26,8,18,4],[26,12,18,8,"isDataUri"],[26,21,18,17],[26,24,18,20,"dataUriPattern"],[26,38,18,34],[26,39,18,35,"test"],[26,43,18,39],[26,44,18,40,"uri"],[26,47,18,43],[26,48,18,44],[27,8,19,4],[27,15,19,11,"isDataUri"],[27,24,19,20],[27,28,19,24,"Boolean"],[27,35,19,31],[27,36,19,32,"entries"],[27,43,19,39],[27,44,19,40,"uri"],[27,47,19,43],[27,48,19,44],[27,49,19,45],[28,6,20,2],[29,4,20,3],[30,6,20,3,"key"],[30,9,20,3],[31,6,20,3,"value"],[31,11,20,3],[31,13,21,2],[31,22,21,9,"add"],[31,25,21,12,"add"],[31,26,21,13,"uri"],[31,29,21,16],[31,31,21,18],[32,8,22,4],[32,12,22,8,"entries"],[32,19,22,15],[32,22,22,18,"ImageUriCache"],[32,35,22,31],[32,36,22,32,"_entries"],[32,44,22,40],[33,8,23,4],[33,12,23,8,"lastUsedTimestamp"],[33,29,23,25],[33,32,23,28,"Date"],[33,36,23,32],[33,37,23,33,"now"],[33,40,23,36],[33,41,23,37],[33,42,23,38],[34,8,24,4],[34,12,24,8,"entries"],[34,19,24,15],[34,20,24,16,"uri"],[34,23,24,19],[34,24,24,20],[34,26,24,22],[35,10,25,6,"entries"],[35,17,25,13],[35,18,25,14,"uri"],[35,21,25,17],[35,22,25,18],[35,23,25,19,"lastUsedTimestamp"],[35,40,25,36],[35,43,25,39,"lastUsedTimestamp"],[35,60,25,56],[36,10,26,6,"entries"],[36,17,26,13],[36,18,26,14,"uri"],[36,21,26,17],[36,22,26,18],[36,23,26,19,"refCount"],[36,31,26,27],[36,35,26,31],[36,36,26,32],[37,8,27,4],[37,9,27,5],[37,15,27,11],[38,10,28,6,"entries"],[38,17,28,13],[38,18,28,14,"uri"],[38,21,28,17],[38,22,28,18],[38,25,28,21],[39,12,29,8,"lastUsedTimestamp"],[39,29,29,25],[39,31,29,8,"lastUsedTimestamp"],[39,48,29,25],[40,12,30,8,"refCount"],[40,20,30,16],[40,22,30,18],[41,10,31,6],[41,11,31,7],[42,8,32,4],[43,6,33,2],[44,4,33,3],[45,6,33,3,"key"],[45,9,33,3],[46,6,33,3,"value"],[46,11,33,3],[46,13,34,2],[46,22,34,9,"remove"],[46,28,34,15,"remove"],[46,29,34,16,"uri"],[46,32,34,19],[46,34,34,21],[47,8,35,4],[47,12,35,8,"entries"],[47,19,35,15],[47,22,35,18,"ImageUriCache"],[47,35,35,31],[47,36,35,32,"_entries"],[47,44,35,40],[48,8,36,4],[48,12,36,8,"entries"],[48,19,36,15],[48,20,36,16,"uri"],[48,23,36,19],[48,24,36,20],[48,26,36,22],[49,10,37,6,"entries"],[49,17,37,13],[49,18,37,14,"uri"],[49,21,37,17],[49,22,37,18],[49,23,37,19,"refCount"],[49,31,37,27],[49,35,37,31],[49,36,37,32],[50,8,38,4],[51,8,39,4],[52,8,40,4,"ImageUriCache"],[52,21,40,17],[52,22,40,18,"_cleanUpIfNeeded"],[52,38,40,34],[52,39,40,35],[52,40,40,36],[53,6,41,2],[54,4,41,3],[55,6,41,3,"key"],[55,9,41,3],[56,6,41,3,"value"],[56,11,41,3],[56,13,42,2],[56,22,42,9,"_cleanUpIfNeeded"],[56,38,42,25,"_cleanUpIfNeeded"],[56,39,42,25],[56,41,42,28],[57,8,43,4],[57,12,43,8,"entries"],[57,19,43,15],[57,22,43,18,"ImageUriCache"],[57,35,43,31],[57,36,43,32,"_entries"],[57,44,43,40],[58,8,44,4],[58,12,44,8,"imageUris"],[58,21,44,17],[58,24,44,20,"Object"],[58,30,44,26],[58,31,44,27,"keys"],[58,35,44,31],[58,36,44,32,"entries"],[58,43,44,39],[58,44,44,40],[59,8,45,4],[59,12,45,8,"imageUris"],[59,21,45,17],[59,22,45,18,"length"],[59,28,45,24],[59,31,45,27],[59,32,45,28],[59,35,45,31,"ImageUriCache"],[59,48,45,44],[59,49,45,45,"_maximumEntries"],[59,64,45,60],[59,66,45,62],[60,10,46,6],[60,14,46,10,"leastRecentlyUsedKey"],[60,34,46,30],[61,10,47,6],[61,14,47,10,"leastRecentlyUsedEntry"],[61,36,47,32],[62,10,48,6,"imageUris"],[62,19,48,15],[62,20,48,16,"forEach"],[62,27,48,23],[62,28,48,24],[62,38,48,24,"uri"],[62,41,48,27],[62,43,48,31],[63,12,49,8],[63,16,49,12,"entry"],[63,21,49,17],[63,24,49,20,"entries"],[63,31,49,27],[63,32,49,28,"uri"],[63,35,49,31],[63,36,49,32],[64,12,50,8],[64,16,50,12],[64,17,50,13],[64,18,50,14,"leastRecentlyUsedEntry"],[64,40,50,36],[64,44,50,40,"entry"],[64,49,50,45],[64,50,50,46,"lastUsedTimestamp"],[64,67,50,63],[64,70,50,66,"leastRecentlyUsedEntry"],[64,92,50,88],[64,93,50,89,"lastUsedTimestamp"],[64,110,50,106],[64,115,50,111,"entry"],[64,120,50,116],[64,121,50,117,"refCount"],[64,129,50,125],[64,134,50,130],[64,135,50,131],[64,137,50,133],[65,14,51,10,"leastRecentlyUsedKey"],[65,34,51,30],[65,37,51,33,"uri"],[65,40,51,36],[66,14,52,10,"leastRecentlyUsedEntry"],[66,36,52,32],[66,39,52,35,"entry"],[66,44,52,40],[67,12,53,8],[68,10,54,6],[68,11,54,7],[68,12,54,8],[69,10,55,6],[69,14,55,10,"leastRecentlyUsedKey"],[69,34,55,30],[69,36,55,32],[70,12,56,8],[70,19,56,15,"entries"],[70,26,56,22],[70,27,56,23,"leastRecentlyUsedKey"],[70,47,56,43],[70,48,56,44],[71,10,57,6],[72,8,58,4],[73,6,59,2],[74,4,59,3],[75,2,59,3],[76,2,61,0,"exports"],[76,9,61,7],[76,10,61,8,"ImageUriCache"],[76,23,61,21],[76,26,61,24,"ImageUriCache"],[76,39,61,37],[77,2,62,0,"ImageUriCache"],[77,15,62,13],[77,16,62,14,"_maximumEntries"],[77,31,62,29],[77,34,62,32],[77,37,62,35],[78,2,63,0,"ImageUriCache"],[78,15,63,13],[78,16,63,14,"_entries"],[78,24,63,22],[78,27,63,25],[78,28,63,26],[78,29,63,27],[79,2,64,0],[79,6,64,4,"id"],[79,8,64,6],[79,11,64,9],[79,12,64,10],[80,2,65,0],[80,6,65,4,"requests"],[80,14,65,12],[80,17,65,15],[80,18,65,16],[80,19,65,17],[81,2,66,0],[81,6,66,4,"ImageLoader"],[81,17,66,15],[81,20,66,18],[82,4,67,2,"abort"],[82,9,67,7],[82,20,67,2,"abort"],[82,25,67,7,"abort"],[82,26,67,8,"requestId"],[82,35,67,17],[82,37,67,19],[83,6,68,4],[83,10,68,8,"image"],[83,15,68,13],[83,18,68,16,"requests"],[83,26,68,24],[83,27,68,25],[83,29,68,27],[83,32,68,30,"requestId"],[83,41,68,39],[83,42,68,40],[84,6,69,4],[84,10,69,8,"image"],[84,15,69,13],[84,17,69,15],[85,8,70,6,"image"],[85,13,70,11],[85,14,70,12,"onerror"],[85,21,70,19],[85,24,70,22],[85,28,70,26],[86,8,71,6,"image"],[86,13,71,11],[86,14,71,12,"onload"],[86,20,71,18],[86,23,71,21],[86,27,71,25],[87,8,72,6,"image"],[87,13,72,11],[87,16,72,14],[87,20,72,18],[88,8,73,6],[88,15,73,13,"requests"],[88,23,73,21],[88,24,73,22],[88,26,73,24],[88,29,73,27,"requestId"],[88,38,73,36],[88,39,73,37],[89,6,74,4],[90,4,75,2],[90,5,75,3],[91,4,76,2,"getSize"],[91,11,76,9],[91,22,76,2,"getSize"],[91,29,76,9,"getSize"],[91,30,76,10,"uri"],[91,33,76,13],[91,35,76,15,"success"],[91,42,76,22],[91,44,76,24,"failure"],[91,51,76,31],[91,53,76,33],[92,6,77,4],[92,10,77,8,"complete"],[92,18,77,16],[92,21,77,19],[92,26,77,24],[93,6,78,4],[93,10,78,8,"interval"],[93,18,78,16],[93,21,78,19,"setInterval"],[93,32,78,30],[93,33,78,31,"callback"],[93,41,78,39],[93,43,78,41],[93,45,78,43],[93,46,78,44],[94,6,79,4],[94,10,79,8,"requestId"],[94,19,79,17],[94,22,79,20,"ImageLoader"],[94,33,79,31],[94,34,79,32,"load"],[94,38,79,36],[94,39,79,37,"uri"],[94,42,79,40],[94,44,79,42,"callback"],[94,52,79,50],[94,54,79,52,"errorCallback"],[94,67,79,65],[94,68,79,66],[95,6,80,4],[95,15,80,13,"callback"],[95,23,80,21,"callback"],[95,24,80,21],[95,26,80,24],[96,8,81,6],[96,12,81,10,"image"],[96,17,81,15],[96,20,81,18,"requests"],[96,28,81,26],[96,29,81,27],[96,31,81,29],[96,34,81,32,"requestId"],[96,43,81,41],[96,44,81,42],[97,8,82,6],[97,12,82,10,"image"],[97,17,82,15],[97,19,82,17],[98,10,83,8],[98,14,83,12,"naturalHeight"],[98,27,83,25],[98,30,83,28,"image"],[98,35,83,33],[98,36,83,34,"naturalHeight"],[98,49,83,47],[99,12,84,10,"naturalWidth"],[99,24,84,22],[99,27,84,25,"image"],[99,32,84,30],[99,33,84,31,"naturalWidth"],[99,45,84,43],[100,10,85,8],[100,14,85,12,"naturalHeight"],[100,27,85,25],[100,31,85,29,"naturalWidth"],[100,43,85,41],[100,45,85,43],[101,12,86,10,"success"],[101,19,86,17],[101,20,86,18,"naturalWidth"],[101,32,86,30],[101,34,86,32,"naturalHeight"],[101,47,86,45],[101,48,86,46],[102,12,87,10,"complete"],[102,20,87,18],[102,23,87,21],[102,27,87,25],[103,10,88,8],[104,8,89,6],[105,8,90,6],[105,12,90,10,"complete"],[105,20,90,18],[105,22,90,20],[106,10,91,8,"ImageLoader"],[106,21,91,19],[106,22,91,20,"abort"],[106,27,91,25],[106,28,91,26,"requestId"],[106,37,91,35],[106,38,91,36],[107,10,92,8,"clearInterval"],[107,23,92,21],[107,24,92,22,"interval"],[107,32,92,30],[107,33,92,31],[108,8,93,6],[109,6,94,4],[110,6,95,4],[110,15,95,13,"errorCallback"],[110,28,95,26,"errorCallback"],[110,29,95,26],[110,31,95,29],[111,8,96,6],[111,12,96,10],[111,19,96,17,"failure"],[111,26,96,24],[111,31,96,29],[111,41,96,39],[111,43,96,41],[112,10,97,8,"failure"],[112,17,97,15],[112,18,97,16],[112,19,97,17],[113,8,98,6],[114,8,99,6,"ImageLoader"],[114,19,99,17],[114,20,99,18,"abort"],[114,25,99,23],[114,26,99,24,"requestId"],[114,35,99,33],[114,36,99,34],[115,8,100,6,"clearInterval"],[115,21,100,19],[115,22,100,20,"interval"],[115,30,100,28],[115,31,100,29],[116,6,101,4],[117,4,102,2],[117,5,102,3],[118,4,103,2,"has"],[118,7,103,5],[118,18,103,2,"has"],[118,21,103,5,"has"],[118,22,103,6,"uri"],[118,25,103,9],[118,27,103,11],[119,6,104,4],[119,13,104,11,"ImageUriCache"],[119,26,104,24],[119,27,104,25,"has"],[119,30,104,28],[119,31,104,29,"uri"],[119,34,104,32],[119,35,104,33],[120,4,105,2],[120,5,105,3],[121,4,106,2,"load"],[121,8,106,6],[121,19,106,2,"load"],[121,23,106,6,"load"],[121,24,106,7,"uri"],[121,27,106,10],[121,29,106,12,"onLoad"],[121,35,106,18],[121,37,106,20,"onError"],[121,44,106,27],[121,46,106,29],[122,6,107,4,"id"],[122,8,107,6],[122,12,107,10],[122,13,107,11],[123,6,108,4],[123,10,108,8,"image"],[123,15,108,13],[123,18,108,16],[123,22,108,20,"window"],[123,28,108,26],[123,29,108,27,"Image"],[123,34,108,32],[123,35,108,33],[123,36,108,34],[124,6,109,4,"image"],[124,11,109,9],[124,12,109,10,"onerror"],[124,19,109,17],[124,22,109,20,"onError"],[124,29,109,27],[125,6,110,4,"image"],[125,11,110,9],[125,12,110,10,"onload"],[125,18,110,16],[125,21,110,19],[125,31,110,19,"e"],[125,32,110,20],[125,34,110,24],[126,8,111,6],[127,8,112,6],[127,12,112,10,"onDecode"],[127,20,112,18],[127,23,112,21],[127,32,112,10,"onDecode"],[127,40,112,18,"onDecode"],[127,41,112,18],[128,10,112,18],[128,17,112,27,"onLoad"],[128,23,112,33],[128,24,112,34],[129,12,113,8,"nativeEvent"],[129,23,113,19],[129,25,113,21,"e"],[130,10,114,6],[130,11,114,7],[130,12,114,8],[131,8,114,8],[132,8,115,6],[132,12,115,10],[132,19,115,17,"image"],[132,24,115,22],[132,25,115,23,"decode"],[132,31,115,29],[132,36,115,34],[132,46,115,44],[132,48,115,46],[133,10,116,8],[134,10,117,8],[135,10,118,8],[136,10,119,8,"image"],[136,15,119,13],[136,16,119,14,"decode"],[136,22,119,20],[136,23,119,21],[136,24,119,22],[136,25,119,23,"then"],[136,29,119,27],[136,30,119,28,"onDecode"],[136,38,119,36],[136,40,119,38,"onDecode"],[136,48,119,46],[136,49,119,47],[137,8,120,6],[137,9,120,7],[137,15,120,13],[138,10,121,8,"setTimeout"],[138,20,121,18],[138,21,121,19,"onDecode"],[138,29,121,27],[138,31,121,29],[138,32,121,30],[138,33,121,31],[139,8,122,6],[140,6,123,4],[140,7,123,5],[141,6,124,4,"image"],[141,11,124,9],[141,12,124,10,"src"],[141,15,124,13],[141,18,124,16,"uri"],[141,21,124,19],[142,6,125,4,"requests"],[142,14,125,12],[142,15,125,13],[142,17,125,15],[142,20,125,18,"id"],[142,22,125,20],[142,23,125,21],[142,26,125,24,"image"],[142,31,125,29],[143,6,126,4],[143,13,126,11,"id"],[143,15,126,13],[144,4,127,2],[144,5,127,3],[145,4,128,2,"prefetch"],[145,12,128,10],[145,23,128,2,"prefetch"],[145,31,128,10,"prefetch"],[145,32,128,11,"uri"],[145,35,128,14],[145,37,128,16],[146,6,129,4],[146,13,129,11],[146,17,129,15,"Promise"],[146,24,129,22],[146,25,129,23],[146,35,129,24,"resolve"],[146,42,129,31],[146,44,129,33,"reject"],[146,50,129,39],[146,52,129,44],[147,8,130,6,"ImageLoader"],[147,19,130,17],[147,20,130,18,"load"],[147,24,130,22],[147,25,130,23,"uri"],[147,28,130,26],[147,30,130,28],[147,42,130,34],[148,10,131,8],[149,10,132,8],[150,10,133,8,"ImageUriCache"],[150,23,133,21],[150,24,133,22,"add"],[150,27,133,25],[150,28,133,26,"uri"],[150,31,133,29],[150,32,133,30],[151,10,134,8,"ImageUriCache"],[151,23,134,21],[151,24,134,22,"remove"],[151,30,134,28],[151,31,134,29,"uri"],[151,34,134,32],[151,35,134,33],[152,10,135,8,"resolve"],[152,17,135,15],[152,18,135,16],[152,19,135,17],[153,8,136,6],[153,9,136,7],[153,11,136,9,"reject"],[153,17,136,15],[153,18,136,16],[154,6,137,4],[154,7,137,5],[154,8,137,6],[155,4,138,2],[155,5,138,3],[156,4,139,2,"queryCache"],[156,14,139,12],[156,25,139,2,"queryCache"],[156,35,139,12,"queryCache"],[156,36,139,13,"uris"],[156,40,139,17],[156,42,139,19],[157,6,140,4],[157,10,140,8,"result"],[157,16,140,14],[157,19,140,17],[157,20,140,18],[157,21,140,19],[158,6,141,4,"uris"],[158,10,141,8],[158,11,141,9,"forEach"],[158,18,141,16],[158,19,141,17],[158,29,141,17,"u"],[158,30,141,18],[158,32,141,22],[159,8,142,6],[159,12,142,10,"ImageUriCache"],[159,25,142,23],[159,26,142,24,"has"],[159,29,142,27],[159,30,142,28,"u"],[159,31,142,29],[159,32,142,30],[159,34,142,32],[160,10,143,8,"result"],[160,16,143,14],[160,17,143,15,"u"],[160,18,143,16],[160,19,143,17],[160,22,143,20],[160,35,143,33],[161,8,144,6],[162,6,145,4],[162,7,145,5],[162,8,145,6],[163,6,146,4],[163,13,146,11,"Promise"],[163,20,146,18],[163,21,146,19,"resolve"],[163,28,146,26],[163,29,146,27,"result"],[163,35,146,33],[163,36,146,34],[164,4,147,2],[165,2,148,0],[165,3,148,1],[166,2,149,0],[166,6,149,4,"_default"],[166,14,149,12],[166,17,149,15,"exports"],[166,24,149,22],[166,25,149,23,"default"],[166,32,149,30],[166,35,149,33,"ImageLoader"],[166,46,149,44],[167,0,149,45],[167,3]],"functionMap":{"names":["<global>","ImageUriCache","ImageUriCache.has","ImageUriCache.add","ImageUriCache.remove","ImageUriCache._cleanUpIfNeeded","imageUris.forEach$argument_0","ImageLoader.abort","ImageLoader.getSize","callback","errorCallback","ImageLoader.has","ImageLoader.load","image.onload","onDecode","ImageLoader.prefetch","Promise$argument_0","ImageLoader.load$argument_1","ImageLoader.queryCache","uris.forEach$argument_0"],"mappings":"AAA;ACc;ECC;GDI;EEC;GFY;EGC;GHO;EIC;wBCM;ODM;GJK;CDC;EOO;GPQ;EQC;ICI;KDc;IEC;KFM;GRC;EWC;GXE;EYC;mBCI;qBCE;QDE;KDS;GZI;EeC;uBCC;4BCC;ODM;KDC;GfC;EkBC;iBCE;KDI;GlBE"},"hasCjsExports":true},"type":"js/module"}]}